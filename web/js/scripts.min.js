!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){"use strict";var n=[],i=e.document,r=Object.getPrototypeOf,o=n.slice,s=n.concat,a=n.push,l=n.indexOf,u={},c=u.toString,f=u.hasOwnProperty,d=f.toString,h=d.call(Object),p={};function g(e,t){var n=(t=t||i).createElement("script");n.text=e,t.head.appendChild(n).parentNode.removeChild(n)}var m="3.1.1",v=function(e,t){return new v.fn.init(e,t)},y=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,_=/^-ms-/,b=/-([a-z])/g,E=function(e,t){return t.toUpperCase()};function T(e){var t=!!e&&"length"in e&&e.length,n=v.type(e);return"function"!==n&&!v.isWindow(e)&&("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e)}v.fn=v.prototype={jquery:m,constructor:v,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=v.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return v.each(this,e)},map:function(e){return this.pushStack(v.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(n>=0&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:a,sort:n.sort,splice:n.splice},v.extend=v.fn.extend=function(){var e,t,n,i,r,o,s=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[a]||{},a++),"object"==typeof s||v.isFunction(s)||(s={}),a===l&&(s=this,a--);a<l;a++)if(null!=(e=arguments[a]))for(t in e)n=s[t],s!==(i=e[t])&&(u&&i&&(v.isPlainObject(i)||(r=v.isArray(i)))?(r?(r=!1,o=n&&v.isArray(n)?n:[]):o=n&&v.isPlainObject(n)?n:{},s[t]=v.extend(u,o,i)):void 0!==i&&(s[t]=i));return s},v.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===v.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=v.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==c.call(e)||(t=r(e))&&("function"!=typeof(n=f.call(t,"constructor")&&t.constructor)||d.call(n)!==h))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?u[c.call(e)]||"object":typeof e},globalEval:function(e){g(e)},camelCase:function(e){return e.replace(_,"ms-").replace(b,E)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var n,i=0;if(T(e))for(n=e.length;i<n&&!1!==t.call(e[i],i,e[i]);i++);else for(i in e)if(!1===t.call(e[i],i,e[i]))break;return e},trim:function(e){return null==e?"":(e+"").replace(y,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(T(Object(e))?v.merge(n,"string"==typeof e?[e]:e):a.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:l.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,r=e.length;i<n;i++)e[r++]=t[i];return e.length=r,e},grep:function(e,t,n){for(var i=[],r=0,o=e.length,s=!n;r<o;r++)!t(e[r],r)!==s&&i.push(e[r]);return i},map:function(e,t,n){var i,r,o=0,a=[];if(T(e))for(i=e.length;o<i;o++)null!=(r=t(e[o],o,n))&&a.push(r);else for(o in e)null!=(r=t(e[o],o,n))&&a.push(r);return s.apply([],a)},guid:1,proxy:function(e,t){var n,i,r;if("string"==typeof t&&(n=e[t],t=e,e=n),v.isFunction(e))return i=o.call(arguments,2),(r=function(){return e.apply(t||this,i.concat(o.call(arguments)))}).guid=e.guid=e.guid||v.guid++,r},now:Date.now,support:p}),"function"==typeof Symbol&&(v.fn[Symbol.iterator]=n[Symbol.iterator]),v.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){u["[object "+t+"]"]=t.toLowerCase()});var w=function(e){var t,n,i,r,o,s,a,l,u,c,f,d,h,p,g,m,v,y,_,b="sizzle"+1*new Date,E=e.document,T=0,w=0,x=se(),C=se(),S=se(),D=function(e,t){return e===t&&(f=!0),0},k={}.hasOwnProperty,A=[],I=A.pop,N=A.push,O=A.push,j=A.slice,L=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},P="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",H="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",R="\\["+H+"*("+M+")(?:"+H+"*([*^$|!~]?=)"+H+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+M+"))|)"+H+"*\\]",F=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",W=new RegExp(H+"+","g"),q=new RegExp("^"+H+"+|((?:^|[^\\\\])(?:\\\\.)*)"+H+"+$","g"),B=new RegExp("^"+H+"*,"+H+"*"),U=new RegExp("^"+H+"*([>+~]|"+H+")"+H+"*"),$=new RegExp("="+H+"*([^\\]'\"]*?)"+H+"*\\]","g"),Q=new RegExp(F),K=new RegExp("^"+M+"$"),V={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M+"|[*])"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+H+"*(even|odd|(([+-]|)(\\d*)n|)"+H+"*(?:([+-]|)"+H+"*(\\d+)|))"+H+"*\\)|)","i"),bool:new RegExp("^(?:"+P+")$","i"),needsContext:new RegExp("^"+H+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+H+"*((?:-\\d)?\\d*)"+H+"*\\)|)(?=[^-]|$)","i")},G=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,z=/^[^{]+\{\s*\[native \w/,X=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,J=/[+~]/,Z=new RegExp("\\\\([\\da-f]{1,6}"+H+"?|("+H+")|.)","ig"),ee=function(e,t,n){var i="0x"+t-65536;return i!=i||n?t:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},te=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ne=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},ie=function(){d()},re=ye(function(e){return!0===e.disabled&&("form"in e||"label"in e)},{dir:"parentNode",next:"legend"});try{O.apply(A=j.call(E.childNodes),E.childNodes),A[E.childNodes.length].nodeType}catch(e){O={apply:A.length?function(e,t){N.apply(e,j.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}function oe(e,t,i,r){var o,a,u,c,f,p,v,y=t&&t.ownerDocument,T=t?t.nodeType:9;if(i=i||[],"string"!=typeof e||!e||1!==T&&9!==T&&11!==T)return i;if(!r&&((t?t.ownerDocument||t:E)!==h&&d(t),t=t||h,g)){if(11!==T&&(f=X.exec(e)))if(o=f[1]){if(9===T){if(!(u=t.getElementById(o)))return i;if(u.id===o)return i.push(u),i}else if(y&&(u=y.getElementById(o))&&_(t,u)&&u.id===o)return i.push(u),i}else{if(f[2])return O.apply(i,t.getElementsByTagName(e)),i;if((o=f[3])&&n.getElementsByClassName&&t.getElementsByClassName)return O.apply(i,t.getElementsByClassName(o)),i}if(n.qsa&&!S[e+" "]&&(!m||!m.test(e))){if(1!==T)y=t,v=e;else if("object"!==t.nodeName.toLowerCase()){for((c=t.getAttribute("id"))?c=c.replace(te,ne):t.setAttribute("id",c=b),a=(p=s(e)).length;a--;)p[a]="#"+c+" "+ve(p[a]);v=p.join(","),y=J.test(e)&&ge(t.parentNode)||t}if(v)try{return O.apply(i,y.querySelectorAll(v)),i}catch(e){}finally{c===b&&t.removeAttribute("id")}}}return l(e.replace(q,"$1"),t,i,r)}function se(){var e=[];return function t(n,r){return e.push(n+" ")>i.cacheLength&&delete t[e.shift()],t[n+" "]=r}}function ae(e){return e[b]=!0,e}function le(e){var t=h.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ue(e,t){for(var n=e.split("|"),r=n.length;r--;)i.attrHandle[n[r]]=t}function ce(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function fe(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function de(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function he(e){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&re(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function pe(e){return ae(function(t){return t=+t,ae(function(n,i){for(var r,o=e([],n.length,t),s=o.length;s--;)n[r=o[s]]&&(n[r]=!(i[r]=n[r]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(t in n=oe.support={},o=oe.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},d=oe.setDocument=function(e){var t,r,s=e?e.ownerDocument||e:E;return s!==h&&9===s.nodeType&&s.documentElement?(p=(h=s).documentElement,g=!o(h),E!==h&&(r=h.defaultView)&&r.top!==r&&(r.addEventListener?r.addEventListener("unload",ie,!1):r.attachEvent&&r.attachEvent("onunload",ie)),n.attributes=le(function(e){return e.className="i",!e.getAttribute("className")}),n.getElementsByTagName=le(function(e){return e.appendChild(h.createComment("")),!e.getElementsByTagName("*").length}),n.getElementsByClassName=z.test(h.getElementsByClassName),n.getById=le(function(e){return p.appendChild(e).id=b,!h.getElementsByName||!h.getElementsByName(b).length}),n.getById?(i.filter.ID=function(e){var t=e.replace(Z,ee);return function(e){return e.getAttribute("id")===t}},i.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n=t.getElementById(e);return n?[n]:[]}}):(i.filter.ID=function(e){var t=e.replace(Z,ee);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},i.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n,i,r,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];for(r=t.getElementsByName(e),i=0;o=r[i++];)if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),i.find.TAG=n.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):n.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],r=0,o=t.getElementsByTagName(e);if("*"===e){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},i.find.CLASS=n.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&g)return t.getElementsByClassName(e)},v=[],m=[],(n.qsa=z.test(h.querySelectorAll))&&(le(function(e){p.appendChild(e).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+H+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+H+"*(?:value|"+P+")"),e.querySelectorAll("[id~="+b+"-]").length||m.push("~="),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+b+"+*").length||m.push(".#.+[+~]")}),le(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=h.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+H+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),p.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:")})),(n.matchesSelector=z.test(y=p.matches||p.webkitMatchesSelector||p.mozMatchesSelector||p.oMatchesSelector||p.msMatchesSelector))&&le(function(e){n.disconnectedMatch=y.call(e,"*"),y.call(e,"[s!='']:x"),v.push("!=",F)}),m=m.length&&new RegExp(m.join("|")),v=v.length&&new RegExp(v.join("|")),t=z.test(p.compareDocumentPosition),_=t||z.test(p.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return f=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!n.sortDetached&&t.compareDocumentPosition(e)===i?e===h||e.ownerDocument===E&&_(E,e)?-1:t===h||t.ownerDocument===E&&_(E,t)?1:c?L(c,e)-L(c,t):0:4&i?-1:1)}:function(e,t){if(e===t)return f=!0,0;var n,i=0,r=e.parentNode,o=t.parentNode,s=[e],a=[t];if(!r||!o)return e===h?-1:t===h?1:r?-1:o?1:c?L(c,e)-L(c,t):0;if(r===o)return ce(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)a.unshift(n);for(;s[i]===a[i];)i++;return i?ce(s[i],a[i]):s[i]===E?-1:a[i]===E?1:0},h):h},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if((e.ownerDocument||e)!==h&&d(e),t=t.replace($,"='$1']"),n.matchesSelector&&g&&!S[t+" "]&&(!v||!v.test(t))&&(!m||!m.test(t)))try{var i=y.call(e,t);if(i||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){}return oe(t,h,null,[e]).length>0},oe.contains=function(e,t){return(e.ownerDocument||e)!==h&&d(e),_(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!==h&&d(e);var r=i.attrHandle[t.toLowerCase()],o=r&&k.call(i.attrHandle,t.toLowerCase())?r(e,t,!g):void 0;return void 0!==o?o:n.attributes||!g?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},oe.escape=function(e){return(e+"").replace(te,ne)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,i=[],r=0,o=0;if(f=!n.detectDuplicates,c=!n.sortStable&&e.slice(0),e.sort(D),f){for(;t=e[o++];)t===e[o]&&(r=i.push(o));for(;r--;)e.splice(i[r],1)}return c=null,e},r=oe.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=r(t);return n},(i=oe.selectors={cacheLength:50,createPseudo:ae,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(Z,ee),e[3]=(e[3]||e[4]||e[5]||"").replace(Z,ee),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return V.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&Q.test(n)&&(t=s(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(Z,ee).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=x[e+" "];return t||(t=new RegExp("(^|"+H+")"+e+"("+H+"|$)"))&&x(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(i){var r=oe.attr(i,e);return null==r?"!="===t:!t||(r+="","="===t?r===n:"!="===t?r!==n:"^="===t?n&&0===r.indexOf(n):"*="===t?n&&r.indexOf(n)>-1:"$="===t?n&&r.slice(-n.length)===n:"~="===t?(" "+r.replace(W," ")+" ").indexOf(n)>-1:"|="===t&&(r===n||r.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,n,i,r){var o="nth"!==e.slice(0,3),s="last"!==e.slice(-4),a="of-type"===t;return 1===i&&0===r?function(e){return!!e.parentNode}:function(t,n,l){var u,c,f,d,h,p,g=o!==s?"nextSibling":"previousSibling",m=t.parentNode,v=a&&t.nodeName.toLowerCase(),y=!l&&!a,_=!1;if(m){if(o){for(;g;){for(d=t;d=d[g];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;p=g="only"===e&&!p&&"nextSibling"}return!0}if(p=[s?m.firstChild:m.lastChild],s&&y){for(_=(h=(u=(c=(f=(d=m)[b]||(d[b]={}))[d.uniqueID]||(f[d.uniqueID]={}))[e]||[])[0]===T&&u[1])&&u[2],d=h&&m.childNodes[h];d=++h&&d&&d[g]||(_=h=0)||p.pop();)if(1===d.nodeType&&++_&&d===t){c[e]=[T,h,_];break}}else if(y&&(_=h=(u=(c=(f=(d=t)[b]||(d[b]={}))[d.uniqueID]||(f[d.uniqueID]={}))[e]||[])[0]===T&&u[1]),!1===_)for(;(d=++h&&d&&d[g]||(_=h=0)||p.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++_||(y&&((c=(f=d[b]||(d[b]={}))[d.uniqueID]||(f[d.uniqueID]={}))[e]=[T,_]),d!==t)););return(_-=r)===i||_%i==0&&_/i>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return r[b]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?ae(function(e,n){for(var i,o=r(e,t),s=o.length;s--;)e[i=L(e,o[s])]=!(n[i]=o[s])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ae(function(e){var t=[],n=[],i=a(e.replace(q,"$1"));return i[b]?ae(function(e,t,n,r){for(var o,s=i(e,null,r,[]),a=e.length;a--;)(o=s[a])&&(e[a]=!(t[a]=o))}):function(e,r,o){return t[0]=e,i(t,null,o,n),t[0]=null,!n.pop()}}),has:ae(function(e){return function(t){return oe(e,t).length>0}}),contains:ae(function(e){return e=e.replace(Z,ee),function(t){return(t.textContent||t.innerText||r(t)).indexOf(e)>-1}}),lang:ae(function(e){return K.test(e||"")||oe.error("unsupported lang: "+e),e=e.replace(Z,ee).toLowerCase(),function(t){var n;do{if(n=g?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===p},focus:function(e){return e===h.activeElement&&(!h.hasFocus||h.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:he(!1),disabled:he(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return Y.test(e.nodeName)},input:function(e){return G.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:pe(function(){return[0]}),last:pe(function(e,t){return[t-1]}),eq:pe(function(e,t,n){return[n<0?n+t:n]}),even:pe(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:pe(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:pe(function(e,t,n){for(var i=n<0?n+t:n;--i>=0;)e.push(i);return e}),gt:pe(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}}).pseudos.nth=i.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[t]=fe(t);for(t in{submit:!0,reset:!0})i.pseudos[t]=de(t);function me(){}function ve(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function ye(e,t,n){var i=t.dir,r=t.next,o=r||i,s=n&&"parentNode"===o,a=w++;return t.first?function(t,n,r){for(;t=t[i];)if(1===t.nodeType||s)return e(t,n,r);return!1}:function(t,n,l){var u,c,f,d=[T,a];if(l){for(;t=t[i];)if((1===t.nodeType||s)&&e(t,n,l))return!0}else for(;t=t[i];)if(1===t.nodeType||s)if(c=(f=t[b]||(t[b]={}))[t.uniqueID]||(f[t.uniqueID]={}),r&&r===t.nodeName.toLowerCase())t=t[i]||t;else{if((u=c[o])&&u[0]===T&&u[1]===a)return d[2]=u[2];if(c[o]=d,d[2]=e(t,n,l))return!0}return!1}}function _e(e){return e.length>1?function(t,n,i){for(var r=e.length;r--;)if(!e[r](t,n,i))return!1;return!0}:e[0]}function be(e,t,n,i,r){for(var o,s=[],a=0,l=e.length,u=null!=t;a<l;a++)(o=e[a])&&(n&&!n(o,i,r)||(s.push(o),u&&t.push(a)));return s}function Ee(e,t,n,i,r,o){return i&&!i[b]&&(i=Ee(i)),r&&!r[b]&&(r=Ee(r,o)),ae(function(o,s,a,l){var u,c,f,d=[],h=[],p=s.length,g=o||function(e,t,n){for(var i=0,r=t.length;i<r;i++)oe(e,t[i],n);return n}(t||"*",a.nodeType?[a]:a,[]),m=!e||!o&&t?g:be(g,d,e,a,l),v=n?r||(o?e:p||i)?[]:s:m;if(n&&n(m,v,a,l),i)for(u=be(v,h),i(u,[],a,l),c=u.length;c--;)(f=u[c])&&(v[h[c]]=!(m[h[c]]=f));if(o){if(r||e){if(r){for(u=[],c=v.length;c--;)(f=v[c])&&u.push(m[c]=f);r(null,v=[],u,l)}for(c=v.length;c--;)(f=v[c])&&(u=r?L(o,f):d[c])>-1&&(o[u]=!(s[u]=f))}}else v=be(v===s?v.splice(p,v.length):v),r?r(null,s,v,l):O.apply(s,v)})}function Te(e){for(var t,n,r,o=e.length,s=i.relative[e[0].type],a=s||i.relative[" "],l=s?1:0,c=ye(function(e){return e===t},a,!0),f=ye(function(e){return L(t,e)>-1},a,!0),d=[function(e,n,i){var r=!s&&(i||n!==u)||((t=n).nodeType?c(e,n,i):f(e,n,i));return t=null,r}];l<o;l++)if(n=i.relative[e[l].type])d=[ye(_e(d),n)];else{if((n=i.filter[e[l].type].apply(null,e[l].matches))[b]){for(r=++l;r<o&&!i.relative[e[r].type];r++);return Ee(l>1&&_e(d),l>1&&ve(e.slice(0,l-1).concat({value:" "===e[l-2].type?"*":""})).replace(q,"$1"),n,l<r&&Te(e.slice(l,r)),r<o&&Te(e=e.slice(r)),r<o&&ve(e))}d.push(n)}return _e(d)}return me.prototype=i.filters=i.pseudos,i.setFilters=new me,s=oe.tokenize=function(e,t){var n,r,o,s,a,l,u,c=C[e+" "];if(c)return t?0:c.slice(0);for(a=e,l=[],u=i.preFilter;a;){for(s in n&&!(r=B.exec(a))||(r&&(a=a.slice(r[0].length)||a),l.push(o=[])),n=!1,(r=U.exec(a))&&(n=r.shift(),o.push({value:n,type:r[0].replace(q," ")}),a=a.slice(n.length)),i.filter)!(r=V[s].exec(a))||u[s]&&!(r=u[s](r))||(n=r.shift(),o.push({value:n,type:s,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?oe.error(e):C(e,l).slice(0)},a=oe.compile=function(e,t){var n,r,o,a,l,c,f=[],p=[],m=S[e+" "];if(!m){for(t||(t=s(e)),n=t.length;n--;)(m=Te(t[n]))[b]?f.push(m):p.push(m);(m=S(e,(r=p,a=(o=f).length>0,l=r.length>0,c=function(e,t,n,s,c){var f,p,m,v=0,y="0",_=e&&[],b=[],E=u,w=e||l&&i.find.TAG("*",c),x=T+=null==E?1:Math.random()||.1,C=w.length;for(c&&(u=t===h||t||c);y!==C&&null!=(f=w[y]);y++){if(l&&f){for(p=0,t||f.ownerDocument===h||(d(f),n=!g);m=r[p++];)if(m(f,t||h,n)){s.push(f);break}c&&(T=x)}a&&((f=!m&&f)&&v--,e&&_.push(f))}if(v+=y,a&&y!==v){for(p=0;m=o[p++];)m(_,b,t,n);if(e){if(v>0)for(;y--;)_[y]||b[y]||(b[y]=I.call(s));b=be(b)}O.apply(s,b),c&&!e&&b.length>0&&v+o.length>1&&oe.uniqueSort(s)}return c&&(T=x,u=E),_},a?ae(c):c))).selector=e}return m},l=oe.select=function(e,t,n,r){var o,l,u,c,f,d="function"==typeof e&&e,h=!r&&s(e=d.selector||e);if(n=n||[],1===h.length){if((l=h[0]=h[0].slice(0)).length>2&&"ID"===(u=l[0]).type&&9===t.nodeType&&g&&i.relative[l[1].type]){if(!(t=(i.find.ID(u.matches[0].replace(Z,ee),t)||[])[0]))return n;d&&(t=t.parentNode),e=e.slice(l.shift().value.length)}for(o=V.needsContext.test(e)?0:l.length;o--&&(u=l[o],!i.relative[c=u.type]);)if((f=i.find[c])&&(r=f(u.matches[0].replace(Z,ee),J.test(l[0].type)&&ge(t.parentNode)||t))){if(l.splice(o,1),!(e=r.length&&ve(l)))return O.apply(n,r),n;break}}return(d||a(e,h))(r,t,!g,n,!t||J.test(e)&&ge(t.parentNode)||t),n},n.sortStable=b.split("").sort(D).join("")===b,n.detectDuplicates=!!f,d(),n.sortDetached=le(function(e){return 1&e.compareDocumentPosition(h.createElement("fieldset"))}),le(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ue("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),n.attributes&&le(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ue("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),le(function(e){return null==e.getAttribute("disabled")})||ue(P,function(e,t,n){var i;if(!n)return!0===e[t]?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),oe}(e);v.find=w,v.expr=w.selectors,v.expr[":"]=v.expr.pseudos,v.uniqueSort=v.unique=w.uniqueSort,v.text=w.getText,v.isXMLDoc=w.isXML,v.contains=w.contains,v.escapeSelector=w.escape;var x=function(e,t,n){for(var i=[],r=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&v(e).is(n))break;i.push(e)}return i},C=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},S=v.expr.match.needsContext,D=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,k=/^.[^:#\[\.,]*$/;function A(e,t,n){return v.isFunction(t)?v.grep(e,function(e,i){return!!t.call(e,i,e)!==n}):t.nodeType?v.grep(e,function(e){return e===t!==n}):"string"!=typeof t?v.grep(e,function(e){return l.call(t,e)>-1!==n}):k.test(t)?v.filter(t,e,n):(t=v.filter(t,e),v.grep(e,function(e){return l.call(t,e)>-1!==n&&1===e.nodeType}))}v.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?v.find.matchesSelector(i,e)?[i]:[]:v.find.matches(e,v.grep(t,function(e){return 1===e.nodeType}))},v.fn.extend({find:function(e){var t,n,i=this.length,r=this;if("string"!=typeof e)return this.pushStack(v(e).filter(function(){for(t=0;t<i;t++)if(v.contains(r[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)v.find(e,r[t],n);return i>1?v.uniqueSort(n):n},filter:function(e){return this.pushStack(A(this,e||[],!1))},not:function(e){return this.pushStack(A(this,e||[],!0))},is:function(e){return!!A(this,"string"==typeof e&&S.test(e)?v(e):e||[],!1).length}});var I,N=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(v.fn.init=function(e,t,n){var r,o;if(!e)return this;if(n=n||I,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:N.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof v?t[0]:t,v.merge(this,v.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:i,!0)),D.test(r[1])&&v.isPlainObject(t))for(r in t)v.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(o=i.getElementById(r[2]))&&(this[0]=o,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):v.isFunction(e)?void 0!==n.ready?n.ready(e):e(v):v.makeArray(e,this)}).prototype=v.fn,I=v(i);var O=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function L(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}v.fn.extend({has:function(e){var t=v(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(v.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,r=this.length,o=[],s="string"!=typeof e&&v(e);if(!S.test(e))for(;i<r;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?s.index(n)>-1:1===n.nodeType&&v.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?v.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?l.call(v(e),this[0]):l.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(v.uniqueSort(v.merge(this.get(),v(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),v.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return x(e,"parentNode")},parentsUntil:function(e,t,n){return x(e,"parentNode",n)},next:function(e){return L(e,"nextSibling")},prev:function(e){return L(e,"previousSibling")},nextAll:function(e){return x(e,"nextSibling")},prevAll:function(e){return x(e,"previousSibling")},nextUntil:function(e,t,n){return x(e,"nextSibling",n)},prevUntil:function(e,t,n){return x(e,"previousSibling",n)},siblings:function(e){return C((e.parentNode||{}).firstChild,e)},children:function(e){return C(e.firstChild)},contents:function(e){return e.contentDocument||v.merge([],e.childNodes)}},function(e,t){v.fn[e]=function(n,i){var r=v.map(this,t,n);return"Until"!==e.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=v.filter(i,r)),this.length>1&&(j[e]||v.uniqueSort(r),O.test(e)&&r.reverse()),this.pushStack(r)}});var P=/[^\x20\t\r\n\f]+/g;function H(e){return e}function M(e){throw e}function R(e,t,n){var i;try{e&&v.isFunction(i=e.promise)?i.call(e).done(t).fail(n):e&&v.isFunction(i=e.then)?i.call(e,t,n):t.call(void 0,e)}catch(e){n.call(void 0,e)}}v.Callbacks=function(e){var t,n;e="string"==typeof e?(t=e,n={},v.each(t.match(P)||[],function(e,t){n[t]=!0}),n):v.extend({},e);var i,r,o,s,a=[],l=[],u=-1,c=function(){for(s=e.once,o=i=!0;l.length;u=-1)for(r=l.shift();++u<a.length;)!1===a[u].apply(r[0],r[1])&&e.stopOnFalse&&(u=a.length,r=!1);e.memory||(r=!1),i=!1,s&&(a=r?[]:"")},f={add:function(){return a&&(r&&!i&&(u=a.length-1,l.push(r)),function t(n){v.each(n,function(n,i){v.isFunction(i)?e.unique&&f.has(i)||a.push(i):i&&i.length&&"string"!==v.type(i)&&t(i)})}(arguments),r&&!i&&c()),this},remove:function(){return v.each(arguments,function(e,t){for(var n;(n=v.inArray(t,a,n))>-1;)a.splice(n,1),n<=u&&u--}),this},has:function(e){return e?v.inArray(e,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return s=l=[],a=r="",this},disabled:function(){return!a},lock:function(){return s=l=[],r||i||(a=r=""),this},locked:function(){return!!s},fireWith:function(e,t){return s||(t=[e,(t=t||[]).slice?t.slice():t],l.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},v.extend({Deferred:function(t){var n=[["notify","progress",v.Callbacks("memory"),v.Callbacks("memory"),2],["resolve","done",v.Callbacks("once memory"),v.Callbacks("once memory"),0,"resolved"],["reject","fail",v.Callbacks("once memory"),v.Callbacks("once memory"),1,"rejected"]],i="pending",r={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var e=arguments;return v.Deferred(function(t){v.each(n,function(n,i){var r=v.isFunction(e[i[4]])&&e[i[4]];o[i[1]](function(){var e=r&&r.apply(this,arguments);e&&v.isFunction(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[i[0]+"With"](this,r?[e]:arguments)})}),e=null}).promise()},then:function(t,i,r){var o=0;function s(t,n,i,r){return function(){var a=this,l=arguments,u=function(){var e,u;if(!(t<o)){if((e=i.apply(a,l))===n.promise())throw new TypeError("Thenable self-resolution");u=e&&("object"==typeof e||"function"==typeof e)&&e.then,v.isFunction(u)?r?u.call(e,s(o,n,H,r),s(o,n,M,r)):(o++,u.call(e,s(o,n,H,r),s(o,n,M,r),s(o,n,H,n.notifyWith))):(i!==H&&(a=void 0,l=[e]),(r||n.resolveWith)(a,l))}},c=r?u:function(){try{u()}catch(e){v.Deferred.exceptionHook&&v.Deferred.exceptionHook(e,c.stackTrace),t+1>=o&&(i!==M&&(a=void 0,l=[e]),n.rejectWith(a,l))}};t?c():(v.Deferred.getStackHook&&(c.stackTrace=v.Deferred.getStackHook()),e.setTimeout(c))}}return v.Deferred(function(e){n[0][3].add(s(0,e,v.isFunction(r)?r:H,e.notifyWith)),n[1][3].add(s(0,e,v.isFunction(t)?t:H)),n[2][3].add(s(0,e,v.isFunction(i)?i:M))}).promise()},promise:function(e){return null!=e?v.extend(e,r):r}},o={};return v.each(n,function(e,t){var s=t[2],a=t[5];r[t[1]]=s.add,a&&s.add(function(){i=a},n[3-e][2].disable,n[0][2].lock),s.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=s.fireWith}),r.promise(o),t&&t.call(o,o),o},when:function(e){var t=arguments.length,n=t,i=Array(n),r=o.call(arguments),s=v.Deferred(),a=function(e){return function(n){i[e]=this,r[e]=arguments.length>1?o.call(arguments):n,--t||s.resolveWith(i,r)}};if(t<=1&&(R(e,s.done(a(n)).resolve,s.reject),"pending"===s.state()||v.isFunction(r[n]&&r[n].then)))return s.then();for(;n--;)R(r[n],a(n),s.reject);return s.promise()}});var F=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;v.Deferred.exceptionHook=function(t,n){e.console&&e.console.warn&&t&&F.test(t.name)&&e.console.warn("jQuery.Deferred exception: "+t.message,t.stack,n)},v.readyException=function(t){e.setTimeout(function(){throw t})};var W=v.Deferred();function q(){i.removeEventListener("DOMContentLoaded",q),e.removeEventListener("load",q),v.ready()}v.fn.ready=function(e){return W.then(e).catch(function(e){v.readyException(e)}),this},v.extend({isReady:!1,readyWait:1,holdReady:function(e){e?v.readyWait++:v.ready(!0)},ready:function(e){(!0===e?--v.readyWait:v.isReady)||(v.isReady=!0,!0!==e&&--v.readyWait>0||W.resolveWith(i,[v]))}}),v.ready.then=W.then,"complete"===i.readyState||"loading"!==i.readyState&&!i.documentElement.doScroll?e.setTimeout(v.ready):(i.addEventListener("DOMContentLoaded",q),e.addEventListener("load",q));var B=function(e,t,n,i,r,o,s){var a=0,l=e.length,u=null==n;if("object"===v.type(n))for(a in r=!0,n)B(e,t,a,n[a],!0,o,s);else if(void 0!==i&&(r=!0,v.isFunction(i)||(s=!0),u&&(s?(t.call(e,i),t=null):(u=t,t=function(e,t,n){return u.call(v(e),n)})),t))for(;a<l;a++)t(e[a],n,s?i:i.call(e[a],a,t(e[a],n)));return r?e:u?t.call(e):l?t(e[0],n):o},U=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function $(){this.expando=v.expando+$.uid++}$.uid=1,$.prototype={cache:function(e){var t=e[this.expando];return t||(t={},U(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,r=this.cache(e);if("string"==typeof t)r[v.camelCase(t)]=n;else for(i in t)r[v.camelCase(i)]=t[i];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][v.camelCase(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){v.isArray(t)?t=t.map(v.camelCase):t=(t=v.camelCase(t))in i?[t]:t.match(P)||[],n=t.length;for(;n--;)delete i[t[n]]}(void 0===t||v.isEmptyObject(i))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!v.isEmptyObject(t)}};var Q=new $,K=new $,V=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,G=/[A-Z]/g;function Y(e,t,n){var i,r;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(G,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(i))){try{n="true"===(r=n)||"false"!==r&&("null"===r?null:r===+r+""?+r:V.test(r)?JSON.parse(r):r)}catch(e){}K.set(e,t,n)}else n=void 0;return n}v.extend({hasData:function(e){return K.hasData(e)||Q.hasData(e)},data:function(e,t,n){return K.access(e,t,n)},removeData:function(e,t){K.remove(e,t)},_data:function(e,t,n){return Q.access(e,t,n)},_removeData:function(e,t){Q.remove(e,t)}}),v.fn.extend({data:function(e,t){var n,i,r,o=this[0],s=o&&o.attributes;if(void 0===e){if(this.length&&(r=K.get(o),1===o.nodeType&&!Q.get(o,"hasDataAttrs"))){for(n=s.length;n--;)s[n]&&(0===(i=s[n].name).indexOf("data-")&&(i=v.camelCase(i.slice(5)),Y(o,i,r[i])));Q.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof e?this.each(function(){K.set(this,e)}):B(this,function(t){var n;if(o&&void 0===t){if(void 0!==(n=K.get(o,e)))return n;if(void 0!==(n=Y(o,e)))return n}else this.each(function(){K.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),v.extend({queue:function(e,t,n){var i;if(e)return t=(t||"fx")+"queue",i=Q.get(e,t),n&&(!i||v.isArray(n)?i=Q.access(e,t,v.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=v.queue(e,t),i=n.length,r=n.shift(),o=v._queueHooks(e,t);"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===t&&n.unshift("inprogress"),delete o.stop,r.call(e,function(){v.dequeue(e,t)},o)),!i&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Q.get(e,n)||Q.access(e,n,{empty:v.Callbacks("once memory").add(function(){Q.remove(e,[t+"queue",n])})})}}),v.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?v.queue(this[0],e):void 0===t?this:this.each(function(){var n=v.queue(this,e,t);v._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&v.dequeue(this,e)})},dequeue:function(e){return this.each(function(){v.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,r=v.Deferred(),o=this,s=this.length,a=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)(n=Q.get(o[s],e+"queueHooks"))&&n.empty&&(i++,n.empty.add(a));return a(),r.promise(t)}});var z=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,X=new RegExp("^(?:([+-])=|)("+z+")([a-z%]*)$","i"),J=["Top","Right","Bottom","Left"],Z=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&v.contains(e.ownerDocument,e)&&"none"===v.css(e,"display")},ee=function(e,t,n,i){var r,o,s={};for(o in t)s[o]=e.style[o],e.style[o]=t[o];for(o in r=n.apply(e,i||[]),t)e.style[o]=s[o];return r};function te(e,t,n,i){var r,o=1,s=20,a=i?function(){return i.cur()}:function(){return v.css(e,t,"")},l=a(),u=n&&n[3]||(v.cssNumber[t]?"":"px"),c=(v.cssNumber[t]||"px"!==u&&+l)&&X.exec(v.css(e,t));if(c&&c[3]!==u)for(u=u||c[3],n=n||[],c=+l||1;c/=o=o||".5",v.style(e,t,c+u),o!==(o=a()/l)&&1!==o&&--s;);return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=r)),r}var ne={};function ie(e,t){for(var n,i,r=[],o=0,s=e.length;o<s;o++)(i=e[o]).style&&(n=i.style.display,t?("none"===n&&(r[o]=Q.get(i,"display")||null,r[o]||(i.style.display="")),""===i.style.display&&Z(i)&&(r[o]=(l=void 0,u=void 0,void 0,f=void 0,u=(a=i).ownerDocument,c=a.nodeName,(f=ne[c])||(l=u.body.appendChild(u.createElement(c)),f=v.css(l,"display"),l.parentNode.removeChild(l),"none"===f&&(f="block"),ne[c]=f,f)))):"none"!==n&&(r[o]="none",Q.set(i,"display",n)));var a,l,u,c,f;for(o=0;o<s;o++)null!=r[o]&&(e[o].style.display=r[o]);return e}v.fn.extend({show:function(){return ie(this,!0)},hide:function(){return ie(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Z(this)?v(this).show():v(this).hide()})}});var re=/^(?:checkbox|radio)$/i,oe=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,se=/^$|\/(?:java|ecma)script/i,ae={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function le(e,t){var n;return n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&v.nodeName(e,t)?v.merge([e],n):n}function ue(e,t){for(var n=0,i=e.length;n<i;n++)Q.set(e[n],"globalEval",!t||Q.get(t[n],"globalEval"))}ae.optgroup=ae.option,ae.tbody=ae.tfoot=ae.colgroup=ae.caption=ae.thead,ae.th=ae.td;var ce,fe,de=/<|&#?\w+;/;function he(e,t,n,i,r){for(var o,s,a,l,u,c,f=t.createDocumentFragment(),d=[],h=0,p=e.length;h<p;h++)if((o=e[h])||0===o)if("object"===v.type(o))v.merge(d,o.nodeType?[o]:o);else if(de.test(o)){for(s=s||f.appendChild(t.createElement("div")),a=(oe.exec(o)||["",""])[1].toLowerCase(),l=ae[a]||ae._default,s.innerHTML=l[1]+v.htmlPrefilter(o)+l[2],c=l[0];c--;)s=s.lastChild;v.merge(d,s.childNodes),(s=f.firstChild).textContent=""}else d.push(t.createTextNode(o));for(f.textContent="",h=0;o=d[h++];)if(i&&v.inArray(o,i)>-1)r&&r.push(o);else if(u=v.contains(o.ownerDocument,o),s=le(f.appendChild(o),"script"),u&&ue(s),n)for(c=0;o=s[c++];)se.test(o.type||"")&&n.push(o);return f}ce=i.createDocumentFragment().appendChild(i.createElement("div")),(fe=i.createElement("input")).setAttribute("type","radio"),fe.setAttribute("checked","checked"),fe.setAttribute("name","t"),ce.appendChild(fe),p.checkClone=ce.cloneNode(!0).cloneNode(!0).lastChild.checked,ce.innerHTML="<textarea>x</textarea>",p.noCloneChecked=!!ce.cloneNode(!0).lastChild.defaultValue;var pe=i.documentElement,ge=/^key/,me=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ve=/^([^.]*)(?:\.(.+)|)/;function ye(){return!0}function _e(){return!1}function be(){try{return i.activeElement}catch(e){}}function Ee(e,t,n,i,r,o){var s,a;if("object"==typeof t){for(a in"string"!=typeof n&&(i=i||n,n=void 0),t)Ee(e,a,n,i,t[a],o);return e}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),!1===r)r=_e;else if(!r)return e;return 1===o&&(s=r,(r=function(e){return v().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=v.guid++)),e.each(function(){v.event.add(this,t,r,i,n)})}v.event={global:{},add:function(e,t,n,i,r){var o,s,a,l,u,c,f,d,h,p,g,m=Q.get(e);if(m)for(n.handler&&(n=(o=n).handler,r=o.selector),r&&v.find.matchesSelector(pe,r),n.guid||(n.guid=v.guid++),(l=m.events)||(l=m.events={}),(s=m.handle)||(s=m.handle=function(t){return void 0!==v&&v.event.triggered!==t.type?v.event.dispatch.apply(e,arguments):void 0}),u=(t=(t||"").match(P)||[""]).length;u--;)h=g=(a=ve.exec(t[u])||[])[1],p=(a[2]||"").split(".").sort(),h&&(f=v.event.special[h]||{},h=(r?f.delegateType:f.bindType)||h,f=v.event.special[h]||{},c=v.extend({type:h,origType:g,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&v.expr.match.needsContext.test(r),namespace:p.join(".")},o),(d=l[h])||((d=l[h]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(e,i,p,s)||e.addEventListener&&e.addEventListener(h,s)),f.add&&(f.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),r?d.splice(d.delegateCount++,0,c):d.push(c),v.event.global[h]=!0)},remove:function(e,t,n,i,r){var o,s,a,l,u,c,f,d,h,p,g,m=Q.hasData(e)&&Q.get(e);if(m&&(l=m.events)){for(u=(t=(t||"").match(P)||[""]).length;u--;)if(h=g=(a=ve.exec(t[u])||[])[1],p=(a[2]||"").split(".").sort(),h){for(f=v.event.special[h]||{},d=l[h=(i?f.delegateType:f.bindType)||h]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=o=d.length;o--;)c=d[o],!r&&g!==c.origType||n&&n.guid!==c.guid||a&&!a.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(d.splice(o,1),c.selector&&d.delegateCount--,f.remove&&f.remove.call(e,c));s&&!d.length&&(f.teardown&&!1!==f.teardown.call(e,p,m.handle)||v.removeEvent(e,h,m.handle),delete l[h])}else for(h in l)v.event.remove(e,h+t[u],n,i,!0);v.isEmptyObject(l)&&Q.remove(e,"handle events")}},dispatch:function(e){var t,n,i,r,o,s,a=v.event.fix(e),l=new Array(arguments.length),u=(Q.get(this,"events")||{})[a.type]||[],c=v.event.special[a.type]||{};for(l[0]=a,t=1;t<arguments.length;t++)l[t]=arguments[t];if(a.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,a)){for(s=v.event.handlers.call(this,a,u),t=0;(r=s[t++])&&!a.isPropagationStopped();)for(a.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(i=((v.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,l))&&!1===(a.result=i)&&(a.preventDefault(),a.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,a),a.result}},handlers:function(e,t){var n,i,r,o,s,a=[],l=t.delegateCount,u=e.target;if(l&&u.nodeType&&!("click"===e.type&&e.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==e.type||!0!==u.disabled)){for(o=[],s={},n=0;n<l;n++)void 0===s[r=(i=t[n]).selector+" "]&&(s[r]=i.needsContext?v(r,this).index(u)>-1:v.find(r,this,null,[u]).length),s[r]&&o.push(i);o.length&&a.push({elem:u,handlers:o})}return u=this,l<t.length&&a.push({elem:u,handlers:t.slice(l)}),a},addProp:function(e,t){Object.defineProperty(v.Event.prototype,e,{enumerable:!0,configurable:!0,get:v.isFunction(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[v.expando]?e:new v.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==be()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===be()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&v.nodeName(this,"input"))return this.click(),!1},_default:function(e){return v.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},v.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},v.Event=function(e,t){return this instanceof v.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?ye:_e,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&v.extend(this,t),this.timeStamp=e&&e.timeStamp||v.now(),void(this[v.expando]=!0)):new v.Event(e,t)},v.Event.prototype={constructor:v.Event,isDefaultPrevented:_e,isPropagationStopped:_e,isImmediatePropagationStopped:_e,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=ye,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=ye,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=ye,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},v.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&ge.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&me.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},v.event.addProp),v.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){v.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,i=e.relatedTarget,r=e.handleObj;return i&&(i===this||v.contains(this,i))||(e.type=r.origType,n=r.handler.apply(this,arguments),e.type=t),n}}}),v.fn.extend({on:function(e,t,n,i){return Ee(this,e,t,n,i)},one:function(e,t,n,i){return Ee(this,e,t,n,i,1)},off:function(e,t,n){var i,r;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,v(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(r in e)this.off(r,t,e[r]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=_e),this.each(function(){v.event.remove(this,e,n,t)})}});var Te=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,we=/<script|<style|<link/i,xe=/checked\s*(?:[^=]|=\s*.checked.)/i,Ce=/^true\/(.*)/,Se=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function De(e,t){return v.nodeName(e,"table")&&v.nodeName(11!==t.nodeType?t:t.firstChild,"tr")&&e.getElementsByTagName("tbody")[0]||e}function ke(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ae(e){var t=Ce.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function Ie(e,t){var n,i,r,o,s,a,l,u;if(1===t.nodeType){if(Q.hasData(e)&&(o=Q.access(e),s=Q.set(t,o),u=o.events))for(r in delete s.handle,s.events={},u)for(n=0,i=u[r].length;n<i;n++)v.event.add(t,r,u[r][n]);K.hasData(e)&&(a=K.access(e),l=v.extend({},a),K.set(t,l))}}function Ne(e,t,n,i){t=s.apply([],t);var r,o,a,l,u,c,f=0,d=e.length,h=d-1,m=t[0],y=v.isFunction(m);if(y||d>1&&"string"==typeof m&&!p.checkClone&&xe.test(m))return e.each(function(r){var o=e.eq(r);y&&(t[0]=m.call(this,r,o.html())),Ne(o,t,n,i)});if(d&&(o=(r=he(t,e[0].ownerDocument,!1,e,i)).firstChild,1===r.childNodes.length&&(r=o),o||i)){for(l=(a=v.map(le(r,"script"),ke)).length;f<d;f++)u=r,f!==h&&(u=v.clone(u,!0,!0),l&&v.merge(a,le(u,"script"))),n.call(e[f],u,f);if(l)for(c=a[a.length-1].ownerDocument,v.map(a,Ae),f=0;f<l;f++)u=a[f],se.test(u.type||"")&&!Q.access(u,"globalEval")&&v.contains(c,u)&&(u.src?v._evalUrl&&v._evalUrl(u.src):g(u.textContent.replace(Se,""),c))}return e}function Oe(e,t,n){for(var i,r=t?v.filter(t,e):e,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||v.cleanData(le(i)),i.parentNode&&(n&&v.contains(i.ownerDocument,i)&&ue(le(i,"script")),i.parentNode.removeChild(i));return e}v.extend({htmlPrefilter:function(e){return e.replace(Te,"<$1></$2>")},clone:function(e,t,n){var i,r,o,s,a,l,u,c=e.cloneNode(!0),f=v.contains(e.ownerDocument,e);if(!(p.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||v.isXMLDoc(e)))for(s=le(c),i=0,r=(o=le(e)).length;i<r;i++)a=o[i],l=s[i],void 0,"input"===(u=l.nodeName.toLowerCase())&&re.test(a.type)?l.checked=a.checked:"input"!==u&&"textarea"!==u||(l.defaultValue=a.defaultValue);if(t)if(n)for(o=o||le(e),s=s||le(c),i=0,r=o.length;i<r;i++)Ie(o[i],s[i]);else Ie(e,c);return(s=le(c,"script")).length>0&&ue(s,!f&&le(e,"script")),c},cleanData:function(e){for(var t,n,i,r=v.event.special,o=0;void 0!==(n=e[o]);o++)if(U(n)){if(t=n[Q.expando]){if(t.events)for(i in t.events)r[i]?v.event.remove(n,i):v.removeEvent(n,i,t.handle);n[Q.expando]=void 0}n[K.expando]&&(n[K.expando]=void 0)}}}),v.fn.extend({detach:function(e){return Oe(this,e,!0)},remove:function(e){return Oe(this,e)},text:function(e){return B(this,function(e){return void 0===e?v.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Ne(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||De(this,e).appendChild(e)})},prepend:function(){return Ne(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=De(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Ne(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Ne(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(v.cleanData(le(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return v.clone(this,e,t)})},html:function(e){return B(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!we.test(e)&&!ae[(oe.exec(e)||["",""])[1].toLowerCase()]){e=v.htmlPrefilter(e);try{for(;n<i;n++)1===(t=this[n]||{}).nodeType&&(v.cleanData(le(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return Ne(this,arguments,function(t){var n=this.parentNode;v.inArray(this,e)<0&&(v.cleanData(le(this)),n&&n.replaceChild(t,this))},e)}}),v.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){v.fn[e]=function(e){for(var n,i=[],r=v(e),o=r.length-1,s=0;s<=o;s++)n=s===o?this:this.clone(!0),v(r[s])[t](n),a.apply(i,n.get());return this.pushStack(i)}});var je=/^margin/,Le=new RegExp("^("+z+")(?!px)[a-z%]+$","i"),Pe=function(t){var n=t.ownerDocument.defaultView;return n&&n.opener||(n=e),n.getComputedStyle(t)};function He(e,t,n){var i,r,o,s,a=e.style;return(n=n||Pe(e))&&(""!==(s=n.getPropertyValue(t)||n[t])||v.contains(e.ownerDocument,e)||(s=v.style(e,t)),!p.pixelMarginRight()&&Le.test(s)&&je.test(t)&&(i=a.width,r=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=n.width,a.width=i,a.minWidth=r,a.maxWidth=o)),void 0!==s?s+"":s}function Me(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}!function(){function t(){if(l){l.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",l.innerHTML="",pe.appendChild(a);var t=e.getComputedStyle(l);n="1%"!==t.top,s="2px"===t.marginLeft,r="4px"===t.width,l.style.marginRight="50%",o="4px"===t.marginRight,pe.removeChild(a),l=null}}var n,r,o,s,a=i.createElement("div"),l=i.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",p.clearCloneStyle="content-box"===l.style.backgroundClip,a.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",a.appendChild(l),v.extend(p,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return t(),r},pixelMarginRight:function(){return t(),o},reliableMarginLeft:function(){return t(),s}}))}();var Re=/^(none|table(?!-c[ea]).+)/,Fe={position:"absolute",visibility:"hidden",display:"block"},We={letterSpacing:"0",fontWeight:"400"},qe=["Webkit","Moz","ms"],Be=i.createElement("div").style;function Ue(e){if(e in Be)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=qe.length;n--;)if((e=qe[n]+t)in Be)return e}function $e(e,t,n){var i=X.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function Qe(e,t,n,i,r){var o,s=0;for(o=n===(i?"border":"content")?4:"width"===t?1:0;o<4;o+=2)"margin"===n&&(s+=v.css(e,n+J[o],!0,r)),i?("content"===n&&(s-=v.css(e,"padding"+J[o],!0,r)),"margin"!==n&&(s-=v.css(e,"border"+J[o]+"Width",!0,r))):(s+=v.css(e,"padding"+J[o],!0,r),"padding"!==n&&(s+=v.css(e,"border"+J[o]+"Width",!0,r)));return s}function Ke(e,t,n){var i,r=!0,o=Pe(e),s="border-box"===v.css(e,"boxSizing",!1,o);if(e.getClientRects().length&&(i=e.getBoundingClientRect()[t]),i<=0||null==i){if(((i=He(e,t,o))<0||null==i)&&(i=e.style[t]),Le.test(i))return i;r=s&&(p.boxSizingReliable()||i===e.style[t]),i=parseFloat(i)||0}return i+Qe(e,t,n||(s?"border":"content"),r,o)+"px"}function Ve(e,t,n,i,r){return new Ve.prototype.init(e,t,n,i,r)}v.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=He(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,o,s,a=v.camelCase(t),l=e.style;return t=v.cssProps[a]||(v.cssProps[a]=Ue(a)||a),s=v.cssHooks[t]||v.cssHooks[a],void 0===n?s&&"get"in s&&void 0!==(r=s.get(e,!1,i))?r:l[t]:("string"===(o=typeof n)&&(r=X.exec(n))&&r[1]&&(n=te(e,t,r),o="number"),void(null!=n&&n==n&&("number"===o&&(n+=r&&r[3]||(v.cssNumber[a]?"":"px")),p.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l[t]=n))))}},css:function(e,t,n,i){var r,o,s,a=v.camelCase(t);return t=v.cssProps[a]||(v.cssProps[a]=Ue(a)||a),(s=v.cssHooks[t]||v.cssHooks[a])&&"get"in s&&(r=s.get(e,!0,n)),void 0===r&&(r=He(e,t,i)),"normal"===r&&t in We&&(r=We[t]),""===n||n?(o=parseFloat(r),!0===n||isFinite(o)?o||0:r):r}}),v.each(["height","width"],function(e,t){v.cssHooks[t]={get:function(e,n,i){if(n)return!Re.test(v.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?Ke(e,t,i):ee(e,Fe,function(){return Ke(e,t,i)})},set:function(e,n,i){var r,o=i&&Pe(e),s=i&&Qe(e,t,i,"border-box"===v.css(e,"boxSizing",!1,o),o);return s&&(r=X.exec(n))&&"px"!==(r[3]||"px")&&(e.style[t]=n,n=v.css(e,t)),$e(0,n,s)}}}),v.cssHooks.marginLeft=Me(p.reliableMarginLeft,function(e,t){if(t)return(parseFloat(He(e,"marginLeft"))||e.getBoundingClientRect().left-ee(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),v.each({margin:"",padding:"",border:"Width"},function(e,t){v.cssHooks[e+t]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];i<4;i++)r[e+J[i]+t]=o[i]||o[i-2]||o[0];return r}},je.test(e)||(v.cssHooks[e+t].set=$e)}),v.fn.extend({css:function(e,t){return B(this,function(e,t,n){var i,r,o={},s=0;if(v.isArray(t)){for(i=Pe(e),r=t.length;s<r;s++)o[t[s]]=v.css(e,t[s],!1,i);return o}return void 0!==n?v.style(e,t,n):v.css(e,t)},e,t,arguments.length>1)}}),v.Tween=Ve,Ve.prototype={constructor:Ve,init:function(e,t,n,i,r,o){this.elem=e,this.prop=n,this.easing=r||v.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=o||(v.cssNumber[n]?"":"px")},cur:function(){var e=Ve.propHooks[this.prop];return e&&e.get?e.get(this):Ve.propHooks._default.get(this)},run:function(e){var t,n=Ve.propHooks[this.prop];return this.options.duration?this.pos=t=v.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Ve.propHooks._default.set(this),this}},Ve.prototype.init.prototype=Ve.prototype,Ve.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=v.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){v.fx.step[e.prop]?v.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[v.cssProps[e.prop]]&&!v.cssHooks[e.prop]?e.elem[e.prop]=e.now:v.style(e.elem,e.prop,e.now+e.unit)}}},Ve.propHooks.scrollTop=Ve.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},v.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},v.fx=Ve.prototype.init,v.fx.step={};var Ge,Ye,ze,Xe,Je=/^(?:toggle|show|hide)$/,Ze=/queueHooks$/;function et(){Ye&&(e.requestAnimationFrame(et),v.fx.tick())}function tt(){return e.setTimeout(function(){Ge=void 0}),Ge=v.now()}function nt(e,t){var n,i=0,r={height:e};for(t=t?1:0;i<4;i+=2-t)r["margin"+(n=J[i])]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function it(e,t,n){for(var i,r=(rt.tweeners[t]||[]).concat(rt.tweeners["*"]),o=0,s=r.length;o<s;o++)if(i=r[o].call(n,t,e))return i}function rt(e,t,n){var i,r,o=0,s=rt.prefilters.length,a=v.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var t=Ge||tt(),n=Math.max(0,u.startTime+u.duration-t),i=1-(n/u.duration||0),o=0,s=u.tweens.length;o<s;o++)u.tweens[o].run(i);return a.notifyWith(e,[u,i,n]),i<1&&s?n:(a.resolveWith(e,[u]),!1)},u=a.promise({elem:e,props:v.extend({},t),opts:v.extend(!0,{specialEasing:{},easing:v.easing._default},n),originalProperties:t,originalOptions:n,startTime:Ge||tt(),duration:n.duration,tweens:[],createTween:function(t,n){var i=v.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(i),i},stop:function(t){var n=0,i=t?u.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)u.tweens[n].run(1);return t?(a.notifyWith(e,[u,1,0]),a.resolveWith(e,[u,t])):a.rejectWith(e,[u,t]),this}}),c=u.props;for(function(e,t){var n,i,r,o,s;for(n in e)if(r=t[i=v.camelCase(n)],o=e[n],v.isArray(o)&&(r=o[1],o=e[n]=o[0]),n!==i&&(e[i]=o,delete e[n]),(s=v.cssHooks[i])&&"expand"in s)for(n in o=s.expand(o),delete e[i],o)n in e||(e[n]=o[n],t[n]=r);else t[i]=r}(c,u.opts.specialEasing);o<s;o++)if(i=rt.prefilters[o].call(u,e,c,u.opts))return v.isFunction(i.stop)&&(v._queueHooks(u.elem,u.opts.queue).stop=v.proxy(i.stop,i)),i;return v.map(c,it,u),v.isFunction(u.opts.start)&&u.opts.start.call(e,u),v.fx.timer(v.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}v.Animation=v.extend(rt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return te(n.elem,e,X.exec(t),n),n}]},tweener:function(e,t){v.isFunction(e)?(t=e,e=["*"]):e=e.match(P);for(var n,i=0,r=e.length;i<r;i++)n=e[i],rt.tweeners[n]=rt.tweeners[n]||[],rt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var i,r,o,s,a,l,u,c,f="width"in t||"height"in t,d=this,h={},p=e.style,g=e.nodeType&&Z(e),m=Q.get(e,"fxshow");for(i in n.queue||(null==(s=v._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,d.always(function(){d.always(function(){s.unqueued--,v.queue(e,"fx").length||s.empty.fire()})})),t)if(r=t[i],Je.test(r)){if(delete t[i],o=o||"toggle"===r,r===(g?"hide":"show")){if("show"!==r||!m||void 0===m[i])continue;g=!0}h[i]=m&&m[i]||v.style(e,i)}if((l=!v.isEmptyObject(t))||!v.isEmptyObject(h))for(i in f&&1===e.nodeType&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],null==(u=m&&m.display)&&(u=Q.get(e,"display")),"none"===(c=v.css(e,"display"))&&(u?c=u:(ie([e],!0),u=e.style.display||u,c=v.css(e,"display"),ie([e]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===v.css(e,"float")&&(l||(d.done(function(){p.display=u}),null==u&&(c=p.display,u="none"===c?"":c)),p.display="inline-block")),n.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]})),l=!1,h)l||(m?"hidden"in m&&(g=m.hidden):m=Q.access(e,"fxshow",{display:u}),o&&(m.hidden=!g),g&&ie([e],!0),d.done(function(){for(i in g||ie([e]),Q.remove(e,"fxshow"),h)v.style(e,i,h[i])})),l=it(g?m[i]:0,i,d),i in m||(m[i]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?rt.prefilters.unshift(e):rt.prefilters.push(e)}}),v.speed=function(e,t,n){var r=e&&"object"==typeof e?v.extend({},e):{complete:n||!n&&t||v.isFunction(e)&&e,duration:e,easing:n&&t||t&&!v.isFunction(t)&&t};return v.fx.off||i.hidden?r.duration=0:"number"!=typeof r.duration&&(r.duration in v.fx.speeds?r.duration=v.fx.speeds[r.duration]:r.duration=v.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){v.isFunction(r.old)&&r.old.call(this),r.queue&&v.dequeue(this,r.queue)},r},v.fn.extend({fadeTo:function(e,t,n,i){return this.filter(Z).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(e,t,n,i){var r=v.isEmptyObject(e),o=v.speed(t,n,i),s=function(){var t=rt(this,v.extend({},e),o);(r||Q.get(this,"finish"))&&t.stop(!0)};return s.finish=s,r||!1===o.queue?this.each(s):this.queue(o.queue,s)},stop:function(e,t,n){var i=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&!1!==e&&this.queue(e||"fx",[]),this.each(function(){var t=!0,r=null!=e&&e+"queueHooks",o=v.timers,s=Q.get(this);if(r)s[r]&&s[r].stop&&i(s[r]);else for(r in s)s[r]&&s[r].stop&&Ze.test(r)&&i(s[r]);for(r=o.length;r--;)o[r].elem!==this||null!=e&&o[r].queue!==e||(o[r].anim.stop(n),t=!1,o.splice(r,1));!t&&n||v.dequeue(this,e)})},finish:function(e){return!1!==e&&(e=e||"fx"),this.each(function(){var t,n=Q.get(this),i=n[e+"queue"],r=n[e+"queueHooks"],o=v.timers,s=i?i.length:0;for(n.finish=!0,v.queue(this,e,[]),r&&r.stop&&r.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<s;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete n.finish})}}),v.each(["toggle","show","hide"],function(e,t){var n=v.fn[t];v.fn[t]=function(e,i,r){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(nt(t,!0),e,i,r)}}),v.each({slideDown:nt("show"),slideUp:nt("hide"),slideToggle:nt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){v.fn[e]=function(e,n,i){return this.animate(t,e,n,i)}}),v.timers=[],v.fx.tick=function(){var e,t=0,n=v.timers;for(Ge=v.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||v.fx.stop(),Ge=void 0},v.fx.timer=function(e){v.timers.push(e),e()?v.fx.start():v.timers.pop()},v.fx.interval=13,v.fx.start=function(){Ye||(Ye=e.requestAnimationFrame?e.requestAnimationFrame(et):e.setInterval(v.fx.tick,v.fx.interval))},v.fx.stop=function(){e.cancelAnimationFrame?e.cancelAnimationFrame(Ye):e.clearInterval(Ye),Ye=null},v.fx.speeds={slow:600,fast:200,_default:400},v.fn.delay=function(t,n){return t=v.fx&&v.fx.speeds[t]||t,n=n||"fx",this.queue(n,function(n,i){var r=e.setTimeout(n,t);i.stop=function(){e.clearTimeout(r)}})},ze=i.createElement("input"),Xe=i.createElement("select").appendChild(i.createElement("option")),ze.type="checkbox",p.checkOn=""!==ze.value,p.optSelected=Xe.selected,(ze=i.createElement("input")).value="t",ze.type="radio",p.radioValue="t"===ze.value;var ot,st=v.expr.attrHandle;v.fn.extend({attr:function(e,t){return B(this,v.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){v.removeAttr(this,e)})}}),v.extend({attr:function(e,t,n){var i,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===e.getAttribute?v.prop(e,t,n):(1===o&&v.isXMLDoc(e)||(r=v.attrHooks[t.toLowerCase()]||(v.expr.match.bool.test(t)?ot:void 0)),void 0!==n?null===n?void v.removeAttr(e,t):r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:(e.setAttribute(t,n+""),n):r&&"get"in r&&null!==(i=r.get(e,t))?i:null==(i=v.find.attr(e,t))?void 0:i)},attrHooks:{type:{set:function(e,t){if(!p.radioValue&&"radio"===t&&v.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,r=t&&t.match(P);if(r&&1===e.nodeType)for(;n=r[i++];)e.removeAttribute(n)}}),ot={set:function(e,t,n){return!1===t?v.removeAttr(e,n):e.setAttribute(n,n),n}},v.each(v.expr.match.bool.source.match(/\w+/g),function(e,t){var n=st[t]||v.find.attr;st[t]=function(e,t,i){var r,o,s=t.toLowerCase();return i||(o=st[s],st[s]=r,r=null!=n(e,t,i)?s:null,st[s]=o),r}});var at=/^(?:input|select|textarea|button)$/i,lt=/^(?:a|area)$/i;function ut(e){return(e.match(P)||[]).join(" ")}function ct(e){return e.getAttribute&&e.getAttribute("class")||""}v.fn.extend({prop:function(e,t){return B(this,v.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[v.propFix[e]||e]})}}),v.extend({prop:function(e,t,n){var i,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&v.isXMLDoc(e)||(t=v.propFix[t]||t,r=v.propHooks[t]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:e[t]=n:r&&"get"in r&&null!==(i=r.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=v.find.attr(e,"tabindex");return t?parseInt(t,10):at.test(e.nodeName)||lt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),p.optSelected||(v.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),v.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){v.propFix[this.toLowerCase()]=this}),v.fn.extend({addClass:function(e){var t,n,i,r,o,s,a,l=0;if(v.isFunction(e))return this.each(function(t){v(this).addClass(e.call(this,t,ct(this)))});if("string"==typeof e&&e)for(t=e.match(P)||[];n=this[l++];)if(r=ct(n),i=1===n.nodeType&&" "+ut(r)+" "){for(s=0;o=t[s++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");r!==(a=ut(i))&&n.setAttribute("class",a)}return this},removeClass:function(e){var t,n,i,r,o,s,a,l=0;if(v.isFunction(e))return this.each(function(t){v(this).removeClass(e.call(this,t,ct(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(P)||[];n=this[l++];)if(r=ct(n),i=1===n.nodeType&&" "+ut(r)+" "){for(s=0;o=t[s++];)for(;i.indexOf(" "+o+" ")>-1;)i=i.replace(" "+o+" "," ");r!==(a=ut(i))&&n.setAttribute("class",a)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):v.isFunction(e)?this.each(function(n){v(this).toggleClass(e.call(this,n,ct(this),t),t)}):this.each(function(){var t,i,r,o;if("string"===n)for(i=0,r=v(this),o=e.match(P)||[];t=o[i++];)r.hasClass(t)?r.removeClass(t):r.addClass(t);else void 0!==e&&"boolean"!==n||((t=ct(this))&&Q.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===e?"":Q.get(this,"__className__")||""))})},hasClass:function(e){var t,n,i=0;for(t=" "+e+" ";n=this[i++];)if(1===n.nodeType&&(" "+ut(ct(n))+" ").indexOf(t)>-1)return!0;return!1}});var ft=/\r/g;v.fn.extend({val:function(e){var t,n,i,r=this[0];return arguments.length?(i=v.isFunction(e),this.each(function(n){var r;1===this.nodeType&&(null==(r=i?e.call(this,n,v(this).val()):e)?r="":"number"==typeof r?r+="":v.isArray(r)&&(r=v.map(r,function(e){return null==e?"":e+""})),(t=v.valHooks[this.type]||v.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))})):r?(t=v.valHooks[r.type]||v.valHooks[r.nodeName.toLowerCase()])&&"get"in t&&void 0!==(n=t.get(r,"value"))?n:"string"==typeof(n=r.value)?n.replace(ft,""):null==n?"":n:void 0}}),v.extend({valHooks:{option:{get:function(e){var t=v.find.attr(e,"value");return null!=t?t:ut(v.text(e))}},select:{get:function(e){var t,n,i,r=e.options,o=e.selectedIndex,s="select-one"===e.type,a=s?null:[],l=s?o+1:r.length;for(i=o<0?l:s?o:0;i<l;i++)if(((n=r[i]).selected||i===o)&&!n.disabled&&(!n.parentNode.disabled||!v.nodeName(n.parentNode,"optgroup"))){if(t=v(n).val(),s)return t;a.push(t)}return a},set:function(e,t){for(var n,i,r=e.options,o=v.makeArray(t),s=r.length;s--;)((i=r[s]).selected=v.inArray(v.valHooks.option.get(i),o)>-1)&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),v.each(["radio","checkbox"],function(){v.valHooks[this]={set:function(e,t){if(v.isArray(t))return e.checked=v.inArray(v(e).val(),t)>-1}},p.checkOn||(v.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var dt=/^(?:focusinfocus|focusoutblur)$/;v.extend(v.event,{trigger:function(t,n,r,o){var s,a,l,u,c,d,h,p=[r||i],g=f.call(t,"type")?t.type:t,m=f.call(t,"namespace")?t.namespace.split("."):[];if(a=l=r=r||i,3!==r.nodeType&&8!==r.nodeType&&!dt.test(g+v.event.triggered)&&(g.indexOf(".")>-1&&(g=(m=g.split(".")).shift(),m.sort()),c=g.indexOf(":")<0&&"on"+g,(t=t[v.expando]?t:new v.Event(g,"object"==typeof t&&t)).isTrigger=o?2:3,t.namespace=m.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=r),n=null==n?[t]:v.makeArray(n,[t]),h=v.event.special[g]||{},o||!h.trigger||!1!==h.trigger.apply(r,n))){if(!o&&!h.noBubble&&!v.isWindow(r)){for(u=h.delegateType||g,dt.test(u+g)||(a=a.parentNode);a;a=a.parentNode)p.push(a),l=a;l===(r.ownerDocument||i)&&p.push(l.defaultView||l.parentWindow||e)}for(s=0;(a=p[s++])&&!t.isPropagationStopped();)t.type=s>1?u:h.bindType||g,(d=(Q.get(a,"events")||{})[t.type]&&Q.get(a,"handle"))&&d.apply(a,n),(d=c&&a[c])&&d.apply&&U(a)&&(t.result=d.apply(a,n),!1===t.result&&t.preventDefault());return t.type=g,o||t.isDefaultPrevented()||h._default&&!1!==h._default.apply(p.pop(),n)||!U(r)||c&&v.isFunction(r[g])&&!v.isWindow(r)&&((l=r[c])&&(r[c]=null),v.event.triggered=g,r[g](),v.event.triggered=void 0,l&&(r[c]=l)),t.result}},simulate:function(e,t,n){var i=v.extend(new v.Event,n,{type:e,isSimulated:!0});v.event.trigger(i,null,t)}}),v.fn.extend({trigger:function(e,t){return this.each(function(){v.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return v.event.trigger(e,t,n,!0)}}),v.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,t){v.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),v.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),p.focusin="onfocusin"in e,p.focusin||v.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){v.event.simulate(t,e.target,v.event.fix(e))};v.event.special[t]={setup:function(){var i=this.ownerDocument||this,r=Q.access(i,t);r||i.addEventListener(e,n,!0),Q.access(i,t,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=Q.access(i,t)-1;r?Q.access(i,t,r):(i.removeEventListener(e,n,!0),Q.remove(i,t))}}});var ht=e.location,pt=v.now(),gt=/\?/;v.parseXML=function(t){var n;if(!t||"string"!=typeof t)return null;try{n=(new e.DOMParser).parseFromString(t,"text/xml")}catch(e){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||v.error("Invalid XML: "+t),n};var mt=/\[\]$/,vt=/\r?\n/g,yt=/^(?:submit|button|image|reset|file)$/i,_t=/^(?:input|select|textarea|keygen)/i;function bt(e,t,n,i){var r;if(v.isArray(t))v.each(t,function(t,r){n||mt.test(e)?i(e,r):bt(e+"["+("object"==typeof r&&null!=r?t:"")+"]",r,n,i)});else if(n||"object"!==v.type(t))i(e,t);else for(r in t)bt(e+"["+r+"]",t[r],n,i)}v.param=function(e,t){var n,i=[],r=function(e,t){var n=v.isFunction(t)?t():t;i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(v.isArray(e)||e.jquery&&!v.isPlainObject(e))v.each(e,function(){r(this.name,this.value)});else for(n in e)bt(n,e[n],t,r);return i.join("&")},v.fn.extend({serialize:function(){return v.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=v.prop(this,"elements");return e?v.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!v(this).is(":disabled")&&_t.test(this.nodeName)&&!yt.test(e)&&(this.checked||!re.test(e))}).map(function(e,t){var n=v(this).val();return null==n?null:v.isArray(n)?v.map(n,function(e){return{name:t.name,value:e.replace(vt,"\r\n")}}):{name:t.name,value:n.replace(vt,"\r\n")}}).get()}});var Et=/%20/g,Tt=/#.*$/,wt=/([?&])_=[^&]*/,xt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ct=/^(?:GET|HEAD)$/,St=/^\/\//,Dt={},kt={},At="*/".concat("*"),It=i.createElement("a");function Nt(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var i,r=0,o=t.toLowerCase().match(P)||[];if(v.isFunction(n))for(;i=o[r++];)"+"===i[0]?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(n)):(e[i]=e[i]||[]).push(n)}}function Ot(e,t,n,i){var r={},o=e===kt;function s(a){var l;return r[a]=!0,v.each(e[a]||[],function(e,a){var u=a(t,n,i);return"string"!=typeof u||o||r[u]?o?!(l=u):void 0:(t.dataTypes.unshift(u),s(u),!1)}),l}return s(t.dataTypes[0])||!r["*"]&&s("*")}function jt(e,t){var n,i,r=v.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((r[n]?e:i||(i={}))[n]=t[n]);return i&&v.extend(!0,e,i),e}It.href=ht.href,v.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ht.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(ht.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":At,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":v.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?jt(jt(e,v.ajaxSettings),t):jt(v.ajaxSettings,e)},ajaxPrefilter:Nt(Dt),ajaxTransport:Nt(kt),ajax:function(t,n){"object"==typeof t&&(n=t,t=void 0),n=n||{};var r,o,s,a,l,u,c,f,d,h,p=v.ajaxSetup({},n),g=p.context||p,m=p.context&&(g.nodeType||g.jquery)?v(g):v.event,y=v.Deferred(),_=v.Callbacks("once memory"),b=p.statusCode||{},E={},T={},w="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(c){if(!a)for(a={};t=xt.exec(s);)a[t[1].toLowerCase()]=t[2];t=a[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return c?s:null},setRequestHeader:function(e,t){return null==c&&(e=T[e.toLowerCase()]=T[e.toLowerCase()]||e,E[e]=t),this},overrideMimeType:function(e){return null==c&&(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(c)x.always(e[x.status]);else for(t in e)b[t]=[b[t],e[t]];return this},abort:function(e){var t=e||w;return r&&r.abort(t),C(0,t),this}};if(y.promise(x),p.url=((t||p.url||ht.href)+"").replace(St,ht.protocol+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(P)||[""],null==p.crossDomain){u=i.createElement("a");try{u.href=p.url,u.href=u.href,p.crossDomain=It.protocol+"//"+It.host!=u.protocol+"//"+u.host}catch(e){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=v.param(p.data,p.traditional)),Ot(Dt,p,n,x),c)return x;for(d in(f=v.event&&p.global)&&0==v.active++&&v.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Ct.test(p.type),o=p.url.replace(Tt,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Et,"+")):(h=p.url.slice(o.length),p.data&&(o+=(gt.test(o)?"&":"?")+p.data,delete p.data),!1===p.cache&&(o=o.replace(wt,"$1"),h=(gt.test(o)?"&":"?")+"_="+pt+++h),p.url=o+h),p.ifModified&&(v.lastModified[o]&&x.setRequestHeader("If-Modified-Since",v.lastModified[o]),v.etag[o]&&x.setRequestHeader("If-None-Match",v.etag[o])),(p.data&&p.hasContent&&!1!==p.contentType||n.contentType)&&x.setRequestHeader("Content-Type",p.contentType),x.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+At+"; q=0.01":""):p.accepts["*"]),p.headers)x.setRequestHeader(d,p.headers[d]);if(p.beforeSend&&(!1===p.beforeSend.call(g,x,p)||c))return x.abort();if(w="abort",_.add(p.complete),x.done(p.success),x.fail(p.error),r=Ot(kt,p,n,x)){if(x.readyState=1,f&&m.trigger("ajaxSend",[x,p]),c)return x;p.async&&p.timeout>0&&(l=e.setTimeout(function(){x.abort("timeout")},p.timeout));try{c=!1,r.send(E,C)}catch(e){if(c)throw e;C(-1,e)}}else C(-1,"No Transport");function C(t,n,i,a){var u,d,h,E,T,w=n;c||(c=!0,l&&e.clearTimeout(l),r=void 0,s=a||"",x.readyState=t>0?4:0,u=t>=200&&t<300||304===t,i&&(E=function(e,t,n){for(var i,r,o,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(r in a)if(a[r]&&a[r].test(i)){l.unshift(r);break}if(l[0]in n)o=l[0];else{for(r in n){if(!l[0]||e.converters[r+" "+l[0]]){o=r;break}s||(s=r)}o=o||s}if(o)return o!==l[0]&&l.unshift(o),n[o]}(p,x,i)),E=function(e,t,n,i){var r,o,s,a,l,u={},c=e.dataTypes.slice();if(c[1])for(s in e.converters)u[s.toLowerCase()]=e.converters[s];for(o=c.shift();o;)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(s=u[l+" "+o]||u["* "+o]))for(r in u)if((a=r.split(" "))[1]===o&&(s=u[l+" "+a[0]]||u["* "+a[0]])){!0===s?s=u[r]:!0!==u[r]&&(o=a[0],c.unshift(a[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}(p,E,x,u),u?(p.ifModified&&((T=x.getResponseHeader("Last-Modified"))&&(v.lastModified[o]=T),(T=x.getResponseHeader("etag"))&&(v.etag[o]=T)),204===t||"HEAD"===p.type?w="nocontent":304===t?w="notmodified":(w=E.state,d=E.data,u=!(h=E.error))):(h=w,!t&&w||(w="error",t<0&&(t=0))),x.status=t,x.statusText=(n||w)+"",u?y.resolveWith(g,[d,w,x]):y.rejectWith(g,[x,w,h]),x.statusCode(b),b=void 0,f&&m.trigger(u?"ajaxSuccess":"ajaxError",[x,p,u?d:h]),_.fireWith(g,[x,w]),f&&(m.trigger("ajaxComplete",[x,p]),--v.active||v.event.trigger("ajaxStop")))}return x},getJSON:function(e,t,n){return v.get(e,t,n,"json")},getScript:function(e,t){return v.get(e,void 0,t,"script")}}),v.each(["get","post"],function(e,t){v[t]=function(e,n,i,r){return v.isFunction(n)&&(r=r||i,i=n,n=void 0),v.ajax(v.extend({url:e,type:t,dataType:r,data:n,success:i},v.isPlainObject(e)&&e))}}),v._evalUrl=function(e){return v.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},v.fn.extend({wrapAll:function(e){var t;return this[0]&&(v.isFunction(e)&&(e=e.call(this[0])),t=v(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return v.isFunction(e)?this.each(function(t){v(this).wrapInner(e.call(this,t))}):this.each(function(){var t=v(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=v.isFunction(e);return this.each(function(n){v(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(e){return this.parent(e).not("body").each(function(){v(this).replaceWith(this.childNodes)}),this}}),v.expr.pseudos.hidden=function(e){return!v.expr.pseudos.visible(e)},v.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},v.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(e){}};var Lt={0:200,1223:204},Pt=v.ajaxSettings.xhr();p.cors=!!Pt&&"withCredentials"in Pt,p.ajax=Pt=!!Pt,v.ajaxTransport(function(t){var n,i;if(p.cors||Pt&&!t.crossDomain)return{send:function(r,o){var s,a=t.xhr();if(a.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(s in t.xhrFields)a[s]=t.xhrFields[s];for(s in t.mimeType&&a.overrideMimeType&&a.overrideMimeType(t.mimeType),t.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest"),r)a.setRequestHeader(s,r[s]);n=function(e){return function(){n&&(n=i=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===e?a.abort():"error"===e?"number"!=typeof a.status?o(0,"error"):o(a.status,a.statusText):o(Lt[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=n(),i=a.onerror=n("error"),void 0!==a.onabort?a.onabort=i:a.onreadystatechange=function(){4===a.readyState&&e.setTimeout(function(){n&&i()})},n=n("abort");try{a.send(t.hasContent&&t.data||null)}catch(e){if(n)throw e}},abort:function(){n&&n()}}}),v.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),v.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return v.globalEval(e),e}}}),v.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),v.ajaxTransport("script",function(e){var t,n;if(e.crossDomain)return{send:function(r,o){t=v("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&o("error"===e.type?404:200,e.type)}),i.head.appendChild(t[0])},abort:function(){n&&n()}}});var Ht,Mt=[],Rt=/(=)\?(?=&|$)|\?\?/;function Ft(e){return v.isWindow(e)?e:9===e.nodeType&&e.defaultView}v.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Mt.pop()||v.expando+"_"+pt++;return this[e]=!0,e}}),v.ajaxPrefilter("json jsonp",function(t,n,i){var r,o,s,a=!1!==t.jsonp&&(Rt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Rt.test(t.data)&&"data");if(a||"jsonp"===t.dataTypes[0])return r=t.jsonpCallback=v.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Rt,"$1"+r):!1!==t.jsonp&&(t.url+=(gt.test(t.url)?"&":"?")+t.jsonp+"="+r),t.converters["script json"]=function(){return s||v.error(r+" was not called"),s[0]},t.dataTypes[0]="json",o=e[r],e[r]=function(){s=arguments},i.always(function(){void 0===o?v(e).removeProp(r):e[r]=o,t[r]&&(t.jsonpCallback=n.jsonpCallback,Mt.push(r)),s&&v.isFunction(o)&&o(s[0]),s=o=void 0}),"script"}),p.createHTMLDocument=((Ht=i.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Ht.childNodes.length),v.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(p.createHTMLDocument?((r=(t=i.implementation.createHTMLDocument("")).createElement("base")).href=i.location.href,t.head.appendChild(r)):t=i),s=!n&&[],(o=D.exec(e))?[t.createElement(o[1])]:(o=he([e],t,s),s&&s.length&&v(s).remove(),v.merge([],o.childNodes)));var r,o,s},v.fn.load=function(e,t,n){var i,r,o,s=this,a=e.indexOf(" ");return a>-1&&(i=ut(e.slice(a)),e=e.slice(0,a)),v.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(r="POST"),s.length>0&&v.ajax({url:e,type:r||"GET",dataType:"html",data:t}).done(function(e){o=arguments,s.html(i?v("<div>").append(v.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},v.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){v.fn[t]=function(e){return this.on(t,e)}}),v.expr.pseudos.animated=function(e){return v.grep(v.timers,function(t){return e===t.elem}).length},v.offset={setOffset:function(e,t,n){var i,r,o,s,a,l,u=v.css(e,"position"),c=v(e),f={};"static"===u&&(e.style.position="relative"),a=c.offset(),o=v.css(e,"top"),l=v.css(e,"left"),("absolute"===u||"fixed"===u)&&(o+l).indexOf("auto")>-1?(s=(i=c.position()).top,r=i.left):(s=parseFloat(o)||0,r=parseFloat(l)||0),v.isFunction(t)&&(t=t.call(e,n,v.extend({},a))),null!=t.top&&(f.top=t.top-a.top+s),null!=t.left&&(f.left=t.left-a.left+r),"using"in t?t.using.call(e,f):c.css(f)}},v.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){v.offset.setOffset(this,e,t)});var t,n,i,r,o=this[0];return o?o.getClientRects().length?(i=o.getBoundingClientRect()).width||i.height?(n=Ft(r=o.ownerDocument),t=r.documentElement,{top:i.top+n.pageYOffset-t.clientTop,left:i.left+n.pageXOffset-t.clientLeft}):i:{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n=this[0],i={top:0,left:0};return"fixed"===v.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),v.nodeName(e[0],"html")||(i=e.offset()),i={top:i.top+v.css(e[0],"borderTopWidth",!0),left:i.left+v.css(e[0],"borderLeftWidth",!0)}),{top:t.top-i.top-v.css(n,"marginTop",!0),left:t.left-i.left-v.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===v.css(e,"position");)e=e.offsetParent;return e||pe})}}),v.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var n="pageYOffset"===t;v.fn[e]=function(i){return B(this,function(e,i,r){var o=Ft(e);return void 0===r?o?o[t]:e[i]:void(o?o.scrollTo(n?o.pageXOffset:r,n?r:o.pageYOffset):e[i]=r)},e,i,arguments.length)}}),v.each(["top","left"],function(e,t){v.cssHooks[t]=Me(p.pixelPosition,function(e,n){if(n)return n=He(e,t),Le.test(n)?v(e).position()[t]+"px":n})}),v.each({Height:"height",Width:"width"},function(e,t){v.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,i){v.fn[i]=function(r,o){var s=arguments.length&&(n||"boolean"!=typeof r),a=n||(!0===r||!0===o?"margin":"border");return B(this,function(t,n,r){var o;return v.isWindow(t)?0===i.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body["scroll"+e],o["scroll"+e],t.body["offset"+e],o["offset"+e],o["client"+e])):void 0===r?v.css(t,n,a):v.style(t,n,r,a)},t,s?r:void 0,s)}})}),v.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),v.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return v});var Wt=e.jQuery,qt=e.$;return v.noConflict=function(t){return e.$===v&&(e.$=qt),t&&e.jQuery===v&&(e.jQuery=Wt),v},t||(e.jQuery=e.$=v),v});var $jscomp={scope:{},findInternal:function(e,t,n){e instanceof String&&(e=String(e));for(var i=e.length,r=0;r<i;r++){var o=e[r];if(t.call(n,o,r,e))return{i:r,v:o}}return{i:-1,v:void 0}}};if($jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){if(n.get||n.set)throw new TypeError("ES3 does not support getters and setters.");e!=Array.prototype&&e!=Object.prototype&&(e[t]=n.value)},$jscomp.getGlobal=function(e){return"undefined"!=typeof window&&window===e?e:"undefined"!=typeof global&&null!=global?global:e},$jscomp.global=$jscomp.getGlobal(this),$jscomp.polyfill=function(e,t,n,i){if(t){for(n=$jscomp.global,e=e.split("."),i=0;i<e.length-1;i++){var r=e[i];r in n||(n[r]={}),n=n[r]}(t=t(i=n[e=e[e.length-1]]))!=i&&null!=t&&$jscomp.defineProperty(n,e,{configurable:!0,writable:!0,value:t})}},$jscomp.polyfill("Array.prototype.find",function(e){return e||function(e,t){return $jscomp.findInternal(this,e,t).v}},"es6-impl","es3"),function(e,t,n){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(t||n)}(function(e){var t=function(t,n,i){var r={invalid:[],getCaret:function(){try{var e,n=0,i=t.get(0),o=document.selection,s=i.selectionStart;return o&&-1===navigator.appVersion.indexOf("MSIE 10")?((e=o.createRange()).moveStart("character",-r.val().length),n=e.text.length):(s||"0"===s)&&(n=s),n}catch(e){}},setCaret:function(e){try{if(t.is(":focus")){var n,i=t.get(0);i.setSelectionRange?i.setSelectionRange(e,e):((n=i.createTextRange()).collapse(!0),n.moveEnd("character",e),n.moveStart("character",e),n.select())}}catch(e){}},events:function(){t.on("keydown.mask",function(e){t.data("mask-keycode",e.keyCode||e.which),t.data("mask-previus-value",t.val()),t.data("mask-previus-caret-pos",r.getCaret()),r.maskDigitPosMapOld=r.maskDigitPosMap}).on(e.jMaskGlobals.useInput?"input.mask":"keyup.mask",r.behaviour).on("paste.mask drop.mask",function(){setTimeout(function(){t.keydown().keyup()},100)}).on("change.mask",function(){t.data("changed",!0)}).on("blur.mask",function(){a===r.val()||t.data("changed")||t.trigger("change"),t.data("changed",!1)}).on("blur.mask",function(){a=r.val()}).on("focus.mask",function(t){!0===i.selectOnFocus&&e(t.target).select()}).on("focusout.mask",function(){i.clearIfNotMatch&&!o.test(r.val())&&r.val("")})},getRegexMask:function(){for(var e,t,i,r,o=[],a=0;a<n.length;a++)(e=s.translation[n.charAt(a)])?(t=e.pattern.toString().replace(/.{1}$|^.{1}/g,""),i=e.optional,(e=e.recursive)?(o.push(n.charAt(a)),r={digit:n.charAt(a),pattern:t}):o.push(i||e?t+"?":t)):o.push(n.charAt(a).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));return o=o.join(""),r&&(o=o.replace(new RegExp("("+r.digit+"(.*"+r.digit+")?)"),"($1)?").replace(new RegExp(r.digit,"g"),r.pattern)),new RegExp(o)},destroyEvents:function(){t.off("input keydown keyup paste drop blur focusout ".split(" ").join(".mask "))},val:function(e){var n=t.is("input")?"val":"text";return 0<arguments.length?(t[n]()!==e&&t[n](e),n=t):n=t[n](),n},calculateCaretPosition:function(){var e=t.data("mask-previus-value")||"",n=r.getMasked(),i=r.getCaret();if(e!==n){var o,s=t.data("mask-previus-caret-pos")||0,a=(n=n.length,e.length),l=e=0,u=0,c=0;for(o=i;o<n&&r.maskDigitPosMap[o];o++)l++;for(o=i-1;0<=o&&r.maskDigitPosMap[o];o--)e++;for(o=i-1;0<=o;o--)r.maskDigitPosMap[o]&&u++;for(o=s-1;0<=o;o--)r.maskDigitPosMapOld[o]&&c++;i>a?i=10*n:s>=i&&s!==a?r.maskDigitPosMapOld[i]||(s=i,i=i-(c-u)-e,r.maskDigitPosMap[i]&&(i=s)):i>s&&(i=i+(u-c)+l)}return i},behaviour:function(n){n=n||window.event,r.invalid=[];var i=t.data("mask-keycode");if(-1===e.inArray(i,s.byPassKeys)){i=r.getMasked();var o=r.getCaret();return setTimeout(function(){r.setCaret(r.calculateCaretPosition())},10),r.val(i),r.setCaret(o),r.callbacks(n)}},getMasked:function(e,t){var o,a,l,u=[],c=void 0===t?r.val():t+"",f=0,d=n.length,h=0,p=c.length,g=1,m="push",v=-1,y=0,_=[];for(i.reverse?(m="unshift",g=-1,o=0,f=d-1,h=p-1,a=function(){return-1<f&&-1<h}):(o=d-1,a=function(){return f<d&&h<p});a();){var b=n.charAt(f),E=c.charAt(h),T=s.translation[b];T?(E.match(T.pattern)?(u[m](E),T.recursive&&(-1===v?v=f:f===o&&f!==v&&(f=v-g),o===v&&(f-=g)),f+=g):E===l?(y--,l=void 0):T.optional?(f+=g,h-=g):T.fallback?(u[m](T.fallback),f+=g,h-=g):r.invalid.push({p:h,v:E,e:T.pattern}),h+=g):(e||u[m](b),E===b?(_.push(h),h+=g):(l=b,_.push(h+y),y++),f+=g)}return c=n.charAt(o),d!==p+1||s.translation[c]||u.push(c),u=u.join(""),r.mapMaskdigitPositions(u,_,p),u},mapMaskdigitPositions:function(e,t,n){for(e=i.reverse?e.length-n:0,r.maskDigitPosMap={},n=0;n<t.length;n++)r.maskDigitPosMap[t[n]+e]=1},callbacks:function(e){var o=r.val(),s=o!==a,l=[o,e,t,i],u=function(e,t,n){"function"==typeof i[e]&&t&&i[e].apply(this,n)};u("onChange",!0===s,l),u("onKeyPress",!0===s,l),u("onComplete",o.length===n.length,l),u("onInvalid",0<r.invalid.length,[o,e,t,r.invalid,i])}};t=e(t);var o,s=this,a=r.val();n="function"==typeof n?n(r.val(),void 0,t,i):n,s.mask=n,s.options=i,s.remove=function(){var e=r.getCaret();return r.destroyEvents(),r.val(s.getCleanVal()),r.setCaret(e),t},s.getCleanVal=function(){return r.getMasked(!0)},s.getMaskedVal=function(e){return r.getMasked(!1,e)},s.init=function(a){if(a=a||!1,i=i||{},s.clearIfNotMatch=e.jMaskGlobals.clearIfNotMatch,s.byPassKeys=e.jMaskGlobals.byPassKeys,s.translation=e.extend({},e.jMaskGlobals.translation,i.translation),s=e.extend(!0,{},s,i),o=r.getRegexMask(),a)r.events(),r.val(r.getMasked());else{i.placeholder&&t.attr("placeholder",i.placeholder),t.data("mask")&&t.attr("autocomplete","off"),a=0;for(var l=!0;a<n.length;a++){var u=s.translation[n.charAt(a)];if(u&&u.recursive){l=!1;break}}l&&t.attr("maxlength",n.length),r.destroyEvents(),r.events(),a=r.getCaret(),r.val(r.getMasked()),r.setCaret(a)}},s.init(!t.is("input"))};e.maskWatchers={};var n=function(){var n=e(this),r={},o=n.attr("data-mask");if(n.attr("data-mask-reverse")&&(r.reverse=!0),n.attr("data-mask-clearifnotmatch")&&(r.clearIfNotMatch=!0),"true"===n.attr("data-mask-selectonfocus")&&(r.selectOnFocus=!0),i(n,o,r))return n.data("mask",new t(this,o,r))},i=function(t,n,i){i=i||{};var r=e(t).data("mask"),o=JSON.stringify;t=e(t).val()||e(t).text();try{return"function"==typeof n&&(n=n(t)),"object"!=typeof r||o(r.options)!==o(i)||r.mask!==n}catch(e){}},r=function(e){var t,n=document.createElement("div");return(t=(e="on"+e)in n)||(n.setAttribute(e,"return;"),t="function"==typeof n[e]),t};e.fn.mask=function(n,r){r=r||{};var o=this.selector,s=(a=e.jMaskGlobals).watchInterval,a=r.watchInputs||a.watchInputs,l=function(){if(i(this,n,r))return e(this).data("mask",new t(this,n,r))};return e(this).each(l),o&&""!==o&&a&&(clearInterval(e.maskWatchers[o]),e.maskWatchers[o]=setInterval(function(){e(document).find(o).each(l)},s)),this},e.fn.masked=function(e){return this.data("mask").getMaskedVal(e)},e.fn.unmask=function(){return clearInterval(e.maskWatchers[this.selector]),delete e.maskWatchers[this.selector],this.each(function(){var t=e(this).data("mask");t&&t.remove().removeData("mask")})},e.fn.cleanVal=function(){return this.data("mask").getCleanVal()},e.applyDataMask=function(t){((t=t||e.jMaskGlobals.maskElements)instanceof e?t:e(t)).filter(e.jMaskGlobals.dataMaskAttr).each(n)},r={maskElements:"input,td,span,div",dataMaskAttr:"*[data-mask]",dataMask:!0,watchInterval:300,watchInputs:!0,useInput:!/Chrome\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent)&&r("input"),watchDataMask:!1,byPassKeys:[9,16,17,18,36,37,38,39,40,91],translation:{0:{pattern:/\d/},9:{pattern:/\d/,optional:!0},"#":{pattern:/\d/,recursive:!0},A:{pattern:/[a-zA-Z0-9]/},S:{pattern:/[a-zA-Z]/}}},e.jMaskGlobals=e.jMaskGlobals||{},(r=e.jMaskGlobals=e.extend(!0,{},r,e.jMaskGlobals)).dataMask&&e.applyDataMask(),setInterval(function(){e.jMaskGlobals.watchDataMask&&e.applyDataMask()},r.watchInterval)},window.jQuery,window.Zepto),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");!function(e){var t=jQuery.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1||t[0]>=4)throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(),function(){var e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i,r,o,s,a,l,u,c,f,d,h,p,g,m,v,y,_,b,E,T,w,x,C,S,D,k,A,I,N,O,j,L,P,H,M,R,F,W,q,B,U,$,Q,K,V,G,Y,z,X,J,Z,ee,te,ne,ie,re,oe,se,ae,le,ue,ce,fe,de,he,pe,ge,me,ve,ye,_e,be,Ee,Te,we,xe,Ce,Se,De,ke,Ae,Ie,Ne,Oe,je,Le,Pe,He,Me,Re,Fe,We,qe,Be,Ue,$e,Qe,Ke,Ve,Ge,Ye,ze,Xe,Je,Ze,et,tt,nt,it,rt,ot,st,at,lt,ut,ct,ft,dt,ht,pt,gt,mt,vt,yt,_t,bt,Et,Tt,wt,xt,Ct,St,Dt,kt,At,It,Nt,Ot,jt,Lt,Pt,Ht=function(e){var t=!1,n={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};function i(t){var n=this,i=!1;return e(this).one(r.TRANSITION_END,function(){i=!0}),setTimeout(function(){i||r.triggerTransitionEnd(n)},t),this}var r={TRANSITION_END:"bsTransitionEnd",getUID:function(e){for(;e+=~~(1e6*Math.random()),document.getElementById(e););return e},getSelectorFromElement:function(e){var t=e.getAttribute("data-target");return t||(t=e.getAttribute("href")||"",t=/^#[a-z]/i.test(t)?t:null),t},reflow:function(e){return e.offsetHeight},triggerTransitionEnd:function(n){e(n).trigger(t.end)},supportsTransitionEnd:function(){return Boolean(t)},typeCheckConfig:function(e,t,n){for(var i in n)if(n.hasOwnProperty(i)){var r=n[i],o=t[i],s=o&&((l=o)[0]||l).nodeType?"element":(a=o,{}.toString.call(a).match(/\s([a-zA-Z]+)/)[1].toLowerCase());if(!new RegExp(r).test(s))throw new Error(e.toUpperCase()+': Option "'+i+'" provided type "'+s+'" but expected type "'+r+'".')}var a,l}};return t=function(){if(window.QUnit)return!1;var e=document.createElement("bootstrap");for(var t in n)if(void 0!==e.style[t])return{end:n[t]};return!1}(),e.fn.emulateTransitionEnd=i,r.supportsTransitionEnd()&&(e.event.special[r.TRANSITION_END]={bindType:t.end,delegateType:t.end,handle:function(t){if(e(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}}),r}(jQuery),Mt=(i=jQuery,r="alert",s="."+(o="bs.alert"),a=i.fn[r],l={CLOSE:"close"+s,CLOSED:"closed"+s,CLICK_DATA_API:"click"+s+".data-api"},u="alert",c="fade",f="show",d=function(){function e(t){n(this,e),this._element=t}return e.prototype.close=function(e){e=e||this._element;var t=this._getRootElement(e);this._triggerCloseEvent(t).isDefaultPrevented()||this._removeElement(t)},e.prototype.dispose=function(){i.removeData(this._element,o),this._element=null},e.prototype._getRootElement=function(e){var t=Ht.getSelectorFromElement(e),n=!1;return t&&(n=i(t)[0]),n||(n=i(e).closest("."+u)[0]),n},e.prototype._triggerCloseEvent=function(e){var t=i.Event(l.CLOSE);return i(e).trigger(t),t},e.prototype._removeElement=function(e){var t=this;i(e).removeClass(f),Ht.supportsTransitionEnd()&&i(e).hasClass(c)?i(e).one(Ht.TRANSITION_END,function(n){return t._destroyElement(e,n)}).emulateTransitionEnd(150):this._destroyElement(e)},e.prototype._destroyElement=function(e){i(e).detach().trigger(l.CLOSED).remove()},e._jQueryInterface=function(t){return this.each(function(){var n=i(this),r=n.data(o);r||(r=new e(this),n.data(o,r)),"close"===t&&r[t](this)})},e._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},t(e,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}}]),e}(),i(document).on(l.CLICK_DATA_API,'[data-dismiss="alert"]',d._handleDismiss(new d)),i.fn[r]=d._jQueryInterface,i.fn[r].Constructor=d,i.fn[r].noConflict=function(){return i.fn[r]=a,d._jQueryInterface},h=jQuery,p="button",m="."+(g="bs.button"),v=".data-api",y=h.fn[p],_="active",b="btn",E="focus",T='[data-toggle^="button"]',w='[data-toggle="buttons"]',x="input",C=".active",S=".btn",D={CLICK_DATA_API:"click"+m+v,FOCUS_BLUR_DATA_API:"focus"+m+v+" blur"+m+v},k=function(){function e(t){n(this,e),this._element=t}return e.prototype.toggle=function(){var e=!0,t=h(this._element).closest(w)[0];if(t){var n=h(this._element).find(x)[0];if(n){if("radio"===n.type)if(n.checked&&h(this._element).hasClass(_))e=!1;else{var i=h(t).find(C)[0];i&&h(i).removeClass(_)}e&&(n.checked=!h(this._element).hasClass(_),h(n).trigger("change")),n.focus()}}this._element.setAttribute("aria-pressed",!h(this._element).hasClass(_)),e&&h(this._element).toggleClass(_)},e.prototype.dispose=function(){h.removeData(this._element,g),this._element=null},e._jQueryInterface=function(t){return this.each(function(){var n=h(this).data(g);n||(n=new e(this),h(this).data(g,n)),"toggle"===t&&n[t]()})},t(e,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}}]),e}(),h(document).on(D.CLICK_DATA_API,T,function(e){e.preventDefault();var t=e.target;h(t).hasClass(b)||(t=h(t).closest(S)),k._jQueryInterface.call(h(t),"toggle")}).on(D.FOCUS_BLUR_DATA_API,T,function(e){var t=h(e.target).closest(S)[0];h(t).toggleClass(E,/^focus(in)?$/.test(e.type))}),h.fn[p]=k._jQueryInterface,h.fn[p].Constructor=k,h.fn[p].noConflict=function(){return h.fn[p]=y,k._jQueryInterface},A=jQuery,I="carousel",O="."+(N="bs.carousel"),j=".data-api",L=A.fn[I],P={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0},H={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean"},M={NEXT:"next",PREV:"prev",LEFT:"left",RIGHT:"right"},R={SLIDE:"slide"+O,SLID:"slid"+O,KEYDOWN:"keydown"+O,MOUSEENTER:"mouseenter"+O,MOUSELEAVE:"mouseleave"+O,LOAD_DATA_API:"load"+O+j,CLICK_DATA_API:"click"+O+j},F="carousel",W="active",q="slide",B="carousel-item-right",U="carousel-item-left",$="carousel-item-next",Q="carousel-item-prev",K={ACTIVE:".active",ACTIVE_ITEM:".active.carousel-item",ITEM:".carousel-item",NEXT_PREV:".carousel-item-next, .carousel-item-prev",INDICATORS:".carousel-indicators",DATA_SLIDE:"[data-slide], [data-slide-to]",DATA_RIDE:'[data-ride="carousel"]'},V=function(){function i(e,t){n(this,i),this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this._config=this._getConfig(t),this._element=A(e)[0],this._indicatorsElement=A(this._element).find(K.INDICATORS)[0],this._addEventListeners()}return i.prototype.next=function(){if(this._isSliding)throw new Error("Carousel is sliding");this._slide(M.NEXT)},i.prototype.nextWhenVisible=function(){document.hidden||this.next()},i.prototype.prev=function(){if(this._isSliding)throw new Error("Carousel is sliding");this._slide(M.PREVIOUS)},i.prototype.pause=function(e){e||(this._isPaused=!0),A(this._element).find(K.NEXT_PREV)[0]&&Ht.supportsTransitionEnd()&&(Ht.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},i.prototype.cycle=function(e){e||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},i.prototype.to=function(e){var t=this;this._activeElement=A(this._element).find(K.ACTIVE_ITEM)[0];var n=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0))if(this._isSliding)A(this._element).one(R.SLID,function(){return t.to(e)});else{if(n===e)return this.pause(),void this.cycle();var i=e>n?M.NEXT:M.PREVIOUS;this._slide(i,this._items[e])}},i.prototype.dispose=function(){A(this._element).off(O),A.removeData(this._element,N),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},i.prototype._getConfig=function(e){return e=A.extend({},P,e),Ht.typeCheckConfig(I,e,H),e},i.prototype._addEventListeners=function(){var e=this;this._config.keyboard&&A(this._element).on(R.KEYDOWN,function(t){return e._keydown(t)}),"hover"!==this._config.pause||"ontouchstart"in document.documentElement||A(this._element).on(R.MOUSEENTER,function(t){return e.pause(t)}).on(R.MOUSELEAVE,function(t){return e.cycle(t)})},i.prototype._keydown=function(e){if(!/input|textarea/i.test(e.target.tagName))switch(e.which){case 37:e.preventDefault(),this.prev();break;case 39:e.preventDefault(),this.next();break;default:return}},i.prototype._getItemIndex=function(e){return this._items=A.makeArray(A(e).parent().find(K.ITEM)),this._items.indexOf(e)},i.prototype._getItemByDirection=function(e,t){var n=e===M.NEXT,i=e===M.PREVIOUS,r=this._getItemIndex(t),o=this._items.length-1;if((i&&0===r||n&&r===o)&&!this._config.wrap)return t;var s=(r+(e===M.PREVIOUS?-1:1))%this._items.length;return-1===s?this._items[this._items.length-1]:this._items[s]},i.prototype._triggerSlideEvent=function(e,t){var n=A.Event(R.SLIDE,{relatedTarget:e,direction:t});return A(this._element).trigger(n),n},i.prototype._setActiveIndicatorElement=function(e){if(this._indicatorsElement){A(this._indicatorsElement).find(K.ACTIVE).removeClass(W);var t=this._indicatorsElement.children[this._getItemIndex(e)];t&&A(t).addClass(W)}},i.prototype._slide=function(e,t){var n=this,i=A(this._element).find(K.ACTIVE_ITEM)[0],r=t||i&&this._getItemByDirection(e,i),o=Boolean(this._interval),s=void 0,a=void 0,l=void 0;if(e===M.NEXT?(s=U,a=$,l=M.LEFT):(s=B,a=Q,l=M.RIGHT),r&&A(r).hasClass(W))this._isSliding=!1;else if(!this._triggerSlideEvent(r,l).isDefaultPrevented()&&i&&r){this._isSliding=!0,o&&this.pause(),this._setActiveIndicatorElement(r);var u=A.Event(R.SLID,{relatedTarget:r,direction:l});Ht.supportsTransitionEnd()&&A(this._element).hasClass(q)?(A(r).addClass(a),Ht.reflow(r),A(i).addClass(s),A(r).addClass(s),A(i).one(Ht.TRANSITION_END,function(){A(r).removeClass(s+" "+a).addClass(W),A(i).removeClass(W+" "+a+" "+s),n._isSliding=!1,setTimeout(function(){return A(n._element).trigger(u)},0)}).emulateTransitionEnd(600)):(A(i).removeClass(W),A(r).addClass(W),this._isSliding=!1,A(this._element).trigger(u)),o&&this.cycle()}},i._jQueryInterface=function(t){return this.each(function(){var n=A(this).data(N),r=A.extend({},P,A(this).data());"object"===(void 0===t?"undefined":e(t))&&A.extend(r,t);var o="string"==typeof t?t:r.slide;if(n||(n=new i(this,r),A(this).data(N,n)),"number"==typeof t)n.to(t);else if("string"==typeof o){if(void 0===n[o])throw new Error('No method named "'+o+'"');n[o]()}else r.interval&&(n.pause(),n.cycle())})},i._dataApiClickHandler=function(e){var t=Ht.getSelectorFromElement(this);if(t){var n=A(t)[0];if(n&&A(n).hasClass(F)){var r=A.extend({},A(n).data(),A(this).data()),o=this.getAttribute("data-slide-to");o&&(r.interval=!1),i._jQueryInterface.call(A(n),r),o&&A(n).data(N).to(o),e.preventDefault()}}},t(i,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}},{key:"Default",get:function(){return P}}]),i}(),A(document).on(R.CLICK_DATA_API,K.DATA_SLIDE,V._dataApiClickHandler),A(window).on(R.LOAD_DATA_API,function(){A(K.DATA_RIDE).each(function(){var e=A(this);V._jQueryInterface.call(e,e.data())})}),A.fn[I]=V._jQueryInterface,A.fn[I].Constructor=V,A.fn[I].noConflict=function(){return A.fn[I]=L,V._jQueryInterface},G=jQuery,Y="collapse",X="."+(z="bs.collapse"),J=G.fn[Y],Z={toggle:!0,parent:""},ee={toggle:"boolean",parent:"string"},te={SHOW:"show"+X,SHOWN:"shown"+X,HIDE:"hide"+X,HIDDEN:"hidden"+X,CLICK_DATA_API:"click"+X+".data-api"},ne="show",ie="collapse",re="collapsing",oe="collapsed",se="width",ae="height",le=".card > .show, .card > .collapsing",ue='[data-toggle="collapse"]',ce=function(){function i(e,t){n(this,i),this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=G.makeArray(G('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]')),this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}return i.prototype.toggle=function(){G(this._element).hasClass(ne)?this.hide():this.show()},i.prototype.show=function(){var e=this;if(this._isTransitioning)throw new Error("Collapse is transitioning");if(!G(this._element).hasClass(ne)){var t=void 0,n=void 0;if(this._parent&&((t=G.makeArray(G(this._parent).find(le))).length||(t=null)),!(t&&(n=G(t).data(z))&&n._isTransitioning)){var r=G.Event(te.SHOW);if(G(this._element).trigger(r),!r.isDefaultPrevented()){t&&(i._jQueryInterface.call(G(t),"hide"),n||G(t).data(z,null));var o=this._getDimension();G(this._element).removeClass(ie).addClass(re),this._element.style[o]=0,this._element.setAttribute("aria-expanded",!0),this._triggerArray.length&&G(this._triggerArray).removeClass(oe).attr("aria-expanded",!0),this.setTransitioning(!0);var s=function(){G(e._element).removeClass(re).addClass(ie).addClass(ne),e._element.style[o]="",e.setTransitioning(!1),G(e._element).trigger(te.SHOWN)};if(Ht.supportsTransitionEnd()){var a="scroll"+(o[0].toUpperCase()+o.slice(1));G(this._element).one(Ht.TRANSITION_END,s).emulateTransitionEnd(600),this._element.style[o]=this._element[a]+"px"}else s()}}}},i.prototype.hide=function(){var e=this;if(this._isTransitioning)throw new Error("Collapse is transitioning");if(G(this._element).hasClass(ne)){var t=G.Event(te.HIDE);if(G(this._element).trigger(t),!t.isDefaultPrevented()){var n=this._getDimension(),i=n===se?"offsetWidth":"offsetHeight";this._element.style[n]=this._element[i]+"px",Ht.reflow(this._element),G(this._element).addClass(re).removeClass(ie).removeClass(ne),this._element.setAttribute("aria-expanded",!1),this._triggerArray.length&&G(this._triggerArray).addClass(oe).attr("aria-expanded",!1),this.setTransitioning(!0);var r=function(){e.setTransitioning(!1),G(e._element).removeClass(re).addClass(ie).trigger(te.HIDDEN)};this._element.style[n]="",Ht.supportsTransitionEnd()?G(this._element).one(Ht.TRANSITION_END,r).emulateTransitionEnd(600):r()}}},i.prototype.setTransitioning=function(e){this._isTransitioning=e},i.prototype.dispose=function(){G.removeData(this._element,z),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},i.prototype._getConfig=function(e){return(e=G.extend({},Z,e)).toggle=Boolean(e.toggle),Ht.typeCheckConfig(Y,e,ee),e},i.prototype._getDimension=function(){return G(this._element).hasClass(se)?se:ae},i.prototype._getParent=function(){var e=this,t=G(this._config.parent)[0],n='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]';return G(t).find(n).each(function(t,n){e._addAriaAndCollapsedClass(i._getTargetFromElement(n),[n])}),t},i.prototype._addAriaAndCollapsedClass=function(e,t){if(e){var n=G(e).hasClass(ne);e.setAttribute("aria-expanded",n),t.length&&G(t).toggleClass(oe,!n).attr("aria-expanded",n)}},i._getTargetFromElement=function(e){var t=Ht.getSelectorFromElement(e);return t?G(t)[0]:null},i._jQueryInterface=function(t){return this.each(function(){var n=G(this),r=n.data(z),o=G.extend({},Z,n.data(),"object"===(void 0===t?"undefined":e(t))&&t);if(!r&&o.toggle&&/show|hide/.test(t)&&(o.toggle=!1),r||(r=new i(this,o),n.data(z,r)),"string"==typeof t){if(void 0===r[t])throw new Error('No method named "'+t+'"');r[t]()}})},t(i,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}},{key:"Default",get:function(){return Z}}]),i}(),G(document).on(te.CLICK_DATA_API,ue,function(e){e.preventDefault();var t=ce._getTargetFromElement(this),n=G(t).data(z)?"toggle":G(this).data();ce._jQueryInterface.call(G(t),n)}),G.fn[Y]=ce._jQueryInterface,G.fn[Y].Constructor=ce,G.fn[Y].noConflict=function(){return G.fn[Y]=J,ce._jQueryInterface},fe=jQuery,de="dropdown",pe="."+(he="bs.dropdown"),ge=".data-api",me=fe.fn[de],ve={HIDE:"hide"+pe,HIDDEN:"hidden"+pe,SHOW:"show"+pe,SHOWN:"shown"+pe,CLICK:"click"+pe,CLICK_DATA_API:"click"+pe+ge,FOCUSIN_DATA_API:"focusin"+pe+ge,KEYDOWN_DATA_API:"keydown"+pe+ge},ye="dropdown-backdrop",_e="disabled",be="show",Ee=".dropdown-backdrop",Te='[data-toggle="dropdown"]',we=".dropdown form",xe='[role="menu"]',Ce='[role="listbox"]',Se=".navbar-nav",De='[role="menu"] li:not(.disabled) a, [role="listbox"] li:not(.disabled) a',ke=function(){function e(t){n(this,e),this._element=t,this._addEventListeners()}return e.prototype.toggle=function(){if(this.disabled||fe(this).hasClass(_e))return!1;var t=e._getParentFromElement(this),n=fe(t).hasClass(be);if(e._clearMenus(),n)return!1;if("ontouchstart"in document.documentElement&&!fe(t).closest(Se).length){var i=document.createElement("div");i.className=ye,fe(i).insertBefore(this),fe(i).on("click",e._clearMenus)}var r={relatedTarget:this},o=fe.Event(ve.SHOW,r);return fe(t).trigger(o),!o.isDefaultPrevented()&&(this.focus(),this.setAttribute("aria-expanded",!0),fe(t).toggleClass(be),fe(t).trigger(fe.Event(ve.SHOWN,r)),!1)},e.prototype.dispose=function(){fe.removeData(this._element,he),fe(this._element).off(pe),this._element=null},e.prototype._addEventListeners=function(){fe(this._element).on(ve.CLICK,this.toggle)},e._jQueryInterface=function(t){return this.each(function(){var n=fe(this).data(he);if(n||(n=new e(this),fe(this).data(he,n)),"string"==typeof t){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t].call(this)}})},e._clearMenus=function(t){if(!t||3!==t.which){var n=fe(Ee)[0];n&&n.parentNode.removeChild(n);for(var i=fe.makeArray(fe(Te)),r=0;r<i.length;r++){var o=e._getParentFromElement(i[r]),s={relatedTarget:i[r]};if(fe(o).hasClass(be)&&!(t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"focusin"===t.type)&&fe.contains(o,t.target))){var a=fe.Event(ve.HIDE,s);fe(o).trigger(a),a.isDefaultPrevented()||(i[r].setAttribute("aria-expanded","false"),fe(o).removeClass(be).trigger(fe.Event(ve.HIDDEN,s)))}}}},e._getParentFromElement=function(e){var t=void 0,n=Ht.getSelectorFromElement(e);return n&&(t=fe(n)[0]),t||e.parentNode},e._dataApiKeydownHandler=function(t){if(/(38|40|27|32)/.test(t.which)&&!/input|textarea/i.test(t.target.tagName)&&(t.preventDefault(),t.stopPropagation(),!this.disabled&&!fe(this).hasClass(_e))){var n=e._getParentFromElement(this),i=fe(n).hasClass(be);if(!i&&27!==t.which||i&&27===t.which){if(27===t.which){var r=fe(n).find(Te)[0];fe(r).trigger("focus")}fe(this).trigger("click")}else{var o=fe(n).find(De).get();if(o.length){var s=o.indexOf(t.target);38===t.which&&s>0&&s--,40===t.which&&s<o.length-1&&s++,s<0&&(s=0),o[s].focus()}}}},t(e,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}}]),e}(),fe(document).on(ve.KEYDOWN_DATA_API,Te,ke._dataApiKeydownHandler).on(ve.KEYDOWN_DATA_API,xe,ke._dataApiKeydownHandler).on(ve.KEYDOWN_DATA_API,Ce,ke._dataApiKeydownHandler).on(ve.CLICK_DATA_API+" "+ve.FOCUSIN_DATA_API,ke._clearMenus).on(ve.CLICK_DATA_API,Te,ke.prototype.toggle).on(ve.CLICK_DATA_API,we,function(e){e.stopPropagation()}),fe.fn[de]=ke._jQueryInterface,fe.fn[de].Constructor=ke,fe.fn[de].noConflict=function(){return fe.fn[de]=me,ke._jQueryInterface},Ae=jQuery,Ie="modal",Oe="."+(Ne="bs.modal"),je=Ae.fn[Ie],Le={backdrop:!0,keyboard:!0,focus:!0,show:!0},Pe={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},He={HIDE:"hide"+Oe,HIDDEN:"hidden"+Oe,SHOW:"show"+Oe,SHOWN:"shown"+Oe,FOCUSIN:"focusin"+Oe,RESIZE:"resize"+Oe,CLICK_DISMISS:"click.dismiss"+Oe,KEYDOWN_DISMISS:"keydown.dismiss"+Oe,MOUSEUP_DISMISS:"mouseup.dismiss"+Oe,MOUSEDOWN_DISMISS:"mousedown.dismiss"+Oe,CLICK_DATA_API:"click"+Oe+".data-api"},Me="modal-scrollbar-measure",Re="modal-backdrop",Fe="modal-open",We="fade",qe="show",Be={DIALOG:".modal-dialog",DATA_TOGGLE:'[data-toggle="modal"]',DATA_DISMISS:'[data-dismiss="modal"]',FIXED_CONTENT:".fixed-top, .fixed-bottom, .is-fixed, .sticky-top"},Ue=function(){function i(e,t){n(this,i),this._config=this._getConfig(t),this._element=e,this._dialog=Ae(e).find(Be.DIALOG)[0],this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._originalBodyPadding=0,this._scrollbarWidth=0}return i.prototype.toggle=function(e){return this._isShown?this.hide():this.show(e)},i.prototype.show=function(e){var t=this;if(this._isTransitioning)throw new Error("Modal is transitioning");Ht.supportsTransitionEnd()&&Ae(this._element).hasClass(We)&&(this._isTransitioning=!0);var n=Ae.Event(He.SHOW,{relatedTarget:e});Ae(this._element).trigger(n),this._isShown||n.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),Ae(document.body).addClass(Fe),this._setEscapeEvent(),this._setResizeEvent(),Ae(this._element).on(He.CLICK_DISMISS,Be.DATA_DISMISS,function(e){return t.hide(e)}),Ae(this._dialog).on(He.MOUSEDOWN_DISMISS,function(){Ae(t._element).one(He.MOUSEUP_DISMISS,function(e){Ae(e.target).is(t._element)&&(t._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return t._showElement(e)}))},i.prototype.hide=function(e){var t=this;if(e&&e.preventDefault(),this._isTransitioning)throw new Error("Modal is transitioning");var n=Ht.supportsTransitionEnd()&&Ae(this._element).hasClass(We);n&&(this._isTransitioning=!0);var i=Ae.Event(He.HIDE);Ae(this._element).trigger(i),this._isShown&&!i.isDefaultPrevented()&&(this._isShown=!1,this._setEscapeEvent(),this._setResizeEvent(),Ae(document).off(He.FOCUSIN),Ae(this._element).removeClass(qe),Ae(this._element).off(He.CLICK_DISMISS),Ae(this._dialog).off(He.MOUSEDOWN_DISMISS),n?Ae(this._element).one(Ht.TRANSITION_END,function(e){return t._hideModal(e)}).emulateTransitionEnd(300):this._hideModal())},i.prototype.dispose=function(){Ae.removeData(this._element,Ne),Ae(window,document,this._element,this._backdrop).off(Oe),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._originalBodyPadding=null,this._scrollbarWidth=null},i.prototype._getConfig=function(e){return e=Ae.extend({},Le,e),Ht.typeCheckConfig(Ie,e,Pe),e},i.prototype._showElement=function(e){var t=this,n=Ht.supportsTransitionEnd()&&Ae(this._element).hasClass(We);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,n&&Ht.reflow(this._element),Ae(this._element).addClass(qe),this._config.focus&&this._enforceFocus();var i=Ae.Event(He.SHOWN,{relatedTarget:e}),r=function(){t._config.focus&&t._element.focus(),t._isTransitioning=!1,Ae(t._element).trigger(i)};n?Ae(this._dialog).one(Ht.TRANSITION_END,r).emulateTransitionEnd(300):r()},i.prototype._enforceFocus=function(){var e=this;Ae(document).off(He.FOCUSIN).on(He.FOCUSIN,function(t){document===t.target||e._element===t.target||Ae(e._element).has(t.target).length||e._element.focus()})},i.prototype._setEscapeEvent=function(){var e=this;this._isShown&&this._config.keyboard?Ae(this._element).on(He.KEYDOWN_DISMISS,function(t){27===t.which&&e.hide()}):this._isShown||Ae(this._element).off(He.KEYDOWN_DISMISS)},i.prototype._setResizeEvent=function(){var e=this;this._isShown?Ae(window).on(He.RESIZE,function(t){return e._handleUpdate(t)}):Ae(window).off(He.RESIZE)},i.prototype._hideModal=function(){var e=this;this._element.style.display="none",this._element.setAttribute("aria-hidden","true"),this._isTransitioning=!1,this._showBackdrop(function(){Ae(document.body).removeClass(Fe),e._resetAdjustments(),e._resetScrollbar(),Ae(e._element).trigger(He.HIDDEN)})},i.prototype._removeBackdrop=function(){this._backdrop&&(Ae(this._backdrop).remove(),this._backdrop=null)},i.prototype._showBackdrop=function(e){var t=this,n=Ae(this._element).hasClass(We)?We:"";if(this._isShown&&this._config.backdrop){var i=Ht.supportsTransitionEnd()&&n;if(this._backdrop=document.createElement("div"),this._backdrop.className=Re,n&&Ae(this._backdrop).addClass(n),Ae(this._backdrop).appendTo(document.body),Ae(this._element).on(He.CLICK_DISMISS,function(e){t._ignoreBackdropClick?t._ignoreBackdropClick=!1:e.target===e.currentTarget&&("static"===t._config.backdrop?t._element.focus():t.hide())}),i&&Ht.reflow(this._backdrop),Ae(this._backdrop).addClass(qe),!e)return;if(!i)return void e();Ae(this._backdrop).one(Ht.TRANSITION_END,e).emulateTransitionEnd(150)}else if(!this._isShown&&this._backdrop){Ae(this._backdrop).removeClass(qe);var r=function(){t._removeBackdrop(),e&&e()};Ht.supportsTransitionEnd()&&Ae(this._element).hasClass(We)?Ae(this._backdrop).one(Ht.TRANSITION_END,r).emulateTransitionEnd(150):r()}else e&&e()},i.prototype._handleUpdate=function(){this._adjustDialog()},i.prototype._adjustDialog=function(){var e=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&e&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!e&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},i.prototype._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},i.prototype._checkScrollbar=function(){this._isBodyOverflowing=document.body.clientWidth<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},i.prototype._setScrollbar=function(){var e=parseInt(Ae(Be.FIXED_CONTENT).css("padding-right")||0,10);this._originalBodyPadding=document.body.style.paddingRight||"",this._isBodyOverflowing&&(document.body.style.paddingRight=e+this._scrollbarWidth+"px")},i.prototype._resetScrollbar=function(){document.body.style.paddingRight=this._originalBodyPadding},i.prototype._getScrollbarWidth=function(){var e=document.createElement("div");e.className=Me,document.body.appendChild(e);var t=e.offsetWidth-e.clientWidth;return document.body.removeChild(e),t},i._jQueryInterface=function(t,n){return this.each(function(){var r=Ae(this).data(Ne),o=Ae.extend({},i.Default,Ae(this).data(),"object"===(void 0===t?"undefined":e(t))&&t);if(r||(r=new i(this,o),Ae(this).data(Ne,r)),"string"==typeof t){if(void 0===r[t])throw new Error('No method named "'+t+'"');r[t](n)}else o.show&&r.show(n)})},t(i,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}},{key:"Default",get:function(){return Le}}]),i}(),Ae(document).on(He.CLICK_DATA_API,Be.DATA_TOGGLE,function(e){var t=this,n=void 0,i=Ht.getSelectorFromElement(this);i&&(n=Ae(i)[0]);var r=Ae(n).data(Ne)?"toggle":Ae.extend({},Ae(n).data(),Ae(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||e.preventDefault();var o=Ae(n).one(He.SHOW,function(e){e.isDefaultPrevented()||o.one(He.HIDDEN,function(){Ae(t).is(":visible")&&t.focus()})});Ue._jQueryInterface.call(Ae(n),r,this)}),Ae.fn[Ie]=Ue._jQueryInterface,Ae.fn[Ie].Constructor=Ue,Ae.fn[Ie].noConflict=function(){return Ae.fn[Ie]=je,Ue._jQueryInterface},$e=jQuery,Qe="scrollspy",Ve="."+(Ke="bs.scrollspy"),Ge=$e.fn[Qe],Ye={offset:10,method:"auto",target:""},ze={offset:"number",method:"string",target:"(string|element)"},Xe={ACTIVATE:"activate"+Ve,SCROLL:"scroll"+Ve,LOAD_DATA_API:"load"+Ve+".data-api"},Je="dropdown-item",Ze="active",et={DATA_SPY:'[data-spy="scroll"]',ACTIVE:".active",LIST_ITEM:".list-item",LI:"li",LI_DROPDOWN:"li.dropdown",NAV_LINKS:".nav-link",DROPDOWN:".dropdown",DROPDOWN_ITEMS:".dropdown-item",DROPDOWN_TOGGLE:".dropdown-toggle"},tt="offset",nt="position",it=function(){function i(e,t){var r=this;n(this,i),this._element=e,this._scrollElement="BODY"===e.tagName?window:e,this._config=this._getConfig(t),this._selector=this._config.target+" "+et.NAV_LINKS+","+this._config.target+" "+et.DROPDOWN_ITEMS,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,$e(this._scrollElement).on(Xe.SCROLL,function(e){return r._process(e)}),this.refresh(),this._process()}return i.prototype.refresh=function(){var e=this,t=this._scrollElement!==this._scrollElement.window?nt:tt,n="auto"===this._config.method?t:this._config.method,i=n===nt?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),$e.makeArray($e(this._selector)).map(function(e){var t=void 0,r=Ht.getSelectorFromElement(e);return r&&(t=$e(r)[0]),t&&(t.offsetWidth||t.offsetHeight)?[$e(t)[n]().top+i,r]:null}).filter(function(e){return e}).sort(function(e,t){return e[0]-t[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},i.prototype.dispose=function(){$e.removeData(this._element,Ke),$e(this._scrollElement).off(Ve),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},i.prototype._getConfig=function(e){if("string"!=typeof(e=$e.extend({},Ye,e)).target){var t=$e(e.target).attr("id");t||(t=Ht.getUID(Qe),$e(e.target).attr("id",t)),e.target="#"+t}return Ht.typeCheckConfig(Qe,e,ze),e},i.prototype._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},i.prototype._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},i.prototype._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.offsetHeight},i.prototype._process=function(){var e=this._getScrollTop()+this._config.offset,t=this._getScrollHeight(),n=this._config.offset+t-this._getOffsetHeight();if(this._scrollHeight!==t&&this.refresh(),e>=n){var i=this._targets[this._targets.length-1];this._activeTarget!==i&&this._activate(i)}else{if(this._activeTarget&&e<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var r=this._offsets.length;r--;){this._activeTarget!==this._targets[r]&&e>=this._offsets[r]&&(void 0===this._offsets[r+1]||e<this._offsets[r+1])&&this._activate(this._targets[r])}}},i.prototype._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",");t=t.map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'});var n=$e(t.join(","));n.hasClass(Je)?(n.closest(et.DROPDOWN).find(et.DROPDOWN_TOGGLE).addClass(Ze),n.addClass(Ze)):n.parents(et.LI).find("> "+et.NAV_LINKS).addClass(Ze),$e(this._scrollElement).trigger(Xe.ACTIVATE,{relatedTarget:e})},i.prototype._clear=function(){$e(this._selector).filter(et.ACTIVE).removeClass(Ze)},i._jQueryInterface=function(t){return this.each(function(){var n=$e(this).data(Ke),r="object"===(void 0===t?"undefined":e(t))&&t;if(n||(n=new i(this,r),$e(this).data(Ke,n)),"string"==typeof t){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},t(i,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}},{key:"Default",get:function(){return Ye}}]),i}(),$e(window).on(Xe.LOAD_DATA_API,function(){for(var e=$e.makeArray($e(et.DATA_SPY)),t=e.length;t--;){var n=$e(e[t]);it._jQueryInterface.call(n,n.data())}}),$e.fn[Qe]=it._jQueryInterface,$e.fn[Qe].Constructor=it,$e.fn[Qe].noConflict=function(){return $e.fn[Qe]=Ge,it._jQueryInterface},rt=jQuery,st="."+(ot="bs.tab"),at=rt.fn.tab,lt={HIDE:"hide"+st,HIDDEN:"hidden"+st,SHOW:"show"+st,SHOWN:"shown"+st,CLICK_DATA_API:"click"+st+".data-api"},ut="dropdown-menu",ct="active",ft="disabled",dt="fade",ht="show",pt=".dropdown",gt="ul:not(.dropdown-menu), ol:not(.dropdown-menu), nav:not(.dropdown-menu)",mt="> .nav-item .fade, > .fade",vt=".active",yt="> .nav-item > .active, > .active",_t='[data-toggle="tab"], [data-toggle="pill"]',bt=".dropdown-toggle",Et="> .dropdown-menu .active",Tt=function(){function e(t){n(this,e),this._element=t}return e.prototype.show=function(){var e=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&rt(this._element).hasClass(ct)||rt(this._element).hasClass(ft))){var t=void 0,n=void 0,i=rt(this._element).closest(gt)[0],r=Ht.getSelectorFromElement(this._element);i&&(n=(n=rt.makeArray(rt(i).find(vt)))[n.length-1]);var o=rt.Event(lt.HIDE,{relatedTarget:this._element}),s=rt.Event(lt.SHOW,{relatedTarget:n});if(n&&rt(n).trigger(o),rt(this._element).trigger(s),!s.isDefaultPrevented()&&!o.isDefaultPrevented()){r&&(t=rt(r)[0]),this._activate(this._element,i);var a=function(){var t=rt.Event(lt.HIDDEN,{relatedTarget:e._element}),i=rt.Event(lt.SHOWN,{relatedTarget:n});rt(n).trigger(t),rt(e._element).trigger(i)};t?this._activate(t,t.parentNode,a):a()}}},e.prototype.dispose=function(){rt.removeClass(this._element,ot),this._element=null},e.prototype._activate=function(e,t,n){var i=this,r=rt(t).find(yt)[0],o=n&&Ht.supportsTransitionEnd()&&(r&&rt(r).hasClass(dt)||Boolean(rt(t).find(mt)[0])),s=function(){return i._transitionComplete(e,r,o,n)};r&&o?rt(r).one(Ht.TRANSITION_END,s).emulateTransitionEnd(150):s(),r&&rt(r).removeClass(ht)},e.prototype._transitionComplete=function(e,t,n,i){if(t){rt(t).removeClass(ct);var r=rt(t.parentNode).find(Et)[0];r&&rt(r).removeClass(ct),t.setAttribute("aria-expanded",!1)}if(rt(e).addClass(ct),e.setAttribute("aria-expanded",!0),n?(Ht.reflow(e),rt(e).addClass(ht)):rt(e).removeClass(dt),e.parentNode&&rt(e.parentNode).hasClass(ut)){var o=rt(e).closest(pt)[0];o&&rt(o).find(bt).addClass(ct),e.setAttribute("aria-expanded",!0)}i&&i()},e._jQueryInterface=function(t){return this.each(function(){var n=rt(this),i=n.data(ot);if(i||(i=new e(this),n.data(ot,i)),"string"==typeof t){if(void 0===i[t])throw new Error('No method named "'+t+'"');i[t]()}})},t(e,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}}]),e}(),rt(document).on(lt.CLICK_DATA_API,_t,function(e){e.preventDefault(),Tt._jQueryInterface.call(rt(this),"show")}),rt.fn.tab=Tt._jQueryInterface,rt.fn.tab.Constructor=Tt,rt.fn.tab.noConflict=function(){return rt.fn.tab=at,Tt._jQueryInterface},function(i){if("undefined"==typeof Tether)throw new Error("Bootstrap tooltips require Tether (http://tether.io/)");var r="tooltip",o="bs.tooltip",s="."+o,a=i.fn[r],l={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:"0 0",constraints:[],container:!1},u={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"string",constraints:"array",container:"(string|element|boolean)"},c={TOP:"bottom center",RIGHT:"middle left",BOTTOM:"top center",LEFT:"middle right"},f="show",d="out",h={HIDE:"hide"+s,HIDDEN:"hidden"+s,SHOW:"show"+s,SHOWN:"shown"+s,INSERTED:"inserted"+s,CLICK:"click"+s,FOCUSIN:"focusin"+s,FOCUSOUT:"focusout"+s,MOUSEENTER:"mouseenter"+s,MOUSELEAVE:"mouseleave"+s},p="fade",g="show",m=".tooltip-inner",v={element:!1,enabled:!1},y="hover",_="focus",b="click",E="manual",T=function(){function a(e,t){n(this,a),this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._isTransitioning=!1,this._tether=null,this.element=e,this.config=this._getConfig(t),this.tip=null,this._setListeners()}return a.prototype.enable=function(){this._isEnabled=!0},a.prototype.disable=function(){this._isEnabled=!1},a.prototype.toggleEnabled=function(){this._isEnabled=!this._isEnabled},a.prototype.toggle=function(e){if(e){var t=this.constructor.DATA_KEY,n=i(e.currentTarget).data(t);n||(n=new this.constructor(e.currentTarget,this._getDelegateConfig()),i(e.currentTarget).data(t,n)),n._activeTrigger.click=!n._activeTrigger.click,n._isWithActiveTrigger()?n._enter(null,n):n._leave(null,n)}else{if(i(this.getTipElement()).hasClass(g))return void this._leave(null,this);this._enter(null,this)}},a.prototype.dispose=function(){clearTimeout(this._timeout),this.cleanupTether(),i.removeData(this.element,this.constructor.DATA_KEY),i(this.element).off(this.constructor.EVENT_KEY),i(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&i(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._tether=null,this.element=null,this.config=null,this.tip=null},a.prototype.show=function(){var e=this;if("none"===i(this.element).css("display"))throw new Error("Please use show on visible elements");var t=i.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){if(this._isTransitioning)throw new Error("Tooltip is transitioning");i(this.element).trigger(t);var n=i.contains(this.element.ownerDocument.documentElement,this.element);if(t.isDefaultPrevented()||!n)return;var r=this.getTipElement(),o=Ht.getUID(this.constructor.NAME);r.setAttribute("id",o),this.element.setAttribute("aria-describedby",o),this.setContent(),this.config.animation&&i(r).addClass(p);var s="function"==typeof this.config.placement?this.config.placement.call(this,r,this.element):this.config.placement,l=this._getAttachment(s),u=!1===this.config.container?document.body:i(this.config.container);i(r).data(this.constructor.DATA_KEY,this).appendTo(u),i(this.element).trigger(this.constructor.Event.INSERTED),this._tether=new Tether({attachment:l,element:r,target:this.element,classes:v,classPrefix:"bs-tether",offset:this.config.offset,constraints:this.config.constraints,addTargetClasses:!1}),Ht.reflow(r),this._tether.position(),i(r).addClass(g);var c=function(){var t=e._hoverState;e._hoverState=null,e._isTransitioning=!1,i(e.element).trigger(e.constructor.Event.SHOWN),t===d&&e._leave(null,e)};if(Ht.supportsTransitionEnd()&&i(this.tip).hasClass(p))return this._isTransitioning=!0,void i(this.tip).one(Ht.TRANSITION_END,c).emulateTransitionEnd(a._TRANSITION_DURATION);c()}},a.prototype.hide=function(e){var t=this,n=this.getTipElement(),r=i.Event(this.constructor.Event.HIDE);if(this._isTransitioning)throw new Error("Tooltip is transitioning");var o=function(){t._hoverState!==f&&n.parentNode&&n.parentNode.removeChild(n),t.element.removeAttribute("aria-describedby"),i(t.element).trigger(t.constructor.Event.HIDDEN),t._isTransitioning=!1,t.cleanupTether(),e&&e()};i(this.element).trigger(r),r.isDefaultPrevented()||(i(n).removeClass(g),this._activeTrigger[b]=!1,this._activeTrigger[_]=!1,this._activeTrigger[y]=!1,Ht.supportsTransitionEnd()&&i(this.tip).hasClass(p)?(this._isTransitioning=!0,i(n).one(Ht.TRANSITION_END,o).emulateTransitionEnd(150)):o(),this._hoverState="")},a.prototype.isWithContent=function(){return Boolean(this.getTitle())},a.prototype.getTipElement=function(){return this.tip=this.tip||i(this.config.template)[0]},a.prototype.setContent=function(){var e=i(this.getTipElement());this.setElementContent(e.find(m),this.getTitle()),e.removeClass(p+" "+g),this.cleanupTether()},a.prototype.setElementContent=function(t,n){var r=this.config.html;"object"===(void 0===n?"undefined":e(n))&&(n.nodeType||n.jquery)?r?i(n).parent().is(t)||t.empty().append(n):t.text(i(n).text()):t[r?"html":"text"](n)},a.prototype.getTitle=function(){var e=this.element.getAttribute("data-original-title");return e||(e="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),e},a.prototype.cleanupTether=function(){this._tether&&this._tether.destroy()},a.prototype._getAttachment=function(e){return c[e.toUpperCase()]},a.prototype._setListeners=function(){var e=this;this.config.trigger.split(" ").forEach(function(t){if("click"===t)i(e.element).on(e.constructor.Event.CLICK,e.config.selector,function(t){return e.toggle(t)});else if(t!==E){var n=t===y?e.constructor.Event.MOUSEENTER:e.constructor.Event.FOCUSIN,r=t===y?e.constructor.Event.MOUSELEAVE:e.constructor.Event.FOCUSOUT;i(e.element).on(n,e.config.selector,function(t){return e._enter(t)}).on(r,e.config.selector,function(t){return e._leave(t)})}i(e.element).closest(".modal").on("hide.bs.modal",function(){return e.hide()})}),this.config.selector?this.config=i.extend({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},a.prototype._fixTitle=function(){var t=e(this.element.getAttribute("data-original-title"));(this.element.getAttribute("title")||"string"!==t)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},a.prototype._enter=function(e,t){var n=this.constructor.DATA_KEY;(t=t||i(e.currentTarget).data(n))||(t=new this.constructor(e.currentTarget,this._getDelegateConfig()),i(e.currentTarget).data(n,t)),e&&(t._activeTrigger["focusin"===e.type?_:y]=!0),i(t.getTipElement()).hasClass(g)||t._hoverState===f?t._hoverState=f:(clearTimeout(t._timeout),t._hoverState=f,t.config.delay&&t.config.delay.show?t._timeout=setTimeout(function(){t._hoverState===f&&t.show()},t.config.delay.show):t.show())},a.prototype._leave=function(e,t){var n=this.constructor.DATA_KEY;(t=t||i(e.currentTarget).data(n))||(t=new this.constructor(e.currentTarget,this._getDelegateConfig()),i(e.currentTarget).data(n,t)),e&&(t._activeTrigger["focusout"===e.type?_:y]=!1),t._isWithActiveTrigger()||(clearTimeout(t._timeout),t._hoverState=d,t.config.delay&&t.config.delay.hide?t._timeout=setTimeout(function(){t._hoverState===d&&t.hide()},t.config.delay.hide):t.hide())},a.prototype._isWithActiveTrigger=function(){for(var e in this._activeTrigger)if(this._activeTrigger[e])return!0;return!1},a.prototype._getConfig=function(e){return(e=i.extend({},this.constructor.Default,i(this.element).data(),e)).delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),Ht.typeCheckConfig(r,e,this.constructor.DefaultType),e},a.prototype._getDelegateConfig=function(){var e={};if(this.config)for(var t in this.config)this.constructor.Default[t]!==this.config[t]&&(e[t]=this.config[t]);return e},a._jQueryInterface=function(t){return this.each(function(){var n=i(this).data(o),r="object"===(void 0===t?"undefined":e(t))&&t;if((n||!/dispose|hide/.test(t))&&(n||(n=new a(this,r),i(this).data(o,n)),"string"==typeof t)){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},t(a,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}},{key:"Default",get:function(){return l}},{key:"NAME",get:function(){return r}},{key:"DATA_KEY",get:function(){return o}},{key:"Event",get:function(){return h}},{key:"EVENT_KEY",get:function(){return s}},{key:"DefaultType",get:function(){return u}}]),a}();return i.fn[r]=T._jQueryInterface,i.fn[r].Constructor=T,i.fn[r].noConflict=function(){return i.fn[r]=a,T._jQueryInterface},T}(jQuery));wt=jQuery,xt="popover",St="."+(Ct="bs.popover"),Dt=wt.fn[xt],kt=wt.extend({},Mt.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),At=wt.extend({},Mt.DefaultType,{content:"(string|element|function)"}),It="fade",Nt="show",Ot=".popover-title",jt=".popover-content",Lt={HIDE:"hide"+St,HIDDEN:"hidden"+St,SHOW:"show"+St,SHOWN:"shown"+St,INSERTED:"inserted"+St,CLICK:"click"+St,FOCUSIN:"focusin"+St,FOCUSOUT:"focusout"+St,MOUSEENTER:"mouseenter"+St,MOUSELEAVE:"mouseleave"+St},Pt=function(i){function r(){return n(this,r),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,i.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(r,i),r.prototype.isWithContent=function(){return this.getTitle()||this._getContent()},r.prototype.getTipElement=function(){return this.tip=this.tip||wt(this.config.template)[0]},r.prototype.setContent=function(){var e=wt(this.getTipElement());this.setElementContent(e.find(Ot),this.getTitle()),this.setElementContent(e.find(jt),this._getContent()),e.removeClass(It+" "+Nt),this.cleanupTether()},r.prototype._getContent=function(){return this.element.getAttribute("data-content")||("function"==typeof this.config.content?this.config.content.call(this.element):this.config.content)},r._jQueryInterface=function(t){return this.each(function(){var n=wt(this).data(Ct),i="object"===(void 0===t?"undefined":e(t))?t:null;if((n||!/destroy|hide/.test(t))&&(n||(n=new r(this,i),wt(this).data(Ct,n)),"string"==typeof t)){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},t(r,null,[{key:"VERSION",get:function(){return"4.0.0-alpha.6"}},{key:"Default",get:function(){return kt}},{key:"NAME",get:function(){return xt}},{key:"DATA_KEY",get:function(){return Ct}},{key:"Event",get:function(){return Lt}},{key:"EVENT_KEY",get:function(){return St}},{key:"DefaultType",get:function(){return At}}]),r}(Mt),wt.fn[xt]=Pt._jQueryInterface,wt.fn[xt].Constructor=Pt,wt.fn[xt].noConflict=function(){return wt.fn[xt]=Dt,Pt._jQueryInterface}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5taW4uanMiLCJqcXVlcnkubWFzay5taW4uanMiLCJib290c3RyYXAuanMiXSwibmFtZXMiOlsiYSIsImIiLCJtb2R1bGUiLCJleHBvcnRzIiwiZG9jdW1lbnQiLCJFcnJvciIsIndpbmRvdyIsInRoaXMiLCJjIiwiZCIsImUiLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsImYiLCJzbGljZSIsImciLCJjb25jYXQiLCJoIiwicHVzaCIsImkiLCJpbmRleE9mIiwiaiIsImsiLCJ0b1N0cmluZyIsImwiLCJoYXNPd25Qcm9wZXJ0eSIsIm0iLCJuIiwiY2FsbCIsIm8iLCJwIiwiY3JlYXRlRWxlbWVudCIsInRleHQiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJxIiwiciIsImZuIiwiaW5pdCIsInMiLCJ0IiwidSIsInYiLCJ0b1VwcGVyQ2FzZSIsInciLCJsZW5ndGgiLCJ0eXBlIiwiaXNXaW5kb3ciLCJwcm90b3R5cGUiLCJqcXVlcnkiLCJjb25zdHJ1Y3RvciIsInRvQXJyYXkiLCJnZXQiLCJwdXNoU3RhY2siLCJtZXJnZSIsInByZXZPYmplY3QiLCJlYWNoIiwibWFwIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJmaXJzdCIsImVxIiwibGFzdCIsImVuZCIsInNvcnQiLCJzcGxpY2UiLCJleHRlbmQiLCJpc0Z1bmN0aW9uIiwiaXNQbGFpbk9iamVjdCIsImlzQXJyYXkiLCJleHBhbmRvIiwiTWF0aCIsInJhbmRvbSIsInJlcGxhY2UiLCJpc1JlYWR5IiwiZXJyb3IiLCJub29wIiwiQXJyYXkiLCJpc051bWVyaWMiLCJpc05hTiIsInBhcnNlRmxvYXQiLCJpc0VtcHR5T2JqZWN0IiwiZ2xvYmFsRXZhbCIsImNhbWVsQ2FzZSIsIm5vZGVOYW1lIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwibWFrZUFycmF5IiwiaW5BcnJheSIsImdyZXAiLCJndWlkIiwicHJveHkiLCJub3ciLCJEYXRlIiwic3VwcG9ydCIsIlN5bWJvbCIsIml0ZXJhdG9yIiwic3BsaXQiLCJ4IiwieSIsImhhIiwieiIsIkEiLCJCIiwiQyIsIkQiLCJFIiwicG9wIiwiRiIsIkciLCJIIiwiSSIsIkoiLCJLIiwiTCIsIk0iLCJOIiwiTyIsIlJlZ0V4cCIsIlAiLCJRIiwiUiIsIlMiLCJUIiwiVSIsIlYiLCJJRCIsIkNMQVNTIiwiVEFHIiwiQVRUUiIsIlBTRVVETyIsIkNISUxEIiwiYm9vbCIsIm5lZWRzQ29udGV4dCIsIlciLCJYIiwiWSIsIloiLCIkIiwiXyIsImFhIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiYmEiLCJjYSIsImNoYXJDb2RlQXQiLCJkYSIsImVhIiwidGEiLCJkaXNhYmxlZCIsImRpciIsIm5leHQiLCJjaGlsZE5vZGVzIiwibm9kZVR5cGUiLCJmYSIsImdhIiwib3duZXJEb2N1bWVudCIsImV4ZWMiLCJnZXRFbGVtZW50QnlJZCIsImlkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwicXNhIiwidGVzdCIsImdldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNhIiwiam9pbiIsInFhIiwicXVlcnlTZWxlY3RvckFsbCIsInJlbW92ZUF0dHJpYnV0ZSIsImNhY2hlTGVuZ3RoIiwic2hpZnQiLCJpYSIsImphIiwia2EiLCJhdHRySGFuZGxlIiwibGEiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwibWEiLCJuYSIsIm9hIiwiaXNEaXNhYmxlZCIsInBhIiwiaXNYTUwiLCJkb2N1bWVudEVsZW1lbnQiLCJzZXREb2N1bWVudCIsImRlZmF1bHRWaWV3IiwidG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwiYXR0cmlidXRlcyIsImNsYXNzTmFtZSIsImNyZWF0ZUNvbW1lbnQiLCJnZXRCeUlkIiwiZ2V0RWxlbWVudHNCeU5hbWUiLCJmaWx0ZXIiLCJmaW5kIiwiZ2V0QXR0cmlidXRlTm9kZSIsInZhbHVlIiwiaW5uZXJIVE1MIiwibWF0Y2hlc1NlbGVjdG9yIiwibWF0Y2hlcyIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJjb250YWlucyIsInNvcnREZXRhY2hlZCIsInVuc2hpZnQiLCJhdHRyIiwic3BlY2lmaWVkIiwiZXNjYXBlIiwidW5pcXVlU29ydCIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwiZ2V0VGV4dCIsInRleHRDb250ZW50IiwiZmlyc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInNlbGVjdG9ycyIsImNyZWF0ZVBzZXVkbyIsIm1hdGNoIiwicmVsYXRpdmUiLCI+IiwiICIsIisiLCJ+IiwicHJlRmlsdGVyIiwibGFzdENoaWxkIiwidW5pcXVlSUQiLCJwc2V1ZG9zIiwic2V0RmlsdGVycyIsIm5vdCIsImhhcyIsImlubmVyVGV4dCIsImxhbmciLCJ0YXJnZXQiLCJsb2NhdGlvbiIsImhhc2giLCJyb290IiwiZm9jdXMiLCJhY3RpdmVFbGVtZW50IiwiaGFzRm9jdXMiLCJocmVmIiwidGFiSW5kZXgiLCJlbmFibGVkIiwiY2hlY2tlZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsImVtcHR5IiwicGFyZW50IiwiaGVhZGVyIiwiaW5wdXQiLCJidXR0b24iLCJldmVuIiwib2RkIiwibHQiLCJndCIsIm50aCIsInJhZGlvIiwiY2hlY2tib3giLCJmaWxlIiwicGFzc3dvcmQiLCJpbWFnZSIsInN1Ym1pdCIsInJlc2V0IiwicmEiLCJ1YSIsIndhIiwieGEiLCJ2YSIsInlhIiwiZmlsdGVycyIsInRva2VuaXplIiwiY29tcGlsZSIsInNlbGVjdG9yIiwic2VsZWN0IiwiZGVmYXVsdFZhbHVlIiwiZXhwciIsInVuaXF1ZSIsImlzWE1MRG9jIiwiZXNjYXBlU2VsZWN0b3IiLCJpcyIsInBhcnNlSFRNTCIsInJlYWR5IiwiY2hpbGRyZW4iLCJjb250ZW50cyIsInByZXYiLCJjbG9zZXN0IiwiaW5kZXgiLCJwcmV2QWxsIiwiYWRkIiwiYWRkQmFjayIsInBhcmVudHMiLCJwYXJlbnRzVW50aWwiLCJuZXh0QWxsIiwibmV4dFVudGlsIiwicHJldlVudGlsIiwic2libGluZ3MiLCJjb250ZW50RG9jdW1lbnQiLCJyZXZlcnNlIiwicHJvbWlzZSIsImRvbmUiLCJmYWlsIiwidGhlbiIsIkNhbGxiYWNrcyIsIm9uY2UiLCJzdG9wT25GYWxzZSIsIm1lbW9yeSIsInJlbW92ZSIsImRpc2FibGUiLCJsb2NrIiwibG9ja2VkIiwiZmlyZVdpdGgiLCJmaXJlIiwiZmlyZWQiLCJEZWZlcnJlZCIsInN0YXRlIiwiYWx3YXlzIiwiY2F0Y2giLCJwaXBlIiwicHJvZ3Jlc3MiLCJub3RpZnkiLCJyZXNvbHZlIiwicmVqZWN0IiwiVHlwZUVycm9yIiwibm90aWZ5V2l0aCIsInJlc29sdmVXaXRoIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsIndoZW4iLCJjb25zb2xlIiwid2FybiIsIm5hbWUiLCJtZXNzYWdlIiwic3RhY2siLCJyZWFkeUV4Y2VwdGlvbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJyZWFkeVdhaXQiLCJob2xkUmVhZHkiLCJyZWFkeVN0YXRlIiwiZG9TY3JvbGwiLCJ1aWQiLCJjYWNoZSIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwic2V0IiwiYWNjZXNzIiwiaGFzRGF0YSIsIkpTT04iLCJwYXJzZSIsImRhdGEiLCJyZW1vdmVEYXRhIiwiX2RhdGEiLCJfcmVtb3ZlRGF0YSIsInF1ZXVlIiwiZGVxdWV1ZSIsIl9xdWV1ZUhvb2tzIiwic3RvcCIsImNsZWFyUXVldWUiLCJzb3VyY2UiLCJzdHlsZSIsImRpc3BsYXkiLCJjc3MiLCJjdXIiLCJjc3NOdW1iZXIiLCJ1bml0Iiwic3RhcnQiLCJib2R5Iiwic2hvdyIsImhpZGUiLCJ0b2dnbGUiLCJvcHRpb24iLCJ0aGVhZCIsImNvbCIsInRyIiwidGQiLCJfZGVmYXVsdCIsIm9wdGdyb3VwIiwidGJvZHkiLCJ0Zm9vdCIsImNvbGdyb3VwIiwiY2FwdGlvbiIsInRoIiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImh0bWxQcmVmaWx0ZXIiLCJjcmVhdGVUZXh0Tm9kZSIsImNoZWNrQ2xvbmUiLCJjbG9uZU5vZGUiLCJub0Nsb25lQ2hlY2tlZCIsIm9mZiIsImV2ZW50IiwiZ2xvYmFsIiwiaGFuZGxlciIsImV2ZW50cyIsImhhbmRsZSIsInRyaWdnZXJlZCIsImRpc3BhdGNoIiwic3BlY2lhbCIsImRlbGVnYXRlVHlwZSIsImJpbmRUeXBlIiwib3JpZ1R5cGUiLCJuYW1lc3BhY2UiLCJkZWxlZ2F0ZUNvdW50Iiwic2V0dXAiLCJ0ZWFyZG93biIsInJlbW92ZUV2ZW50IiwiZml4IiwiZGVsZWdhdGVUYXJnZXQiLCJwcmVEaXNwYXRjaCIsImhhbmRsZXJzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJjdXJyZW50VGFyZ2V0IiwiZWxlbSIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicm5hbWVzcGFjZSIsImhhbmRsZU9iaiIsInJlc3VsdCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwicG9zdERpc3BhdGNoIiwiYWRkUHJvcCIsIkV2ZW50IiwiZW51bWVyYWJsZSIsIm9yaWdpbmFsRXZlbnQiLCJ3cml0YWJsZSIsImxvYWQiLCJub0J1YmJsZSIsInRyaWdnZXIiLCJibHVyIiwiY2xpY2siLCJiZWZvcmV1bmxvYWQiLCJyZXR1cm5WYWx1ZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZWxhdGVkVGFyZ2V0IiwidGltZVN0YW1wIiwiaXNTaW11bGF0ZWQiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJhbHRLZXkiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImNoYW5nZWRUb3VjaGVzIiwiY3RybEtleSIsImRldGFpbCIsImV2ZW50UGhhc2UiLCJtZXRhS2V5IiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwidmlldyIsImNoYXIiLCJjaGFyQ29kZSIsImtleSIsImtleUNvZGUiLCJidXR0b25zIiwiY2xpZW50WCIsImNsaWVudFkiLCJvZmZzZXRYIiwib2Zmc2V0WSIsInBvaW50ZXJJZCIsInBvaW50ZXJUeXBlIiwic2NyZWVuWCIsInNjcmVlblkiLCJ0YXJnZXRUb3VjaGVzIiwidG9FbGVtZW50IiwidG91Y2hlcyIsIndoaWNoIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJwb2ludGVyZW50ZXIiLCJwb2ludGVybGVhdmUiLCJvbiIsIm9uZSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJJYSIsImh0bWwiLCJjbG9uZSIsInNyYyIsIl9ldmFsVXJsIiwiSmEiLCJjbGVhbkRhdGEiLCJkZXRhY2giLCJhcHBlbmQiLCJwcmVwZW5kIiwiaW5zZXJ0QmVmb3JlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJyZXBsYWNlV2l0aCIsInJlcGxhY2VDaGlsZCIsImFwcGVuZFRvIiwicHJlcGVuZFRvIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlQWxsIiwiS2EiLCJMYSIsIk1hIiwib3BlbmVyIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsIk5hIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInBpeGVsTWFyZ2luUmlnaHQiLCJ3aWR0aCIsIm1pbldpZHRoIiwibWF4V2lkdGgiLCJPYSIsImNzc1RleHQiLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsInBpeGVsUG9zaXRpb24iLCJib3hTaXppbmdSZWxpYWJsZSIsInJlbGlhYmxlTWFyZ2luTGVmdCIsIlBhIiwiUWEiLCJwb3NpdGlvbiIsInZpc2liaWxpdHkiLCJSYSIsImxldHRlclNwYWNpbmciLCJmb250V2VpZ2h0IiwiU2EiLCJUYSIsIlVhIiwiVmEiLCJtYXgiLCJXYSIsIlhhIiwiZ2V0Q2xpZW50UmVjdHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJZYSIsImNzc0hvb2tzIiwib3BhY2l0eSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiY29sdW1uQ291bnQiLCJmaWxsT3BhY2l0eSIsImZsZXhHcm93IiwiZmxleFNocmluayIsImxpbmVIZWlnaHQiLCJvcmRlciIsIm9ycGhhbnMiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiY3NzUHJvcHMiLCJmbG9hdCIsImlzRmluaXRlIiwibGVmdCIsIm1hcmdpbiIsInBhZGRpbmciLCJib3JkZXIiLCJleHBhbmQiLCJUd2VlbiIsInByb3AiLCJlYXNpbmciLCJvcHRpb25zIiwicHJvcEhvb2tzIiwicnVuIiwiZHVyYXRpb24iLCJwb3MiLCJzdGVwIiwiZngiLCJzY3JvbGxUb3AiLCJzY3JvbGxMZWZ0IiwibGluZWFyIiwic3dpbmciLCJjb3MiLCJQSSIsIlphIiwiJGEiLCJfYSIsImFiIiwiYmIiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ0aWNrIiwiY2IiLCJkYiIsImhlaWdodCIsImViIiwiaGIiLCJ0d2VlbmVycyIsInByZWZpbHRlcnMiLCJzdGFydFRpbWUiLCJ0d2VlbnMiLCJwcm9wcyIsIm9wdHMiLCJzcGVjaWFsRWFzaW5nIiwib3JpZ2luYWxQcm9wZXJ0aWVzIiwib3JpZ2luYWxPcHRpb25zIiwiY3JlYXRlVHdlZW4iLCJnYiIsInRpbWVyIiwiYW5pbSIsImNvbXBsZXRlIiwiQW5pbWF0aW9uIiwiKiIsInR3ZWVuZXIiLCJ1bnF1ZXVlZCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwiaGlkZGVuIiwicHJlZmlsdGVyIiwic3BlZWQiLCJzcGVlZHMiLCJvbGQiLCJmYWRlVG8iLCJhbmltYXRlIiwiZmluaXNoIiwidGltZXJzIiwic2xpZGVEb3duIiwic2xpZGVVcCIsInNsaWRlVG9nZ2xlIiwiZmFkZUluIiwiZmFkZU91dCIsImZhZGVUb2dnbGUiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJjbGVhckludGVydmFsIiwic2xvdyIsImZhc3QiLCJkZWxheSIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJpYiIsImpiIiwicmVtb3ZlQXR0ciIsImF0dHJIb29rcyIsImtiIiwibGIiLCJtYiIsIm5iIiwicmVtb3ZlUHJvcCIsInByb3BGaXgiLCJwYXJzZUludCIsImZvciIsImNsYXNzIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsInRvZ2dsZUNsYXNzIiwiaGFzQ2xhc3MiLCJvYiIsInZhbCIsInZhbEhvb2tzIiwicGIiLCJpc1RyaWdnZXIiLCJwYXJlbnRXaW5kb3ciLCJzaW11bGF0ZSIsInRyaWdnZXJIYW5kbGVyIiwiaG92ZXIiLCJmb2N1c2luIiwicWIiLCJyYiIsInNiIiwicGFyc2VYTUwiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJ0YiIsInViIiwidmIiLCJ3YiIsInhiIiwicGFyYW0iLCJlbmNvZGVVUklDb21wb25lbnQiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVBcnJheSIsInliIiwiemIiLCJBYiIsIkJiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsImRhdGFUeXBlcyIsIkxiIiwiYWpheFNldHRpbmdzIiwiZmxhdE9wdGlvbnMiLCJhY3RpdmUiLCJsYXN0TW9kaWZpZWQiLCJldGFnIiwidXJsIiwiaXNMb2NhbCIsInByb3RvY29sIiwicHJvY2Vzc0RhdGEiLCJhc3luYyIsImNvbnRlbnRUeXBlIiwiYWNjZXB0cyIsInhtbCIsImpzb24iLCJyZXNwb25zZUZpZWxkcyIsImNvbnZlcnRlcnMiLCIqIHRleHQiLCJ0ZXh0IGh0bWwiLCJ0ZXh0IGpzb24iLCJ0ZXh0IHhtbCIsImNvbnRleHQiLCJhamF4U2V0dXAiLCJhamF4UHJlZmlsdGVyIiwiYWpheFRyYW5zcG9ydCIsImFqYXgiLCJzdGF0dXNDb2RlIiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwib3ZlcnJpZGVNaW1lVHlwZSIsIm1pbWVUeXBlIiwic3RhdHVzIiwiYWJvcnQiLCJtZXRob2QiLCJkYXRhVHlwZSIsImNyb3NzRG9tYWluIiwiaG9zdCIsInRyYWRpdGlvbmFsIiwiaGFzQ29udGVudCIsImlmTW9kaWZpZWQiLCJoZWFkZXJzIiwiYmVmb3JlU2VuZCIsInN1Y2Nlc3MiLCJ0aW1lb3V0Iiwic2VuZCIsIk1iIiwiZGF0YUZpbHRlciIsIk5iIiwic3RhdHVzVGV4dCIsImdldEpTT04iLCJnZXRTY3JpcHQiLCJ0aHJvd3MiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJ3cmFwIiwidW53cmFwIiwidmlzaWJsZSIsIm9mZnNldFdpZHRoIiwib2Zmc2V0SGVpZ2h0IiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJPYiIsIjAiLCIxMjIzIiwiUGIiLCJjb3JzIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJyZXNwb25zZSIsInNjcmlwdCIsInRleHQgc2NyaXB0IiwiY2hhcnNldCIsInNjcmlwdENoYXJzZXQiLCJRYiIsIlJiIiwiU2IiLCJqc29ucCIsImpzb25wQ2FsbGJhY2siLCJjcmVhdGVIVE1MRG9jdW1lbnQiLCJpbXBsZW1lbnRhdGlvbiIsImFuaW1hdGVkIiwib2Zmc2V0Iiwic2V0T2Zmc2V0IiwidXNpbmciLCJwYWdlWU9mZnNldCIsImNsaWVudFRvcCIsInBhZ2VYT2Zmc2V0IiwiY2xpZW50TGVmdCIsIm9mZnNldFBhcmVudCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCJjb250ZW50IiwiIiwiYmluZCIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsInBhcnNlSlNPTiIsImRlZmluZSIsImFtZCIsIlRiIiwialF1ZXJ5IiwiVWIiLCJub0NvbmZsaWN0IiwiJGpzY29tcCIsInNjb3BlIiwiZmluZEludGVybmFsIiwiZGVmaW5lUHJvcGVydGllcyIsImdldEdsb2JhbCIsInBvbHlmaWxsIiwicmVxdWlyZSIsImludmFsaWQiLCJnZXRDYXJldCIsInNlbGVjdGlvbiIsInNlbGVjdGlvblN0YXJ0IiwibmF2aWdhdG9yIiwiYXBwVmVyc2lvbiIsImNyZWF0ZVJhbmdlIiwibW92ZVN0YXJ0Iiwic2V0Q2FyZXQiLCJzZXRTZWxlY3Rpb25SYW5nZSIsImNyZWF0ZVRleHRSYW5nZSIsImNvbGxhcHNlIiwibW92ZUVuZCIsIm1hc2tEaWdpdFBvc01hcE9sZCIsIm1hc2tEaWdpdFBvc01hcCIsImpNYXNrR2xvYmFscyIsInVzZUlucHV0IiwiYmVoYXZpb3VyIiwia2V5ZG93biIsImtleXVwIiwic2VsZWN0T25Gb2N1cyIsImNsZWFySWZOb3RNYXRjaCIsImdldFJlZ2V4TWFzayIsInRyYW5zbGF0aW9uIiwiY2hhckF0IiwicGF0dGVybiIsIm9wdGlvbmFsIiwicmVjdXJzaXZlIiwiZGlnaXQiLCJkZXN0cm95RXZlbnRzIiwiY2FsY3VsYXRlQ2FyZXRQb3NpdGlvbiIsImdldE1hc2tlZCIsImJ5UGFzc0tleXMiLCJjYWxsYmFja3MiLCJmYWxsYmFjayIsIm1hcE1hc2tkaWdpdFBvc2l0aW9ucyIsIm1hc2siLCJnZXRDbGVhblZhbCIsImdldE1hc2tlZFZhbCIsInBsYWNlaG9sZGVyIiwibWFza1dhdGNoZXJzIiwic3RyaW5naWZ5Iiwid2F0Y2hJbnRlcnZhbCIsIndhdGNoSW5wdXRzIiwibWFza2VkIiwidW5tYXNrIiwiY2xlYW5WYWwiLCJhcHBseURhdGFNYXNrIiwibWFza0VsZW1lbnRzIiwiZGF0YU1hc2tBdHRyIiwiZGF0YU1hc2siLCJ1c2VyQWdlbnQiLCJ3YXRjaERhdGFNYXNrIiwiOSIsIiMiLCJaZXB0byIsInZlcnNpb24iLCJfdHlwZW9mIiwib2JqIiwiX2NyZWF0ZUNsYXNzIiwiZGVzY3JpcHRvciIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJOQU1FIiwiREFUQV9LRVkiLCJFVkVOVF9LRVkiLCJKUVVFUllfTk9fQ09ORkxJQ1QiLCJDbGFzc05hbWUiLCJBbGVydCIsIkRBVEFfQVBJX0tFWSIsIlNlbGVjdG9yIiwiQnV0dG9uIiwiRGVmYXVsdCIsIkRlZmF1bHRUeXBlIiwiRGlyZWN0aW9uIiwiQ2Fyb3VzZWwiLCJEaW1lbnNpb24iLCJDb2xsYXBzZSIsIkRyb3Bkb3duIiwiTW9kYWwiLCJPZmZzZXRNZXRob2QiLCJTY3JvbGxTcHkiLCJUYWIiLCJQb3BvdmVyIiwiVXRpbCIsInRyYW5zaXRpb24iLCJUcmFuc2l0aW9uRW5kRXZlbnQiLCJXZWJraXRUcmFuc2l0aW9uIiwiTW96VHJhbnNpdGlvbiIsIk9UcmFuc2l0aW9uIiwidHJhbnNpdGlvbkVuZEVtdWxhdG9yIiwiX3RoaXMiLCJjYWxsZWQiLCJUUkFOU0lUSU9OX0VORCIsInRyaWdnZXJUcmFuc2l0aW9uRW5kIiwiZ2V0VUlEIiwicHJlZml4IiwiZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCIsImVsZW1lbnQiLCJyZWZsb3ciLCJzdXBwb3J0c1RyYW5zaXRpb25FbmQiLCJCb29sZWFuIiwidHlwZUNoZWNrQ29uZmlnIiwiY29tcG9uZW50TmFtZSIsImNvbmZpZyIsImNvbmZpZ1R5cGVzIiwicHJvcGVydHkiLCJleHBlY3RlZFR5cGVzIiwidmFsdWVUeXBlIiwiUVVuaXQiLCJlbCIsInVuZGVmaW5lZCIsInRyYW5zaXRpb25FbmRUZXN0IiwiZW11bGF0ZVRyYW5zaXRpb25FbmQiLCJUb29sdGlwIiwiQ0xPU0UiLCJDTE9TRUQiLCJDTElDS19EQVRBX0FQSSIsIl9lbGVtZW50IiwiY2xvc2UiLCJyb290RWxlbWVudCIsIl9nZXRSb290RWxlbWVudCIsIl90cmlnZ2VyQ2xvc2VFdmVudCIsIl9yZW1vdmVFbGVtZW50IiwiZGlzcG9zZSIsImNsb3NlRXZlbnQiLCJfdGhpczIiLCJfZGVzdHJveUVsZW1lbnQiLCJfalF1ZXJ5SW50ZXJmYWNlIiwiJGVsZW1lbnQiLCJfaGFuZGxlRGlzbWlzcyIsImFsZXJ0SW5zdGFuY2UiLCJGT0NVU19CTFVSX0RBVEFfQVBJIiwidHJpZ2dlckNoYW5nZUV2ZW50Iiwia2V5Ym9hcmQiLCJzbGlkZSIsInBhdXNlIiwiTkVYVCIsIlBSRVYiLCJMRUZUIiwiUklHSFQiLCJTTElERSIsIlNMSUQiLCJLRVlET1dOIiwiTU9VU0VFTlRFUiIsIk1PVVNFTEVBVkUiLCJMT0FEX0RBVEFfQVBJIiwiQUNUSVZFIiwiQUNUSVZFX0lURU0iLCJJVEVNIiwiTkVYVF9QUkVWIiwiSU5ESUNBVE9SUyIsIkRBVEFfU0xJREUiLCJEQVRBX1JJREUiLCJfaXRlbXMiLCJfaW50ZXJ2YWwiLCJfYWN0aXZlRWxlbWVudCIsIl9pc1BhdXNlZCIsIl9pc1NsaWRpbmciLCJfY29uZmlnIiwiX2dldENvbmZpZyIsIl9pbmRpY2F0b3JzRWxlbWVudCIsIl9hZGRFdmVudExpc3RlbmVycyIsIl9zbGlkZSIsIm5leHRXaGVuVmlzaWJsZSIsIlBSRVZJT1VTIiwiY3ljbGUiLCJ2aXNpYmlsaXR5U3RhdGUiLCJ0byIsIl90aGlzMyIsImFjdGl2ZUluZGV4IiwiX2dldEl0ZW1JbmRleCIsImRpcmVjdGlvbiIsIl90aGlzNCIsIl9rZXlkb3duIiwidGFnTmFtZSIsIl9nZXRJdGVtQnlEaXJlY3Rpb24iLCJpc05leHREaXJlY3Rpb24iLCJpc1ByZXZEaXJlY3Rpb24iLCJsYXN0SXRlbUluZGV4IiwiaXRlbUluZGV4IiwiX3RyaWdnZXJTbGlkZUV2ZW50IiwiZXZlbnREaXJlY3Rpb25OYW1lIiwic2xpZGVFdmVudCIsIl9zZXRBY3RpdmVJbmRpY2F0b3JFbGVtZW50IiwibmV4dEluZGljYXRvciIsIl90aGlzNSIsIm5leHRFbGVtZW50IiwiaXNDeWNsaW5nIiwiZGlyZWN0aW9uYWxDbGFzc05hbWUiLCJvcmRlckNsYXNzTmFtZSIsInNsaWRFdmVudCIsImFjdGlvbiIsIl9kYXRhQXBpQ2xpY2tIYW5kbGVyIiwic2xpZGVJbmRleCIsIiRjYXJvdXNlbCIsIlNIT1ciLCJTSE9XTiIsIkhJREUiLCJISURERU4iLCJfaXNUcmFuc2l0aW9uaW5nIiwiX3RyaWdnZXJBcnJheSIsIl9wYXJlbnQiLCJfZ2V0UGFyZW50IiwiX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyIsIl90aGlzNiIsImFjdGl2ZXMiLCJhY3RpdmVzRGF0YSIsInN0YXJ0RXZlbnQiLCJkaW1lbnNpb24iLCJfZ2V0RGltZW5zaW9uIiwic2V0VHJhbnNpdGlvbmluZyIsInNjcm9sbFNpemUiLCJfdGhpczciLCJvZmZzZXREaW1lbnNpb24iLCJpc1RyYW5zaXRpb25pbmciLCJfdGhpczgiLCJfZ2V0VGFyZ2V0RnJvbUVsZW1lbnQiLCJ0cmlnZ2VyQXJyYXkiLCJpc09wZW4iLCIkdGhpcyIsIkNMSUNLIiwiRk9DVVNJTl9EQVRBX0FQSSIsIktFWURPV05fREFUQV9BUEkiLCJfZ2V0UGFyZW50RnJvbUVsZW1lbnQiLCJpc0FjdGl2ZSIsIl9jbGVhck1lbnVzIiwiZHJvcGRvd24iLCJzaG93RXZlbnQiLCJiYWNrZHJvcCIsInRvZ2dsZXMiLCJoaWRlRXZlbnQiLCJfZGF0YUFwaUtleWRvd25IYW5kbGVyIiwiaXRlbXMiLCJGT0NVU0lOIiwiUkVTSVpFIiwiQ0xJQ0tfRElTTUlTUyIsIktFWURPV05fRElTTUlTUyIsIk1PVVNFVVBfRElTTUlTUyIsIk1PVVNFRE9XTl9ESVNNSVNTIiwiRElBTE9HIiwiREFUQV9UT0dHTEUiLCJEQVRBX0RJU01JU1MiLCJGSVhFRF9DT05URU5UIiwiX2RpYWxvZyIsIl9iYWNrZHJvcCIsIl9pc1Nob3duIiwiX2lzQm9keU92ZXJmbG93aW5nIiwiX2lnbm9yZUJhY2tkcm9wQ2xpY2siLCJfb3JpZ2luYWxCb2R5UGFkZGluZyIsIl9zY3JvbGxiYXJXaWR0aCIsIl90aGlzOSIsIl9jaGVja1Njcm9sbGJhciIsIl9zZXRTY3JvbGxiYXIiLCJfc2V0RXNjYXBlRXZlbnQiLCJfc2V0UmVzaXplRXZlbnQiLCJfc2hvd0JhY2tkcm9wIiwiX3Nob3dFbGVtZW50IiwiX3RoaXMxMCIsIl9oaWRlTW9kYWwiLCJfdGhpczExIiwiTm9kZSIsIkVMRU1FTlRfTk9ERSIsIl9lbmZvcmNlRm9jdXMiLCJzaG93bkV2ZW50IiwidHJhbnNpdGlvbkNvbXBsZXRlIiwiX3RoaXMxMiIsIl90aGlzMTMiLCJfdGhpczE0IiwiX2hhbmRsZVVwZGF0ZSIsIl90aGlzMTUiLCJfcmVzZXRBZGp1c3RtZW50cyIsIl9yZXNldFNjcm9sbGJhciIsIl9yZW1vdmVCYWNrZHJvcCIsImNhbGxiYWNrIiwiX3RoaXMxNiIsImRvQW5pbWF0ZSIsImNhbGxiYWNrUmVtb3ZlIiwiX2FkanVzdERpYWxvZyIsImlzTW9kYWxPdmVyZmxvd2luZyIsInNjcm9sbEhlaWdodCIsImNsaWVudEhlaWdodCIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiY2xpZW50V2lkdGgiLCJpbm5lcldpZHRoIiwiX2dldFNjcm9sbGJhcldpZHRoIiwiYm9keVBhZGRpbmciLCJzY3JvbGxEaXYiLCJzY3JvbGxiYXJXaWR0aCIsIl90aGlzMTciLCIkdGFyZ2V0IiwiQUNUSVZBVEUiLCJTQ1JPTEwiLCJEQVRBX1NQWSIsIkxJU1RfSVRFTSIsIkxJIiwiTElfRFJPUERPV04iLCJOQVZfTElOS1MiLCJEUk9QRE9XTiIsIkRST1BET1dOX0lURU1TIiwiRFJPUERPV05fVE9HR0xFIiwiX3RoaXMxOCIsIl9zY3JvbGxFbGVtZW50IiwiX3NlbGVjdG9yIiwiX29mZnNldHMiLCJfdGFyZ2V0cyIsIl9hY3RpdmVUYXJnZXQiLCJfc2Nyb2xsSGVpZ2h0IiwiX3Byb2Nlc3MiLCJyZWZyZXNoIiwiX3RoaXMxOSIsImF1dG9NZXRob2QiLCJvZmZzZXRNZXRob2QiLCJvZmZzZXRCYXNlIiwiX2dldFNjcm9sbFRvcCIsIl9nZXRTY3JvbGxIZWlnaHQiLCJ0YXJnZXRTZWxlY3RvciIsIml0ZW0iLCJmb3JFYWNoIiwiX2dldE9mZnNldEhlaWdodCIsImlubmVySGVpZ2h0IiwibWF4U2Nyb2xsIiwiX2FjdGl2YXRlIiwiX2NsZWFyIiwicXVlcmllcyIsIiRsaW5rIiwic2Nyb2xsU3B5cyIsIiRzcHkiLCJfdGhpczIwIiwicHJldmlvdXMiLCJsaXN0RWxlbWVudCIsImhpZGRlbkV2ZW50IiwiY29udGFpbmVyIiwiX3RoaXMyMSIsIl90cmFuc2l0aW9uQ29tcGxldGUiLCJkcm9wZG93bkNoaWxkIiwiZHJvcGRvd25FbGVtZW50IiwiVGV0aGVyIiwiYW5pbWF0aW9uIiwidGVtcGxhdGUiLCJ0aXRsZSIsInBsYWNlbWVudCIsImNvbnN0cmFpbnRzIiwiQXR0YWNobWVudE1hcCIsIlRPUCIsIkJPVFRPTSIsIkhvdmVyU3RhdGUiLCJJTlNFUlRFRCIsIkZPQ1VTT1VUIiwiVGV0aGVyQ2xhc3MiLCJUcmlnZ2VyIiwiX2lzRW5hYmxlZCIsIl90aW1lb3V0IiwiX2hvdmVyU3RhdGUiLCJfYWN0aXZlVHJpZ2dlciIsIl90ZXRoZXIiLCJ0aXAiLCJfc2V0TGlzdGVuZXJzIiwiZW5hYmxlIiwidG9nZ2xlRW5hYmxlZCIsImRhdGFLZXkiLCJfZ2V0RGVsZWdhdGVDb25maWciLCJfaXNXaXRoQWN0aXZlVHJpZ2dlciIsIl9lbnRlciIsIl9sZWF2ZSIsImdldFRpcEVsZW1lbnQiLCJjbGVhbnVwVGV0aGVyIiwiX3RoaXMyMiIsImlzV2l0aENvbnRlbnQiLCJpc0luVGhlRG9tIiwidGlwSWQiLCJzZXRDb250ZW50IiwiYXR0YWNobWVudCIsIl9nZXRBdHRhY2htZW50IiwiY2xhc3NlcyIsImNsYXNzUHJlZml4IiwiYWRkVGFyZ2V0Q2xhc3NlcyIsInByZXZIb3ZlclN0YXRlIiwiX1RSQU5TSVRJT05fRFVSQVRJT04iLCJfdGhpczIzIiwiZ2V0VGl0bGUiLCIkdGlwIiwic2V0RWxlbWVudENvbnRlbnQiLCJkZXN0cm95IiwiX3RoaXMyNCIsImV2ZW50SW4iLCJldmVudE91dCIsIl9maXhUaXRsZSIsInRpdGxlVHlwZSIsIl9Ub29sdGlwIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0cyIsIl9nZXRDb250ZW50Il0sIm1hcHBpbmdzIjoiQ0FDQSxTQUFBQSxFQUFBQyxHQUFBLGFBQUEsaUJBQUFDLFFBQUEsaUJBQUFBLE9BQUFDLFFBQUFELE9BQUFDLFFBQUFILEVBQUFJLFNBQUFILEVBQUFELEdBQUEsR0FBQSxTQUFBQSxHQUFBLElBQUFBLEVBQUFJLFNBQUEsTUFBQSxJQUFBQyxNQUFBLDRDQUFBLE9BQUFKLEVBQUFELElBQUFDLEVBQUFELEdBQUEsQ0FBQSxvQkFBQU0sT0FBQUEsT0FBQUMsS0FBQSxTQUFBUCxFQUFBQyxHQUFBLGFBQUEsSUFBQU8sS0FBQUMsRUFBQVQsRUFBQUksU0FBQU0sRUFBQUMsT0FBQUMsZUFBQUMsRUFBQUwsRUFBQU0sTUFBQUMsRUFBQVAsRUFBQVEsT0FBQUMsRUFBQVQsRUFBQVUsS0FBQUMsRUFBQVgsRUFBQVksUUFBQUMsS0FBQUMsRUFBQUQsRUFBQUUsU0FBQUMsRUFBQUgsRUFBQUksZUFBQUMsRUFBQUYsRUFBQUQsU0FBQUksRUFBQUQsRUFBQUUsS0FBQWpCLFFBQUFrQixLQUFBLFNBQUFDLEVBQUE5QixFQUFBQyxHQUFBLElBQUFPLEdBQUFQLEVBQUFBLEdBQUFRLEdBQUFzQixjQUFBLFVBQUF2QixFQUFBd0IsS0FBQWhDLEVBQUFDLEVBQUFnQyxLQUFBQyxZQUFBMUIsR0FBQTJCLFdBQUFDLFlBQUE1QixHQUFBLElBQUE2QixFQUFBLFFBQUFDLEVBQUEsU0FBQXRDLEVBQUFDLEdBQUEsT0FBQSxJQUFBcUMsRUFBQUMsR0FBQUMsS0FBQXhDLEVBQUFDLElBQUF3QyxFQUFBLHFDQUFBQyxFQUFBLFFBQUFDLEVBQUEsWUFBQUMsRUFBQSxTQUFBNUMsRUFBQUMsR0FBQSxPQUFBQSxFQUFBNEMsZUFBQSxTQUFBQyxFQUFBOUMsR0FBQSxJQUFBQyxJQUFBRCxHQUFBLFdBQUFBLEdBQUFBLEVBQUErQyxPQUFBdkMsRUFBQThCLEVBQUFVLEtB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QkFxSEF3WixJQUFBLFVBQ0F4WixJQUFBLFdBQ0EsT0FBQXkwQixNQUdBamIsSUFBQSxPQUNBeFosSUFBQSxXQUNBLE9BQUFnMEIsTUFHQXhhLElBQUEsV0FDQXhaLElBQUEsV0FDQSxPQUFBaTBCLE1BR0F6YSxJQUFBLFFBQ0F4WixJQUFBLFdBQ0EsT0FBQXlYLE1BR0ErQixJQUFBLFlBQ0F4WixJQUFBLFdBQ0EsT0FBQWswQixNQUdBMWEsSUFBQSxjQUNBeFosSUFBQSxXQUNBLE9BQUEwMEIsT0FJQVUsRUF2R0EsQ0F3R0ErQixJQVFBN3hCLEdBQUFyRyxHQUFBKzBCLElBQUFvQixHQUFBNkMsaUJBQ0EzeUIsR0FBQXJHLEdBQUErMEIsSUFBQUwsWUFBQXlCLEdBQ0E5dkIsR0FBQXJHLEdBQUErMEIsSUFBQTFFLFdBQUEsV0FFQSxPQURBaHFCLEdBQUFyRyxHQUFBKzBCLElBQUFHLEdBQ0FpQixHQUFBNkMsa0JBdDdHQSIsImZpbGUiOiJzY3JpcHRzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBqUXVlcnkgdjMuMS4xIHwgKGMpIGpRdWVyeSBGb3VuZGF0aW9uIHwganF1ZXJ5Lm9yZy9saWNlbnNlICovXHJcbiFmdW5jdGlvbihhLGIpe1widXNlIHN0cmljdFwiO1wib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1hLmRvY3VtZW50P2IoYSwhMCk6ZnVuY3Rpb24oYSl7aWYoIWEuZG9jdW1lbnQpdGhyb3cgbmV3IEVycm9yKFwialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiKTtyZXR1cm4gYihhKX06YihhKX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dGhpcyxmdW5jdGlvbihhLGIpe1widXNlIHN0cmljdFwiO3ZhciBjPVtdLGQ9YS5kb2N1bWVudCxlPU9iamVjdC5nZXRQcm90b3R5cGVPZixmPWMuc2xpY2UsZz1jLmNvbmNhdCxoPWMucHVzaCxpPWMuaW5kZXhPZixqPXt9LGs9ai50b1N0cmluZyxsPWouaGFzT3duUHJvcGVydHksbT1sLnRvU3RyaW5nLG49bS5jYWxsKE9iamVjdCksbz17fTtmdW5jdGlvbiBwKGEsYil7Yj1ifHxkO3ZhciBjPWIuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtjLnRleHQ9YSxiLmhlYWQuYXBwZW5kQ2hpbGQoYykucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjKX12YXIgcT1cIjMuMS4xXCIscj1mdW5jdGlvbihhLGIpe3JldHVybiBuZXcgci5mbi5pbml0KGEsYil9LHM9L15bXFxzXFx1RkVGRlxceEEwXSt8W1xcc1xcdUZFRkZcXHhBMF0rJC9nLHQ9L14tbXMtLyx1PS8tKFthLXpdKS9nLHY9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYi50b1VwcGVyQ2FzZSgpfTtyLmZuPXIucHJvdG90eXBlPXtqcXVlcnk6cSxjb25zdHJ1Y3RvcjpyLGxlbmd0aDowLHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gZi5jYWxsKHRoaXMpfSxnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/Zi5jYWxsKHRoaXMpOmE8MD90aGlzW2ErdGhpcy5sZW5ndGhdOnRoaXNbYV19LHB1c2hTdGFjazpmdW5jdGlvbihhKXt2YXIgYj1yLm1lcmdlKHRoaXMuY29uc3RydWN0b3IoKSxhKTtyZXR1cm4gYi5wcmV2T2JqZWN0PXRoaXMsYn0sZWFjaDpmdW5jdGlvbihhKXtyZXR1cm4gci5lYWNoKHRoaXMsYSl9LG1hcDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soci5tYXAodGhpcyxmdW5jdGlvbihiLGMpe3JldHVybiBhLmNhbGwoYixjLGIpfSkpfSxzbGljZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnB1c2hTdGFjayhmLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoMCl9LGxhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcSgtMSl9LGVxOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMubGVuZ3RoLGM9K2ErKGE8MD9iOjApO3JldHVybiB0aGlzLnB1c2hTdGFjayhjPj0wJiZjPGI/W3RoaXNbY11dOltdKX0sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJldk9iamVjdHx8dGhpcy5jb25zdHJ1Y3RvcigpfSxwdXNoOmgsc29ydDpjLnNvcnQsc3BsaWNlOmMuc3BsaWNlfSxyLmV4dGVuZD1yLmZuLmV4dGVuZD1mdW5jdGlvbigpe3ZhciBhLGIsYyxkLGUsZixnPWFyZ3VtZW50c1swXXx8e30saD0xLGk9YXJndW1lbnRzLmxlbmd0aCxqPSExO2ZvcihcImJvb2xlYW5cIj09dHlwZW9mIGcmJihqPWcsZz1hcmd1bWVudHNbaF18fHt9LGgrKyksXCJvYmplY3RcIj09dHlwZW9mIGd8fHIuaXNGdW5jdGlvbihnKXx8KGc9e30pLGg9PT1pJiYoZz10aGlzLGgtLSk7aDxpO2grKylpZihudWxsIT0oYT1hcmd1bWVudHNbaF0pKWZvcihiIGluIGEpYz1nW2JdLGQ9YVtiXSxnIT09ZCYmKGomJmQmJihyLmlzUGxhaW5PYmplY3QoZCl8fChlPXIuaXNBcnJheShkKSkpPyhlPyhlPSExLGY9YyYmci5pc0FycmF5KGMpP2M6W10pOmY9YyYmci5pc1BsYWluT2JqZWN0KGMpP2M6e30sZ1tiXT1yLmV4dGVuZChqLGYsZCkpOnZvaWQgMCE9PWQmJihnW2JdPWQpKTtyZXR1cm4gZ30sci5leHRlbmQoe2V4cGFuZG86XCJqUXVlcnlcIisocStNYXRoLnJhbmRvbSgpKS5yZXBsYWNlKC9cXEQvZyxcIlwiKSxpc1JlYWR5OiEwLGVycm9yOmZ1bmN0aW9uKGEpe3Rocm93IG5ldyBFcnJvcihhKX0sbm9vcDpmdW5jdGlvbigpe30saXNGdW5jdGlvbjpmdW5jdGlvbihhKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT1yLnR5cGUoYSl9LGlzQXJyYXk6QXJyYXkuaXNBcnJheSxpc1dpbmRvdzpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbCE9YSYmYT09PWEud2luZG93fSxpc051bWVyaWM6ZnVuY3Rpb24oYSl7dmFyIGI9ci50eXBlKGEpO3JldHVybihcIm51bWJlclwiPT09Ynx8XCJzdHJpbmdcIj09PWIpJiYhaXNOYU4oYS1wYXJzZUZsb2F0KGEpKX0saXNQbGFpbk9iamVjdDpmdW5jdGlvbihhKXt2YXIgYixjO3JldHVybiEoIWF8fFwiW29iamVjdCBPYmplY3RdXCIhPT1rLmNhbGwoYSkpJiYoIShiPWUoYSkpfHwoYz1sLmNhbGwoYixcImNvbnN0cnVjdG9yXCIpJiZiLmNvbnN0cnVjdG9yLFwiZnVuY3Rpb25cIj09dHlwZW9mIGMmJm0uY2FsbChjKT09PW4pKX0saXNFbXB0eU9iamVjdDpmdW5jdGlvbihhKXt2YXIgYjtmb3IoYiBpbiBhKXJldHVybiExO3JldHVybiEwfSx0eXBlOmZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hP2ErXCJcIjpcIm9iamVjdFwiPT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT10eXBlb2YgYT9qW2suY2FsbChhKV18fFwib2JqZWN0XCI6dHlwZW9mIGF9LGdsb2JhbEV2YWw6ZnVuY3Rpb24oYSl7cChhKX0sY2FtZWxDYXNlOmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UodCxcIm1zLVwiKS5yZXBsYWNlKHUsdil9LG5vZGVOYW1lOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PWIudG9Mb3dlckNhc2UoKX0sZWFjaDpmdW5jdGlvbihhLGIpe3ZhciBjLGQ9MDtpZih3KGEpKXtmb3IoYz1hLmxlbmd0aDtkPGM7ZCsrKWlmKGIuY2FsbChhW2RdLGQsYVtkXSk9PT0hMSlicmVha31lbHNlIGZvcihkIGluIGEpaWYoYi5jYWxsKGFbZF0sZCxhW2RdKT09PSExKWJyZWFrO3JldHVybiBhfSx0cmltOmZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hP1wiXCI6KGErXCJcIikucmVwbGFjZShzLFwiXCIpfSxtYWtlQXJyYXk6ZnVuY3Rpb24oYSxiKXt2YXIgYz1ifHxbXTtyZXR1cm4gbnVsbCE9YSYmKHcoT2JqZWN0KGEpKT9yLm1lcmdlKGMsXCJzdHJpbmdcIj09dHlwZW9mIGE/W2FdOmEpOmguY2FsbChjLGEpKSxjfSxpbkFycmF5OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gbnVsbD09Yj8tMTppLmNhbGwoYixhLGMpfSxtZXJnZTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz0rYi5sZW5ndGgsZD0wLGU9YS5sZW5ndGg7ZDxjO2QrKylhW2UrK109YltkXTtyZXR1cm4gYS5sZW5ndGg9ZSxhfSxncmVwOmZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQsZT1bXSxmPTAsZz1hLmxlbmd0aCxoPSFjO2Y8ZztmKyspZD0hYihhW2ZdLGYpLGQhPT1oJiZlLnB1c2goYVtmXSk7cmV0dXJuIGV9LG1hcDpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmPTAsaD1bXTtpZih3KGEpKWZvcihkPWEubGVuZ3RoO2Y8ZDtmKyspZT1iKGFbZl0sZixjKSxudWxsIT1lJiZoLnB1c2goZSk7ZWxzZSBmb3IoZiBpbiBhKWU9YihhW2ZdLGYsYyksbnVsbCE9ZSYmaC5wdXNoKGUpO3JldHVybiBnLmFwcGx5KFtdLGgpfSxndWlkOjEscHJveHk6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGU7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGImJihjPWFbYl0sYj1hLGE9Yyksci5pc0Z1bmN0aW9uKGEpKXJldHVybiBkPWYuY2FsbChhcmd1bWVudHMsMiksZT1mdW5jdGlvbigpe3JldHVybiBhLmFwcGx5KGJ8fHRoaXMsZC5jb25jYXQoZi5jYWxsKGFyZ3VtZW50cykpKX0sZS5ndWlkPWEuZ3VpZD1hLmd1aWR8fHIuZ3VpZCsrLGV9LG5vdzpEYXRlLm5vdyxzdXBwb3J0Om99KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihyLmZuW1N5bWJvbC5pdGVyYXRvcl09Y1tTeW1ib2wuaXRlcmF0b3JdKSxyLmVhY2goXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KFwiIFwiKSxmdW5jdGlvbihhLGIpe2pbXCJbb2JqZWN0IFwiK2IrXCJdXCJdPWIudG9Mb3dlckNhc2UoKX0pO2Z1bmN0aW9uIHcoYSl7dmFyIGI9ISFhJiZcImxlbmd0aFwiaW4gYSYmYS5sZW5ndGgsYz1yLnR5cGUoYSk7cmV0dXJuXCJmdW5jdGlvblwiIT09YyYmIXIuaXNXaW5kb3coYSkmJihcImFycmF5XCI9PT1jfHwwPT09Ynx8XCJudW1iZXJcIj09dHlwZW9mIGImJmI+MCYmYi0xIGluIGEpfXZhciB4PWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoLGksaixrLGwsbSxuLG8scCxxLHIscyx0LHU9XCJzaXp6bGVcIisxKm5ldyBEYXRlLHY9YS5kb2N1bWVudCx3PTAseD0wLHk9aGEoKSx6PWhhKCksQT1oYSgpLEI9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT09PWImJihsPSEwKSwwfSxDPXt9Lmhhc093blByb3BlcnR5LEQ9W10sRT1ELnBvcCxGPUQucHVzaCxHPUQucHVzaCxIPUQuc2xpY2UsST1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz0wLGQ9YS5sZW5ndGg7YzxkO2MrKylpZihhW2NdPT09YilyZXR1cm4gYztyZXR1cm4tMX0sSj1cImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsSz1cIltcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGZdXCIsTD1cIig/OlxcXFxcXFxcLnxbXFxcXHctXXxbXlxcMC1cXFxceGEwXSkrXCIsTT1cIlxcXFxbXCIrSytcIiooXCIrTCtcIikoPzpcIitLK1wiKihbKl4kfCF+XT89KVwiK0srXCIqKD86JygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwifChcIitMK1wiKSl8KVwiK0srXCIqXFxcXF1cIixOPVwiOihcIitMK1wiKSg/OlxcXFwoKCgnKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCIpfCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpW1xcXFxdXXxcIitNK1wiKSopfC4qKVxcXFwpfClcIixPPW5ldyBSZWdFeHAoSytcIitcIixcImdcIiksUD1uZXcgUmVnRXhwKFwiXlwiK0srXCIrfCgoPzpefFteXFxcXFxcXFxdKSg/OlxcXFxcXFxcLikqKVwiK0srXCIrJFwiLFwiZ1wiKSxRPW5ldyBSZWdFeHAoXCJeXCIrSytcIiosXCIrSytcIipcIiksUj1uZXcgUmVnRXhwKFwiXlwiK0srXCIqKFs+K35dfFwiK0srXCIpXCIrSytcIipcIiksUz1uZXcgUmVnRXhwKFwiPVwiK0srXCIqKFteXFxcXF0nXFxcIl0qPylcIitLK1wiKlxcXFxdXCIsXCJnXCIpLFQ9bmV3IFJlZ0V4cChOKSxVPW5ldyBSZWdFeHAoXCJeXCIrTCtcIiRcIiksVj17SUQ6bmV3IFJlZ0V4cChcIl4jKFwiK0wrXCIpXCIpLENMQVNTOm5ldyBSZWdFeHAoXCJeXFxcXC4oXCIrTCtcIilcIiksVEFHOm5ldyBSZWdFeHAoXCJeKFwiK0wrXCJ8WypdKVwiKSxBVFRSOm5ldyBSZWdFeHAoXCJeXCIrTSksUFNFVURPOm5ldyBSZWdFeHAoXCJeXCIrTiksQ0hJTEQ6bmV3IFJlZ0V4cChcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIrSytcIiooZXZlbnxvZGR8KChbKy1dfCkoXFxcXGQqKW58KVwiK0srXCIqKD86KFsrLV18KVwiK0srXCIqKFxcXFxkKyl8KSlcIitLK1wiKlxcXFwpfClcIixcImlcIiksYm9vbDpuZXcgUmVnRXhwKFwiXig/OlwiK0orXCIpJFwiLFwiaVwiKSxuZWVkc0NvbnRleHQ6bmV3IFJlZ0V4cChcIl5cIitLK1wiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFxcXChcIitLK1wiKigoPzotXFxcXGQpP1xcXFxkKilcIitLK1wiKlxcXFwpfCkoPz1bXi1dfCQpXCIsXCJpXCIpfSxXPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksWD0vXmhcXGQkL2ksWT0vXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFo9L14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sJD0vWyt+XS8sXz1uZXcgUmVnRXhwKFwiXFxcXFxcXFwoW1xcXFxkYS1mXXsxLDZ9XCIrSytcIj98KFwiK0srXCIpfC4pXCIsXCJpZ1wiKSxhYT1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9XCIweFwiK2ItNjU1MzY7cmV0dXJuIGQhPT1kfHxjP2I6ZDwwP1N0cmluZy5mcm9tQ2hhckNvZGUoZCs2NTUzNik6U3RyaW5nLmZyb21DaGFyQ29kZShkPj4xMHw1NTI5NiwxMDIzJmR8NTYzMjApfSxiYT0vKFtcXDAtXFx4MWZcXHg3Zl18Xi0/XFxkKXxeLSR8W15cXDAtXFx4MWZcXHg3Zi1cXHVGRkZGXFx3LV0vZyxjYT1mdW5jdGlvbihhLGIpe3JldHVybiBiP1wiXFwwXCI9PT1hP1wiXFx1ZmZmZFwiOmEuc2xpY2UoMCwtMSkrXCJcXFxcXCIrYS5jaGFyQ29kZUF0KGEubGVuZ3RoLTEpLnRvU3RyaW5nKDE2KStcIiBcIjpcIlxcXFxcIithfSxkYT1mdW5jdGlvbigpe20oKX0sZWE9dGEoZnVuY3Rpb24oYSl7cmV0dXJuIGEuZGlzYWJsZWQ9PT0hMCYmKFwiZm9ybVwiaW4gYXx8XCJsYWJlbFwiaW4gYSl9LHtkaXI6XCJwYXJlbnROb2RlXCIsbmV4dDpcImxlZ2VuZFwifSk7dHJ5e0cuYXBwbHkoRD1ILmNhbGwodi5jaGlsZE5vZGVzKSx2LmNoaWxkTm9kZXMpLERbdi5jaGlsZE5vZGVzLmxlbmd0aF0ubm9kZVR5cGV9Y2F0Y2goZmEpe0c9e2FwcGx5OkQubGVuZ3RoP2Z1bmN0aW9uKGEsYil7Ri5hcHBseShhLEguY2FsbChiKSl9OmZ1bmN0aW9uKGEsYil7dmFyIGM9YS5sZW5ndGgsZD0wO3doaWxlKGFbYysrXT1iW2QrK10pO2EubGVuZ3RoPWMtMX19fWZ1bmN0aW9uIGdhKGEsYixkLGUpe3ZhciBmLGgsaixrLGwsbyxyLHM9YiYmYi5vd25lckRvY3VtZW50LHc9Yj9iLm5vZGVUeXBlOjk7aWYoZD1kfHxbXSxcInN0cmluZ1wiIT10eXBlb2YgYXx8IWF8fDEhPT13JiY5IT09dyYmMTEhPT13KXJldHVybiBkO2lmKCFlJiYoKGI/Yi5vd25lckRvY3VtZW50fHxiOnYpIT09biYmbShiKSxiPWJ8fG4scCkpe2lmKDExIT09dyYmKGw9Wi5leGVjKGEpKSlpZihmPWxbMV0pe2lmKDk9PT13KXtpZighKGo9Yi5nZXRFbGVtZW50QnlJZChmKSkpcmV0dXJuIGQ7aWYoai5pZD09PWYpcmV0dXJuIGQucHVzaChqKSxkfWVsc2UgaWYocyYmKGo9cy5nZXRFbGVtZW50QnlJZChmKSkmJnQoYixqKSYmai5pZD09PWYpcmV0dXJuIGQucHVzaChqKSxkfWVsc2V7aWYobFsyXSlyZXR1cm4gRy5hcHBseShkLGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYSkpLGQ7aWYoKGY9bFszXSkmJmMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSYmYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKXJldHVybiBHLmFwcGx5KGQsYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGYpKSxkfWlmKGMucXNhJiYhQVthK1wiIFwiXSYmKCFxfHwhcS50ZXN0KGEpKSl7aWYoMSE9PXcpcz1iLHI9YTtlbHNlIGlmKFwib2JqZWN0XCIhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpeyhrPWIuZ2V0QXR0cmlidXRlKFwiaWRcIikpP2s9ay5yZXBsYWNlKGJhLGNhKTpiLnNldEF0dHJpYnV0ZShcImlkXCIsaz11KSxvPWcoYSksaD1vLmxlbmd0aDt3aGlsZShoLS0pb1toXT1cIiNcIitrK1wiIFwiK3NhKG9baF0pO3I9by5qb2luKFwiLFwiKSxzPSQudGVzdChhKSYmcWEoYi5wYXJlbnROb2RlKXx8Yn1pZihyKXRyeXtyZXR1cm4gRy5hcHBseShkLHMucXVlcnlTZWxlY3RvckFsbChyKSksZH1jYXRjaCh4KXt9ZmluYWxseXtrPT09dSYmYi5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKX19fXJldHVybiBpKGEucmVwbGFjZShQLFwiJDFcIiksYixkLGUpfWZ1bmN0aW9uIGhhKCl7dmFyIGE9W107ZnVuY3Rpb24gYihjLGUpe3JldHVybiBhLnB1c2goYytcIiBcIik+ZC5jYWNoZUxlbmd0aCYmZGVsZXRlIGJbYS5zaGlmdCgpXSxiW2MrXCIgXCJdPWV9cmV0dXJuIGJ9ZnVuY3Rpb24gaWEoYSl7cmV0dXJuIGFbdV09ITAsYX1mdW5jdGlvbiBqYShhKXt2YXIgYj1uLmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKTt0cnl7cmV0dXJuISFhKGIpfWNhdGNoKGMpe3JldHVybiExfWZpbmFsbHl7Yi5wYXJlbnROb2RlJiZiLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYiksYj1udWxsfX1mdW5jdGlvbiBrYShhLGIpe3ZhciBjPWEuc3BsaXQoXCJ8XCIpLGU9Yy5sZW5ndGg7d2hpbGUoZS0tKWQuYXR0ckhhbmRsZVtjW2VdXT1ifWZ1bmN0aW9uIGxhKGEsYil7dmFyIGM9YiYmYSxkPWMmJjE9PT1hLm5vZGVUeXBlJiYxPT09Yi5ub2RlVHlwZSYmYS5zb3VyY2VJbmRleC1iLnNvdXJjZUluZGV4O2lmKGQpcmV0dXJuIGQ7aWYoYyl3aGlsZShjPWMubmV4dFNpYmxpbmcpaWYoYz09PWIpcmV0dXJuLTE7cmV0dXJuIGE/MTotMX1mdW5jdGlvbiBtYShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dmFyIGM9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWMmJmIudHlwZT09PWF9fWZ1bmN0aW9uIG5hKGEpe3JldHVybiBmdW5jdGlvbihiKXt2YXIgYz1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuKFwiaW5wdXRcIj09PWN8fFwiYnV0dG9uXCI9PT1jKSYmYi50eXBlPT09YX19ZnVuY3Rpb24gb2EoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3JldHVyblwiZm9ybVwiaW4gYj9iLnBhcmVudE5vZGUmJmIuZGlzYWJsZWQ9PT0hMT9cImxhYmVsXCJpbiBiP1wibGFiZWxcImluIGIucGFyZW50Tm9kZT9iLnBhcmVudE5vZGUuZGlzYWJsZWQ9PT1hOmIuZGlzYWJsZWQ9PT1hOmIuaXNEaXNhYmxlZD09PWF8fGIuaXNEaXNhYmxlZCE9PSFhJiZlYShiKT09PWE6Yi5kaXNhYmxlZD09PWE6XCJsYWJlbFwiaW4gYiYmYi5kaXNhYmxlZD09PWF9fWZ1bmN0aW9uIHBhKGEpe3JldHVybiBpYShmdW5jdGlvbihiKXtyZXR1cm4gYj0rYixpYShmdW5jdGlvbihjLGQpe3ZhciBlLGY9YShbXSxjLmxlbmd0aCxiKSxnPWYubGVuZ3RoO3doaWxlKGctLSljW2U9ZltnXV0mJihjW2VdPSEoZFtlXT1jW2VdKSl9KX0pfWZ1bmN0aW9uIHFhKGEpe3JldHVybiBhJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgYS5nZXRFbGVtZW50c0J5VGFnTmFtZSYmYX1jPWdhLnN1cHBvcnQ9e30sZj1nYS5pc1hNTD1mdW5jdGlvbihhKXt2YXIgYj1hJiYoYS5vd25lckRvY3VtZW50fHxhKS5kb2N1bWVudEVsZW1lbnQ7cmV0dXJuISFiJiZcIkhUTUxcIiE9PWIubm9kZU5hbWV9LG09Z2Euc2V0RG9jdW1lbnQ9ZnVuY3Rpb24oYSl7dmFyIGIsZSxnPWE/YS5vd25lckRvY3VtZW50fHxhOnY7cmV0dXJuIGchPT1uJiY5PT09Zy5ub2RlVHlwZSYmZy5kb2N1bWVudEVsZW1lbnQ/KG49ZyxvPW4uZG9jdW1lbnRFbGVtZW50LHA9IWYobiksdiE9PW4mJihlPW4uZGVmYXVsdFZpZXcpJiZlLnRvcCE9PWUmJihlLmFkZEV2ZW50TGlzdGVuZXI/ZS5hZGRFdmVudExpc3RlbmVyKFwidW5sb2FkXCIsZGEsITEpOmUuYXR0YWNoRXZlbnQmJmUuYXR0YWNoRXZlbnQoXCJvbnVubG9hZFwiLGRhKSksYy5hdHRyaWJ1dGVzPWphKGZ1bmN0aW9uKGEpe3JldHVybiBhLmNsYXNzTmFtZT1cImlcIiwhYS5nZXRBdHRyaWJ1dGUoXCJjbGFzc05hbWVcIil9KSxjLmdldEVsZW1lbnRzQnlUYWdOYW1lPWphKGZ1bmN0aW9uKGEpe3JldHVybiBhLmFwcGVuZENoaWxkKG4uY3JlYXRlQ29tbWVudChcIlwiKSksIWEuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpLmxlbmd0aH0pLGMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZT1ZLnRlc3Qobi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKSxjLmdldEJ5SWQ9amEoZnVuY3Rpb24oYSl7cmV0dXJuIG8uYXBwZW5kQ2hpbGQoYSkuaWQ9dSwhbi5nZXRFbGVtZW50c0J5TmFtZXx8IW4uZ2V0RWxlbWVudHNCeU5hbWUodSkubGVuZ3RofSksYy5nZXRCeUlkPyhkLmZpbHRlci5JRD1mdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoXyxhYSk7cmV0dXJuIGZ1bmN0aW9uKGEpe3JldHVybiBhLmdldEF0dHJpYnV0ZShcImlkXCIpPT09Yn19LGQuZmluZC5JRD1mdW5jdGlvbihhLGIpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBiLmdldEVsZW1lbnRCeUlkJiZwKXt2YXIgYz1iLmdldEVsZW1lbnRCeUlkKGEpO3JldHVybiBjP1tjXTpbXX19KTooZC5maWx0ZXIuSUQ9ZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKF8sYWEpO3JldHVybiBmdW5jdGlvbihhKXt2YXIgYz1cInVuZGVmaW5lZFwiIT10eXBlb2YgYS5nZXRBdHRyaWJ1dGVOb2RlJiZhLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKTtyZXR1cm4gYyYmYy52YWx1ZT09PWJ9fSxkLmZpbmQuSUQ9ZnVuY3Rpb24oYSxiKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgYi5nZXRFbGVtZW50QnlJZCYmcCl7dmFyIGMsZCxlLGY9Yi5nZXRFbGVtZW50QnlJZChhKTtpZihmKXtpZihjPWYuZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpLGMmJmMudmFsdWU9PT1hKXJldHVybltmXTtlPWIuZ2V0RWxlbWVudHNCeU5hbWUoYSksZD0wO3doaWxlKGY9ZVtkKytdKWlmKGM9Zi5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIiksYyYmYy52YWx1ZT09PWEpcmV0dXJuW2ZdfXJldHVybltdfX0pLGQuZmluZC5UQUc9Yy5nZXRFbGVtZW50c0J5VGFnTmFtZT9mdW5jdGlvbihhLGIpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBiLmdldEVsZW1lbnRzQnlUYWdOYW1lP2IuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYSk6Yy5xc2E/Yi5xdWVyeVNlbGVjdG9yQWxsKGEpOnZvaWQgMH06ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPVtdLGU9MCxmPWIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYSk7aWYoXCIqXCI9PT1hKXt3aGlsZShjPWZbZSsrXSkxPT09Yy5ub2RlVHlwZSYmZC5wdXNoKGMpO3JldHVybiBkfXJldHVybiBmfSxkLmZpbmQuQ0xBU1M9Yy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lJiZmdW5jdGlvbihhLGIpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJnApcmV0dXJuIGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShhKX0scj1bXSxxPVtdLChjLnFzYT1ZLnRlc3Qobi5xdWVyeVNlbGVjdG9yQWxsKSkmJihqYShmdW5jdGlvbihhKXtvLmFwcGVuZENoaWxkKGEpLmlubmVySFRNTD1cIjxhIGlkPSdcIit1K1wiJz48L2E+PHNlbGVjdCBpZD0nXCIrdStcIi1cXHJcXFxcJyBtc2FsbG93Y2FwdHVyZT0nJz48b3B0aW9uIHNlbGVjdGVkPScnPjwvb3B0aW9uPjwvc2VsZWN0PlwiLGEucXVlcnlTZWxlY3RvckFsbChcIlttc2FsbG93Y2FwdHVyZV49JyddXCIpLmxlbmd0aCYmcS5wdXNoKFwiWypeJF09XCIrSytcIiooPzonJ3xcXFwiXFxcIilcIiksYS5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGh8fHEucHVzaChcIlxcXFxbXCIrSytcIiooPzp2YWx1ZXxcIitKK1wiKVwiKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbaWR+PVwiK3UrXCItXVwiKS5sZW5ndGh8fHEucHVzaChcIn49XCIpLGEucXVlcnlTZWxlY3RvckFsbChcIjpjaGVja2VkXCIpLmxlbmd0aHx8cS5wdXNoKFwiOmNoZWNrZWRcIiksYS5xdWVyeVNlbGVjdG9yQWxsKFwiYSNcIit1K1wiKypcIikubGVuZ3RofHxxLnB1c2goXCIuIy4rWyt+XVwiKX0pLGphKGZ1bmN0aW9uKGEpe2EuaW5uZXJIVE1MPVwiPGEgaHJlZj0nJyBkaXNhYmxlZD0nZGlzYWJsZWQnPjwvYT48c2VsZWN0IGRpc2FibGVkPSdkaXNhYmxlZCc+PG9wdGlvbi8+PC9zZWxlY3Q+XCI7dmFyIGI9bi5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7Yi5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsXCJoaWRkZW5cIiksYS5hcHBlbmRDaGlsZChiKS5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJEXCIpLGEucXVlcnlTZWxlY3RvckFsbChcIltuYW1lPWRdXCIpLmxlbmd0aCYmcS5wdXNoKFwibmFtZVwiK0srXCIqWypeJHwhfl0/PVwiKSwyIT09YS5xdWVyeVNlbGVjdG9yQWxsKFwiOmVuYWJsZWRcIikubGVuZ3RoJiZxLnB1c2goXCI6ZW5hYmxlZFwiLFwiOmRpc2FibGVkXCIpLG8uYXBwZW5kQ2hpbGQoYSkuZGlzYWJsZWQ9ITAsMiE9PWEucXVlcnlTZWxlY3RvckFsbChcIjpkaXNhYmxlZFwiKS5sZW5ndGgmJnEucHVzaChcIjplbmFibGVkXCIsXCI6ZGlzYWJsZWRcIiksYS5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKSxxLnB1c2goXCIsLio6XCIpfSkpLChjLm1hdGNoZXNTZWxlY3Rvcj1ZLnRlc3Qocz1vLm1hdGNoZXN8fG8ud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHxvLm1vek1hdGNoZXNTZWxlY3Rvcnx8by5vTWF0Y2hlc1NlbGVjdG9yfHxvLm1zTWF0Y2hlc1NlbGVjdG9yKSkmJmphKGZ1bmN0aW9uKGEpe2MuZGlzY29ubmVjdGVkTWF0Y2g9cy5jYWxsKGEsXCIqXCIpLHMuY2FsbChhLFwiW3MhPScnXTp4XCIpLHIucHVzaChcIiE9XCIsTil9KSxxPXEubGVuZ3RoJiZuZXcgUmVnRXhwKHEuam9pbihcInxcIikpLHI9ci5sZW5ndGgmJm5ldyBSZWdFeHAoci5qb2luKFwifFwiKSksYj1ZLnRlc3Qoby5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiksdD1ifHxZLnRlc3Qoby5jb250YWlucyk/ZnVuY3Rpb24oYSxiKXt2YXIgYz05PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLGQ9YiYmYi5wYXJlbnROb2RlO3JldHVybiBhPT09ZHx8ISghZHx8MSE9PWQubm9kZVR5cGV8fCEoYy5jb250YWlucz9jLmNvbnRhaW5zKGQpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24mJjE2JmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oZCkpKX06ZnVuY3Rpb24oYSxiKXtpZihiKXdoaWxlKGI9Yi5wYXJlbnROb2RlKWlmKGI9PT1hKXJldHVybiEwO3JldHVybiExfSxCPWI/ZnVuY3Rpb24oYSxiKXtpZihhPT09YilyZXR1cm4gbD0hMCwwO3ZhciBkPSFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uLSFiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uO3JldHVybiBkP2Q6KGQ9KGEub3duZXJEb2N1bWVudHx8YSk9PT0oYi5vd25lckRvY3VtZW50fHxiKT9hLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpOjEsMSZkfHwhYy5zb3J0RGV0YWNoZWQmJmIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYSk9PT1kP2E9PT1ufHxhLm93bmVyRG9jdW1lbnQ9PT12JiZ0KHYsYSk/LTE6Yj09PW58fGIub3duZXJEb2N1bWVudD09PXYmJnQodixiKT8xOms/SShrLGEpLUkoayxiKTowOjQmZD8tMToxKX06ZnVuY3Rpb24oYSxiKXtpZihhPT09YilyZXR1cm4gbD0hMCwwO3ZhciBjLGQ9MCxlPWEucGFyZW50Tm9kZSxmPWIucGFyZW50Tm9kZSxnPVthXSxoPVtiXTtpZighZXx8IWYpcmV0dXJuIGE9PT1uPy0xOmI9PT1uPzE6ZT8tMTpmPzE6az9JKGssYSktSShrLGIpOjA7aWYoZT09PWYpcmV0dXJuIGxhKGEsYik7Yz1hO3doaWxlKGM9Yy5wYXJlbnROb2RlKWcudW5zaGlmdChjKTtjPWI7d2hpbGUoYz1jLnBhcmVudE5vZGUpaC51bnNoaWZ0KGMpO3doaWxlKGdbZF09PT1oW2RdKWQrKztyZXR1cm4gZD9sYShnW2RdLGhbZF0pOmdbZF09PT12Py0xOmhbZF09PT12PzE6MH0sbik6bn0sZ2EubWF0Y2hlcz1mdW5jdGlvbihhLGIpe3JldHVybiBnYShhLG51bGwsbnVsbCxiKX0sZ2EubWF0Y2hlc1NlbGVjdG9yPWZ1bmN0aW9uKGEsYil7aWYoKGEub3duZXJEb2N1bWVudHx8YSkhPT1uJiZtKGEpLGI9Yi5yZXBsYWNlKFMsXCI9JyQxJ11cIiksYy5tYXRjaGVzU2VsZWN0b3ImJnAmJiFBW2IrXCIgXCJdJiYoIXJ8fCFyLnRlc3QoYikpJiYoIXF8fCFxLnRlc3QoYikpKXRyeXt2YXIgZD1zLmNhbGwoYSxiKTtpZihkfHxjLmRpc2Nvbm5lY3RlZE1hdGNofHxhLmRvY3VtZW50JiYxMSE9PWEuZG9jdW1lbnQubm9kZVR5cGUpcmV0dXJuIGR9Y2F0Y2goZSl7fXJldHVybiBnYShiLG4sbnVsbCxbYV0pLmxlbmd0aD4wfSxnYS5jb250YWlucz1mdW5jdGlvbihhLGIpe3JldHVybihhLm93bmVyRG9jdW1lbnR8fGEpIT09biYmbShhKSx0KGEsYil9LGdhLmF0dHI9ZnVuY3Rpb24oYSxiKXsoYS5vd25lckRvY3VtZW50fHxhKSE9PW4mJm0oYSk7dmFyIGU9ZC5hdHRySGFuZGxlW2IudG9Mb3dlckNhc2UoKV0sZj1lJiZDLmNhbGwoZC5hdHRySGFuZGxlLGIudG9Mb3dlckNhc2UoKSk/ZShhLGIsIXApOnZvaWQgMDtyZXR1cm4gdm9pZCAwIT09Zj9mOmMuYXR0cmlidXRlc3x8IXA/YS5nZXRBdHRyaWJ1dGUoYik6KGY9YS5nZXRBdHRyaWJ1dGVOb2RlKGIpKSYmZi5zcGVjaWZpZWQ/Zi52YWx1ZTpudWxsfSxnYS5lc2NhcGU9ZnVuY3Rpb24oYSl7cmV0dXJuKGErXCJcIikucmVwbGFjZShiYSxjYSl9LGdhLmVycm9yPWZ1bmN0aW9uKGEpe3Rocm93IG5ldyBFcnJvcihcIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246IFwiK2EpfSxnYS51bmlxdWVTb3J0PWZ1bmN0aW9uKGEpe3ZhciBiLGQ9W10sZT0wLGY9MDtpZihsPSFjLmRldGVjdER1cGxpY2F0ZXMsaz0hYy5zb3J0U3RhYmxlJiZhLnNsaWNlKDApLGEuc29ydChCKSxsKXt3aGlsZShiPWFbZisrXSliPT09YVtmXSYmKGU9ZC5wdXNoKGYpKTt3aGlsZShlLS0pYS5zcGxpY2UoZFtlXSwxKX1yZXR1cm4gaz1udWxsLGF9LGU9Z2EuZ2V0VGV4dD1mdW5jdGlvbihhKXt2YXIgYixjPVwiXCIsZD0wLGY9YS5ub2RlVHlwZTtpZihmKXtpZigxPT09Znx8OT09PWZ8fDExPT09Zil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGEudGV4dENvbnRlbnQpcmV0dXJuIGEudGV4dENvbnRlbnQ7Zm9yKGE9YS5maXJzdENoaWxkO2E7YT1hLm5leHRTaWJsaW5nKWMrPWUoYSl9ZWxzZSBpZigzPT09Znx8ND09PWYpcmV0dXJuIGEubm9kZVZhbHVlfWVsc2Ugd2hpbGUoYj1hW2QrK10pYys9ZShiKTtyZXR1cm4gY30sZD1nYS5zZWxlY3RvcnM9e2NhY2hlTGVuZ3RoOjUwLGNyZWF0ZVBzZXVkbzppYSxtYXRjaDpWLGF0dHJIYW5kbGU6e30sZmluZDp7fSxyZWxhdGl2ZTp7XCI+XCI6e2RpcjpcInBhcmVudE5vZGVcIixmaXJzdDohMH0sXCIgXCI6e2RpcjpcInBhcmVudE5vZGVcIn0sXCIrXCI6e2RpcjpcInByZXZpb3VzU2libGluZ1wiLGZpcnN0OiEwfSxcIn5cIjp7ZGlyOlwicHJldmlvdXNTaWJsaW5nXCJ9fSxwcmVGaWx0ZXI6e0FUVFI6ZnVuY3Rpb24oYSl7cmV0dXJuIGFbMV09YVsxXS5yZXBsYWNlKF8sYWEpLGFbM109KGFbM118fGFbNF18fGFbNV18fFwiXCIpLnJlcGxhY2UoXyxhYSksXCJ+PVwiPT09YVsyXSYmKGFbM109XCIgXCIrYVszXStcIiBcIiksYS5zbGljZSgwLDQpfSxDSElMRDpmdW5jdGlvbihhKXtyZXR1cm4gYVsxXT1hWzFdLnRvTG93ZXJDYXNlKCksXCJudGhcIj09PWFbMV0uc2xpY2UoMCwzKT8oYVszXXx8Z2EuZXJyb3IoYVswXSksYVs0XT0rKGFbNF0/YVs1XSsoYVs2XXx8MSk6MiooXCJldmVuXCI9PT1hWzNdfHxcIm9kZFwiPT09YVszXSkpLGFbNV09KyhhWzddK2FbOF18fFwib2RkXCI9PT1hWzNdKSk6YVszXSYmZ2EuZXJyb3IoYVswXSksYX0sUFNFVURPOmZ1bmN0aW9uKGEpe3ZhciBiLGM9IWFbNl0mJmFbMl07cmV0dXJuIFYuQ0hJTEQudGVzdChhWzBdKT9udWxsOihhWzNdP2FbMl09YVs0XXx8YVs1XXx8XCJcIjpjJiZULnRlc3QoYykmJihiPWcoYywhMCkpJiYoYj1jLmluZGV4T2YoXCIpXCIsYy5sZW5ndGgtYiktYy5sZW5ndGgpJiYoYVswXT1hWzBdLnNsaWNlKDAsYiksYVsyXT1jLnNsaWNlKDAsYikpLGEuc2xpY2UoMCwzKSl9fSxmaWx0ZXI6e1RBRzpmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoXyxhYSkudG9Mb3dlckNhc2UoKTtyZXR1cm5cIipcIj09PWE/ZnVuY3Rpb24oKXtyZXR1cm4hMH06ZnVuY3Rpb24oYSl7cmV0dXJuIGEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PWJ9fSxDTEFTUzpmdW5jdGlvbihhKXt2YXIgYj15W2ErXCIgXCJdO3JldHVybiBifHwoYj1uZXcgUmVnRXhwKFwiKF58XCIrSytcIilcIithK1wiKFwiK0srXCJ8JClcIikpJiZ5KGEsZnVuY3Rpb24oYSl7cmV0dXJuIGIudGVzdChcInN0cmluZ1wiPT10eXBlb2YgYS5jbGFzc05hbWUmJmEuY2xhc3NOYW1lfHxcInVuZGVmaW5lZFwiIT10eXBlb2YgYS5nZXRBdHRyaWJ1dGUmJmEuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIil8fFwiXCIpfSl9LEFUVFI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBmdW5jdGlvbihkKXt2YXIgZT1nYS5hdHRyKGQsYSk7cmV0dXJuIG51bGw9PWU/XCIhPVwiPT09YjohYnx8KGUrPVwiXCIsXCI9XCI9PT1iP2U9PT1jOlwiIT1cIj09PWI/ZSE9PWM6XCJePVwiPT09Yj9jJiYwPT09ZS5pbmRleE9mKGMpOlwiKj1cIj09PWI/YyYmZS5pbmRleE9mKGMpPi0xOlwiJD1cIj09PWI/YyYmZS5zbGljZSgtYy5sZW5ndGgpPT09YzpcIn49XCI9PT1iPyhcIiBcIitlLnJlcGxhY2UoTyxcIiBcIikrXCIgXCIpLmluZGV4T2YoYyk+LTE6XCJ8PVwiPT09YiYmKGU9PT1jfHxlLnNsaWNlKDAsYy5sZW5ndGgrMSk9PT1jK1wiLVwiKSl9fSxDSElMRDpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVwibnRoXCIhPT1hLnNsaWNlKDAsMyksZz1cImxhc3RcIiE9PWEuc2xpY2UoLTQpLGg9XCJvZi10eXBlXCI9PT1iO3JldHVybiAxPT09ZCYmMD09PWU/ZnVuY3Rpb24oYSl7cmV0dXJuISFhLnBhcmVudE5vZGV9OmZ1bmN0aW9uKGIsYyxpKXt2YXIgaixrLGwsbSxuLG8scD1mIT09Zz9cIm5leHRTaWJsaW5nXCI6XCJwcmV2aW91c1NpYmxpbmdcIixxPWIucGFyZW50Tm9kZSxyPWgmJmIubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxzPSFpJiYhaCx0PSExO2lmKHEpe2lmKGYpe3doaWxlKHApe209Yjt3aGlsZShtPW1bcF0paWYoaD9tLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1yOjE9PT1tLm5vZGVUeXBlKXJldHVybiExO289cD1cIm9ubHlcIj09PWEmJiFvJiZcIm5leHRTaWJsaW5nXCJ9cmV0dXJuITB9aWYobz1bZz9xLmZpcnN0Q2hpbGQ6cS5sYXN0Q2hpbGRdLGcmJnMpe209cSxsPW1bdV18fChtW3VdPXt9KSxrPWxbbS51bmlxdWVJRF18fChsW20udW5pcXVlSURdPXt9KSxqPWtbYV18fFtdLG49alswXT09PXcmJmpbMV0sdD1uJiZqWzJdLG09biYmcS5jaGlsZE5vZGVzW25dO3doaWxlKG09KytuJiZtJiZtW3BdfHwodD1uPTApfHxvLnBvcCgpKWlmKDE9PT1tLm5vZGVUeXBlJiYrK3QmJm09PT1iKXtrW2FdPVt3LG4sdF07YnJlYWt9fWVsc2UgaWYocyYmKG09YixsPW1bdV18fChtW3VdPXt9KSxrPWxbbS51bmlxdWVJRF18fChsW20udW5pcXVlSURdPXt9KSxqPWtbYV18fFtdLG49alswXT09PXcmJmpbMV0sdD1uKSx0PT09ITEpd2hpbGUobT0rK24mJm0mJm1bcF18fCh0PW49MCl8fG8ucG9wKCkpaWYoKGg/bS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09cjoxPT09bS5ub2RlVHlwZSkmJisrdCYmKHMmJihsPW1bdV18fChtW3VdPXt9KSxrPWxbbS51bmlxdWVJRF18fChsW20udW5pcXVlSURdPXt9KSxrW2FdPVt3LHRdKSxtPT09YikpYnJlYWs7cmV0dXJuIHQtPWUsdD09PWR8fHQlZD09PTAmJnQvZD49MH19fSxQU0VVRE86ZnVuY3Rpb24oYSxiKXt2YXIgYyxlPWQucHNldWRvc1thXXx8ZC5zZXRGaWx0ZXJzW2EudG9Mb3dlckNhc2UoKV18fGdhLmVycm9yKFwidW5zdXBwb3J0ZWQgcHNldWRvOiBcIithKTtyZXR1cm4gZVt1XT9lKGIpOmUubGVuZ3RoPjE/KGM9W2EsYSxcIlwiLGJdLGQuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eShhLnRvTG93ZXJDYXNlKCkpP2lhKGZ1bmN0aW9uKGEsYyl7dmFyIGQsZj1lKGEsYiksZz1mLmxlbmd0aDt3aGlsZShnLS0pZD1JKGEsZltnXSksYVtkXT0hKGNbZF09ZltnXSl9KTpmdW5jdGlvbihhKXtyZXR1cm4gZShhLDAsYyl9KTplfX0scHNldWRvczp7bm90OmlhKGZ1bmN0aW9uKGEpe3ZhciBiPVtdLGM9W10sZD1oKGEucmVwbGFjZShQLFwiJDFcIikpO3JldHVybiBkW3VdP2lhKGZ1bmN0aW9uKGEsYixjLGUpe3ZhciBmLGc9ZChhLG51bGwsZSxbXSksaD1hLmxlbmd0aDt3aGlsZShoLS0pKGY9Z1toXSkmJihhW2hdPSEoYltoXT1mKSl9KTpmdW5jdGlvbihhLGUsZil7cmV0dXJuIGJbMF09YSxkKGIsbnVsbCxmLGMpLGJbMF09bnVsbCwhYy5wb3AoKX19KSxoYXM6aWEoZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3JldHVybiBnYShhLGIpLmxlbmd0aD4wfX0pLGNvbnRhaW5zOmlhKGZ1bmN0aW9uKGEpe3JldHVybiBhPWEucmVwbGFjZShfLGFhKSxmdW5jdGlvbihiKXtyZXR1cm4oYi50ZXh0Q29udGVudHx8Yi5pbm5lclRleHR8fGUoYikpLmluZGV4T2YoYSk+LTF9fSksbGFuZzppYShmdW5jdGlvbihhKXtyZXR1cm4gVS50ZXN0KGF8fFwiXCIpfHxnYS5lcnJvcihcInVuc3VwcG9ydGVkIGxhbmc6IFwiK2EpLGE9YS5yZXBsYWNlKF8sYWEpLnRvTG93ZXJDYXNlKCksZnVuY3Rpb24oYil7dmFyIGM7ZG8gaWYoYz1wP2IubGFuZzpiLmdldEF0dHJpYnV0ZShcInhtbDpsYW5nXCIpfHxiLmdldEF0dHJpYnV0ZShcImxhbmdcIikpcmV0dXJuIGM9Yy50b0xvd2VyQ2FzZSgpLGM9PT1hfHwwPT09Yy5pbmRleE9mKGErXCItXCIpO3doaWxlKChiPWIucGFyZW50Tm9kZSkmJjE9PT1iLm5vZGVUeXBlKTtyZXR1cm4hMX19KSx0YXJnZXQ6ZnVuY3Rpb24oYil7dmFyIGM9YS5sb2NhdGlvbiYmYS5sb2NhdGlvbi5oYXNoO3JldHVybiBjJiZjLnNsaWNlKDEpPT09Yi5pZH0scm9vdDpmdW5jdGlvbihhKXtyZXR1cm4gYT09PW99LGZvY3VzOmZ1bmN0aW9uKGEpe3JldHVybiBhPT09bi5hY3RpdmVFbGVtZW50JiYoIW4uaGFzRm9jdXN8fG4uaGFzRm9jdXMoKSkmJiEhKGEudHlwZXx8YS5ocmVmfHx+YS50YWJJbmRleCl9LGVuYWJsZWQ6b2EoITEpLGRpc2FibGVkOm9hKCEwKSxjaGVja2VkOmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iJiYhIWEuY2hlY2tlZHx8XCJvcHRpb25cIj09PWImJiEhYS5zZWxlY3RlZH0sc2VsZWN0ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucGFyZW50Tm9kZSYmYS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgsYS5zZWxlY3RlZD09PSEwfSxlbXB0eTpmdW5jdGlvbihhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YTthPWEubmV4dFNpYmxpbmcpaWYoYS5ub2RlVHlwZTw2KXJldHVybiExO3JldHVybiEwfSxwYXJlbnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIWQucHNldWRvcy5lbXB0eShhKX0saGVhZGVyOmZ1bmN0aW9uKGEpe3JldHVybiBYLnRlc3QoYS5ub2RlTmFtZSl9LGlucHV0OmZ1bmN0aW9uKGEpe3JldHVybiBXLnRlc3QoYS5ub2RlTmFtZSl9LGJ1dHRvbjpmdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09YiYmXCJidXR0b25cIj09PWEudHlwZXx8XCJidXR0b25cIj09PWJ9LHRleHQ6ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuXCJpbnB1dFwiPT09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpJiZcInRleHRcIj09PWEudHlwZSYmKG51bGw9PShiPWEuZ2V0QXR0cmlidXRlKFwidHlwZVwiKSl8fFwidGV4dFwiPT09Yi50b0xvd2VyQ2FzZSgpKX0sZmlyc3Q6cGEoZnVuY3Rpb24oKXtyZXR1cm5bMF19KSxsYXN0OnBhKGZ1bmN0aW9uKGEsYil7cmV0dXJuW2ItMV19KSxlcTpwYShmdW5jdGlvbihhLGIsYyl7cmV0dXJuW2M8MD9jK2I6Y119KSxldmVuOnBhKGZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTA7YzxiO2MrPTIpYS5wdXNoKGMpO3JldHVybiBhfSksb2RkOnBhKGZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTE7YzxiO2MrPTIpYS5wdXNoKGMpO3JldHVybiBhfSksbHQ6cGEoZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD1jPDA/YytiOmM7LS1kPj0wOylhLnB1c2goZCk7cmV0dXJuIGF9KSxndDpwYShmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPWM8MD9jK2I6YzsrK2Q8YjspYS5wdXNoKGQpO3JldHVybiBhfSl9fSxkLnBzZXVkb3MubnRoPWQucHNldWRvcy5lcTtmb3IoYiBpbntyYWRpbzohMCxjaGVja2JveDohMCxmaWxlOiEwLHBhc3N3b3JkOiEwLGltYWdlOiEwfSlkLnBzZXVkb3NbYl09bWEoYik7Zm9yKGIgaW57c3VibWl0OiEwLHJlc2V0OiEwfSlkLnBzZXVkb3NbYl09bmEoYik7ZnVuY3Rpb24gcmEoKXt9cmEucHJvdG90eXBlPWQuZmlsdGVycz1kLnBzZXVkb3MsZC5zZXRGaWx0ZXJzPW5ldyByYSxnPWdhLnRva2VuaXplPWZ1bmN0aW9uKGEsYil7dmFyIGMsZSxmLGcsaCxpLGosaz16W2ErXCIgXCJdO2lmKGspcmV0dXJuIGI/MDprLnNsaWNlKDApO2g9YSxpPVtdLGo9ZC5wcmVGaWx0ZXI7d2hpbGUoaCl7YyYmIShlPVEuZXhlYyhoKSl8fChlJiYoaD1oLnNsaWNlKGVbMF0ubGVuZ3RoKXx8aCksaS5wdXNoKGY9W10pKSxjPSExLChlPVIuZXhlYyhoKSkmJihjPWUuc2hpZnQoKSxmLnB1c2goe3ZhbHVlOmMsdHlwZTplWzBdLnJlcGxhY2UoUCxcIiBcIil9KSxoPWguc2xpY2UoYy5sZW5ndGgpKTtmb3IoZyBpbiBkLmZpbHRlcikhKGU9VltnXS5leGVjKGgpKXx8altnXSYmIShlPWpbZ10oZSkpfHwoYz1lLnNoaWZ0KCksZi5wdXNoKHt2YWx1ZTpjLHR5cGU6ZyxtYXRjaGVzOmV9KSxoPWguc2xpY2UoYy5sZW5ndGgpKTtpZighYylicmVha31yZXR1cm4gYj9oLmxlbmd0aDpoP2dhLmVycm9yKGEpOnooYSxpKS5zbGljZSgwKX07ZnVuY3Rpb24gc2EoYSl7Zm9yKHZhciBiPTAsYz1hLmxlbmd0aCxkPVwiXCI7YjxjO2IrKylkKz1hW2JdLnZhbHVlO3JldHVybiBkfWZ1bmN0aW9uIHRhKGEsYixjKXt2YXIgZD1iLmRpcixlPWIubmV4dCxmPWV8fGQsZz1jJiZcInBhcmVudE5vZGVcIj09PWYsaD14Kys7cmV0dXJuIGIuZmlyc3Q/ZnVuY3Rpb24oYixjLGUpe3doaWxlKGI9YltkXSlpZigxPT09Yi5ub2RlVHlwZXx8ZylyZXR1cm4gYShiLGMsZSk7cmV0dXJuITF9OmZ1bmN0aW9uKGIsYyxpKXt2YXIgaixrLGwsbT1bdyxoXTtpZihpKXt3aGlsZShiPWJbZF0paWYoKDE9PT1iLm5vZGVUeXBlfHxnKSYmYShiLGMsaSkpcmV0dXJuITB9ZWxzZSB3aGlsZShiPWJbZF0paWYoMT09PWIubm9kZVR5cGV8fGcpaWYobD1iW3VdfHwoYlt1XT17fSksaz1sW2IudW5pcXVlSURdfHwobFtiLnVuaXF1ZUlEXT17fSksZSYmZT09PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKSliPWJbZF18fGI7ZWxzZXtpZigoaj1rW2ZdKSYmalswXT09PXcmJmpbMV09PT1oKXJldHVybiBtWzJdPWpbMl07aWYoa1tmXT1tLG1bMl09YShiLGMsaSkpcmV0dXJuITB9cmV0dXJuITF9fWZ1bmN0aW9uIHVhKGEpe3JldHVybiBhLmxlbmd0aD4xP2Z1bmN0aW9uKGIsYyxkKXt2YXIgZT1hLmxlbmd0aDt3aGlsZShlLS0paWYoIWFbZV0oYixjLGQpKXJldHVybiExO3JldHVybiEwfTphWzBdfWZ1bmN0aW9uIHZhKGEsYixjKXtmb3IodmFyIGQ9MCxlPWIubGVuZ3RoO2Q8ZTtkKyspZ2EoYSxiW2RdLGMpO3JldHVybiBjfWZ1bmN0aW9uIHdhKGEsYixjLGQsZSl7Zm9yKHZhciBmLGc9W10saD0wLGk9YS5sZW5ndGgsaj1udWxsIT1iO2g8aTtoKyspKGY9YVtoXSkmJihjJiYhYyhmLGQsZSl8fChnLnB1c2goZiksaiYmYi5wdXNoKGgpKSk7cmV0dXJuIGd9ZnVuY3Rpb24geGEoYSxiLGMsZCxlLGYpe3JldHVybiBkJiYhZFt1XSYmKGQ9eGEoZCkpLGUmJiFlW3VdJiYoZT14YShlLGYpKSxpYShmdW5jdGlvbihmLGcsaCxpKXt2YXIgaixrLGwsbT1bXSxuPVtdLG89Zy5sZW5ndGgscD1mfHx2YShifHxcIipcIixoLm5vZGVUeXBlP1toXTpoLFtdKSxxPSFhfHwhZiYmYj9wOndhKHAsbSxhLGgsaSkscj1jP2V8fChmP2E6b3x8ZCk/W106ZzpxO2lmKGMmJmMocSxyLGgsaSksZCl7aj13YShyLG4pLGQoaixbXSxoLGkpLGs9ai5sZW5ndGg7d2hpbGUoay0tKShsPWpba10pJiYocltuW2tdXT0hKHFbbltrXV09bCkpfWlmKGYpe2lmKGV8fGEpe2lmKGUpe2o9W10saz1yLmxlbmd0aDt3aGlsZShrLS0pKGw9cltrXSkmJmoucHVzaChxW2tdPWwpO2UobnVsbCxyPVtdLGosaSl9az1yLmxlbmd0aDt3aGlsZShrLS0pKGw9cltrXSkmJihqPWU/SShmLGwpOm1ba10pPi0xJiYoZltqXT0hKGdbal09bCkpfX1lbHNlIHI9d2Eocj09PWc/ci5zcGxpY2UobyxyLmxlbmd0aCk6ciksZT9lKG51bGwsZyxyLGkpOkcuYXBwbHkoZyxyKX0pfWZ1bmN0aW9uIHlhKGEpe2Zvcih2YXIgYixjLGUsZj1hLmxlbmd0aCxnPWQucmVsYXRpdmVbYVswXS50eXBlXSxoPWd8fGQucmVsYXRpdmVbXCIgXCJdLGk9Zz8xOjAsaz10YShmdW5jdGlvbihhKXtyZXR1cm4gYT09PWJ9LGgsITApLGw9dGEoZnVuY3Rpb24oYSl7cmV0dXJuIEkoYixhKT4tMX0saCwhMCksbT1bZnVuY3Rpb24oYSxjLGQpe3ZhciBlPSFnJiYoZHx8YyE9PWopfHwoKGI9Yykubm9kZVR5cGU/ayhhLGMsZCk6bChhLGMsZCkpO3JldHVybiBiPW51bGwsZX1dO2k8ZjtpKyspaWYoYz1kLnJlbGF0aXZlW2FbaV0udHlwZV0pbT1bdGEodWEobSksYyldO2Vsc2V7aWYoYz1kLmZpbHRlclthW2ldLnR5cGVdLmFwcGx5KG51bGwsYVtpXS5tYXRjaGVzKSxjW3VdKXtmb3IoZT0rK2k7ZTxmO2UrKylpZihkLnJlbGF0aXZlW2FbZV0udHlwZV0pYnJlYWs7cmV0dXJuIHhhKGk+MSYmdWEobSksaT4xJiZzYShhLnNsaWNlKDAsaS0xKS5jb25jYXQoe3ZhbHVlOlwiIFwiPT09YVtpLTJdLnR5cGU/XCIqXCI6XCJcIn0pKS5yZXBsYWNlKFAsXCIkMVwiKSxjLGk8ZSYmeWEoYS5zbGljZShpLGUpKSxlPGYmJnlhKGE9YS5zbGljZShlKSksZTxmJiZzYShhKSl9bS5wdXNoKGMpfXJldHVybiB1YShtKX1mdW5jdGlvbiB6YShhLGIpe3ZhciBjPWIubGVuZ3RoPjAsZT1hLmxlbmd0aD4wLGY9ZnVuY3Rpb24oZixnLGgsaSxrKXt2YXIgbCxvLHEscj0wLHM9XCIwXCIsdD1mJiZbXSx1PVtdLHY9aix4PWZ8fGUmJmQuZmluZC5UQUcoXCIqXCIsaykseT13Kz1udWxsPT12PzE6TWF0aC5yYW5kb20oKXx8LjEsej14Lmxlbmd0aDtmb3IoayYmKGo9Zz09PW58fGd8fGspO3MhPT16JiZudWxsIT0obD14W3NdKTtzKyspe2lmKGUmJmwpe289MCxnfHxsLm93bmVyRG9jdW1lbnQ9PT1ufHwobShsKSxoPSFwKTt3aGlsZShxPWFbbysrXSlpZihxKGwsZ3x8bixoKSl7aS5wdXNoKGwpO2JyZWFrfWsmJih3PXkpfWMmJigobD0hcSYmbCkmJnItLSxmJiZ0LnB1c2gobCkpfWlmKHIrPXMsYyYmcyE9PXIpe289MDt3aGlsZShxPWJbbysrXSlxKHQsdSxnLGgpO2lmKGYpe2lmKHI+MCl3aGlsZShzLS0pdFtzXXx8dVtzXXx8KHVbc109RS5jYWxsKGkpKTt1PXdhKHUpfUcuYXBwbHkoaSx1KSxrJiYhZiYmdS5sZW5ndGg+MCYmcitiLmxlbmd0aD4xJiZnYS51bmlxdWVTb3J0KGkpfXJldHVybiBrJiYodz15LGo9diksdH07cmV0dXJuIGM/aWEoZik6Zn1yZXR1cm4gaD1nYS5jb21waWxlPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD1bXSxlPVtdLGY9QVthK1wiIFwiXTtpZighZil7Ynx8KGI9ZyhhKSksYz1iLmxlbmd0aDt3aGlsZShjLS0pZj15YShiW2NdKSxmW3VdP2QucHVzaChmKTplLnB1c2goZik7Zj1BKGEsemEoZSxkKSksZi5zZWxlY3Rvcj1hfXJldHVybiBmfSxpPWdhLnNlbGVjdD1mdW5jdGlvbihhLGIsYyxlKXt2YXIgZixpLGosayxsLG09XCJmdW5jdGlvblwiPT10eXBlb2YgYSYmYSxuPSFlJiZnKGE9bS5zZWxlY3Rvcnx8YSk7aWYoYz1jfHxbXSwxPT09bi5sZW5ndGgpe2lmKGk9blswXT1uWzBdLnNsaWNlKDApLGkubGVuZ3RoPjImJlwiSURcIj09PShqPWlbMF0pLnR5cGUmJjk9PT1iLm5vZGVUeXBlJiZwJiZkLnJlbGF0aXZlW2lbMV0udHlwZV0pe2lmKGI9KGQuZmluZC5JRChqLm1hdGNoZXNbMF0ucmVwbGFjZShfLGFhKSxiKXx8W10pWzBdLCFiKXJldHVybiBjO20mJihiPWIucGFyZW50Tm9kZSksYT1hLnNsaWNlKGkuc2hpZnQoKS52YWx1ZS5sZW5ndGgpfWY9Vi5uZWVkc0NvbnRleHQudGVzdChhKT8wOmkubGVuZ3RoO3doaWxlKGYtLSl7aWYoaj1pW2ZdLGQucmVsYXRpdmVbaz1qLnR5cGVdKWJyZWFrO2lmKChsPWQuZmluZFtrXSkmJihlPWwoai5tYXRjaGVzWzBdLnJlcGxhY2UoXyxhYSksJC50ZXN0KGlbMF0udHlwZSkmJnFhKGIucGFyZW50Tm9kZSl8fGIpKSl7aWYoaS5zcGxpY2UoZiwxKSxhPWUubGVuZ3RoJiZzYShpKSwhYSlyZXR1cm4gRy5hcHBseShjLGUpLGM7YnJlYWt9fX1yZXR1cm4obXx8aChhLG4pKShlLGIsIXAsYywhYnx8JC50ZXN0KGEpJiZxYShiLnBhcmVudE5vZGUpfHxiKSxjfSxjLnNvcnRTdGFibGU9dS5zcGxpdChcIlwiKS5zb3J0KEIpLmpvaW4oXCJcIik9PT11LGMuZGV0ZWN0RHVwbGljYXRlcz0hIWwsbSgpLGMuc29ydERldGFjaGVkPWphKGZ1bmN0aW9uKGEpe3JldHVybiAxJmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24obi5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIikpfSksamEoZnVuY3Rpb24oYSl7cmV0dXJuIGEuaW5uZXJIVE1MPVwiPGEgaHJlZj0nIyc+PC9hPlwiLFwiI1wiPT09YS5maXJzdENoaWxkLmdldEF0dHJpYnV0ZShcImhyZWZcIil9KXx8a2EoXCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoXCIsZnVuY3Rpb24oYSxiLGMpe2lmKCFjKXJldHVybiBhLmdldEF0dHJpYnV0ZShiLFwidHlwZVwiPT09Yi50b0xvd2VyQ2FzZSgpPzE6Mil9KSxjLmF0dHJpYnV0ZXMmJmphKGZ1bmN0aW9uKGEpe3JldHVybiBhLmlubmVySFRNTD1cIjxpbnB1dC8+XCIsYS5maXJzdENoaWxkLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIiksXCJcIj09PWEuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKX0pfHxrYShcInZhbHVlXCIsZnVuY3Rpb24oYSxiLGMpe2lmKCFjJiZcImlucHV0XCI9PT1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpcmV0dXJuIGEuZGVmYXVsdFZhbHVlfSksamEoZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWEuZ2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIil9KXx8a2EoSixmdW5jdGlvbihhLGIsYyl7dmFyIGQ7aWYoIWMpcmV0dXJuIGFbYl09PT0hMD9iLnRvTG93ZXJDYXNlKCk6KGQ9YS5nZXRBdHRyaWJ1dGVOb2RlKGIpKSYmZC5zcGVjaWZpZWQ/ZC52YWx1ZTpudWxsfSksZ2F9KGEpO3IuZmluZD14LHIuZXhwcj14LnNlbGVjdG9ycyxyLmV4cHJbXCI6XCJdPXIuZXhwci5wc2V1ZG9zLHIudW5pcXVlU29ydD1yLnVuaXF1ZT14LnVuaXF1ZVNvcnQsci50ZXh0PXguZ2V0VGV4dCxyLmlzWE1MRG9jPXguaXNYTUwsci5jb250YWlucz14LmNvbnRhaW5zLHIuZXNjYXBlU2VsZWN0b3I9eC5lc2NhcGU7dmFyIHk9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVtdLGU9dm9pZCAwIT09Yzt3aGlsZSgoYT1hW2JdKSYmOSE9PWEubm9kZVR5cGUpaWYoMT09PWEubm9kZVR5cGUpe2lmKGUmJnIoYSkuaXMoYykpYnJlYWs7ZC5wdXNoKGEpfXJldHVybiBkfSx6PWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPVtdO2E7YT1hLm5leHRTaWJsaW5nKTE9PT1hLm5vZGVUeXBlJiZhIT09YiYmYy5wdXNoKGEpO3JldHVybiBjfSxBPXIuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQsQj0vXjwoW2Etel1bXlxcL1xcMD46XFx4MjBcXHRcXHJcXG5cXGZdKilbXFx4MjBcXHRcXHJcXG5cXGZdKlxcLz8+KD86PFxcL1xcMT58KSQvaSxDPS9eLlteOiNcXFtcXC4sXSokLztmdW5jdGlvbiBEKGEsYixjKXtyZXR1cm4gci5pc0Z1bmN0aW9uKGIpP3IuZ3JlcChhLGZ1bmN0aW9uKGEsZCl7cmV0dXJuISFiLmNhbGwoYSxkLGEpIT09Y30pOmIubm9kZVR5cGU/ci5ncmVwKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1iIT09Y30pOlwic3RyaW5nXCIhPXR5cGVvZiBiP3IuZ3JlcChhLGZ1bmN0aW9uKGEpe3JldHVybiBpLmNhbGwoYixhKT4tMSE9PWN9KTpDLnRlc3QoYik/ci5maWx0ZXIoYixhLGMpOihiPXIuZmlsdGVyKGIsYSksci5ncmVwKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGkuY2FsbChiLGEpPi0xIT09YyYmMT09PWEubm9kZVR5cGV9KSl9ci5maWx0ZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWJbMF07cmV0dXJuIGMmJihhPVwiOm5vdChcIithK1wiKVwiKSwxPT09Yi5sZW5ndGgmJjE9PT1kLm5vZGVUeXBlP3IuZmluZC5tYXRjaGVzU2VsZWN0b3IoZCxhKT9bZF06W106ci5maW5kLm1hdGNoZXMoYSxyLmdyZXAoYixmdW5jdGlvbihhKXtyZXR1cm4gMT09PWEubm9kZVR5cGV9KSl9LHIuZm4uZXh0ZW5kKHtmaW5kOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZD10aGlzLmxlbmd0aCxlPXRoaXM7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGEpcmV0dXJuIHRoaXMucHVzaFN0YWNrKHIoYSkuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKGI9MDtiPGQ7YisrKWlmKHIuY29udGFpbnMoZVtiXSx0aGlzKSlyZXR1cm4hMH0pKTtmb3IoYz10aGlzLnB1c2hTdGFjayhbXSksYj0wO2I8ZDtiKyspci5maW5kKGEsZVtiXSxjKTtyZXR1cm4gZD4xP3IudW5pcXVlU29ydChjKTpjfSxmaWx0ZXI6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKEQodGhpcyxhfHxbXSwhMSkpfSxub3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKEQodGhpcyxhfHxbXSwhMCkpfSxpczpmdW5jdGlvbihhKXtyZXR1cm4hIUQodGhpcyxcInN0cmluZ1wiPT10eXBlb2YgYSYmQS50ZXN0KGEpP3IoYSk6YXx8W10sITEpLmxlbmd0aH19KTt2YXIgRSxGPS9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSspKSQvLEc9ci5mbi5pbml0PWZ1bmN0aW9uKGEsYixjKXt2YXIgZSxmO2lmKCFhKXJldHVybiB0aGlzO2lmKGM9Y3x8RSxcInN0cmluZ1wiPT10eXBlb2YgYSl7aWYoZT1cIjxcIj09PWFbMF0mJlwiPlwiPT09YVthLmxlbmd0aC0xXSYmYS5sZW5ndGg+PTM/W251bGwsYSxudWxsXTpGLmV4ZWMoYSksIWV8fCFlWzFdJiZiKXJldHVybiFifHxiLmpxdWVyeT8oYnx8YykuZmluZChhKTp0aGlzLmNvbnN0cnVjdG9yKGIpLmZpbmQoYSk7aWYoZVsxXSl7aWYoYj1iIGluc3RhbmNlb2Ygcj9iWzBdOmIsci5tZXJnZSh0aGlzLHIucGFyc2VIVE1MKGVbMV0sYiYmYi5ub2RlVHlwZT9iLm93bmVyRG9jdW1lbnR8fGI6ZCwhMCkpLEIudGVzdChlWzFdKSYmci5pc1BsYWluT2JqZWN0KGIpKWZvcihlIGluIGIpci5pc0Z1bmN0aW9uKHRoaXNbZV0pP3RoaXNbZV0oYltlXSk6dGhpcy5hdHRyKGUsYltlXSk7cmV0dXJuIHRoaXN9cmV0dXJuIGY9ZC5nZXRFbGVtZW50QnlJZChlWzJdKSxmJiYodGhpc1swXT1mLHRoaXMubGVuZ3RoPTEpLHRoaXN9cmV0dXJuIGEubm9kZVR5cGU/KHRoaXNbMF09YSx0aGlzLmxlbmd0aD0xLHRoaXMpOnIuaXNGdW5jdGlvbihhKT92b2lkIDAhPT1jLnJlYWR5P2MucmVhZHkoYSk6YShyKTpyLm1ha2VBcnJheShhLHRoaXMpfTtHLnByb3RvdHlwZT1yLmZuLEU9cihkKTt2YXIgSD0vXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxJPXtjaGlsZHJlbjohMCxjb250ZW50czohMCxuZXh0OiEwLHByZXY6ITB9O3IuZm4uZXh0ZW5kKHtoYXM6ZnVuY3Rpb24oYSl7dmFyIGI9cihhLHRoaXMpLGM9Yi5sZW5ndGg7cmV0dXJuIHRoaXMuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKHZhciBhPTA7YTxjO2ErKylpZihyLmNvbnRhaW5zKHRoaXMsYlthXSkpcmV0dXJuITB9KX0sY2xvc2VzdDpmdW5jdGlvbihhLGIpe3ZhciBjLGQ9MCxlPXRoaXMubGVuZ3RoLGY9W10sZz1cInN0cmluZ1wiIT10eXBlb2YgYSYmcihhKTtpZighQS50ZXN0KGEpKWZvcig7ZDxlO2QrKylmb3IoYz10aGlzW2RdO2MmJmMhPT1iO2M9Yy5wYXJlbnROb2RlKWlmKGMubm9kZVR5cGU8MTEmJihnP2cuaW5kZXgoYyk+LTE6MT09PWMubm9kZVR5cGUmJnIuZmluZC5tYXRjaGVzU2VsZWN0b3IoYyxhKSkpe2YucHVzaChjKTticmVha31yZXR1cm4gdGhpcy5wdXNoU3RhY2soZi5sZW5ndGg+MT9yLnVuaXF1ZVNvcnQoZik6Zil9LGluZGV4OmZ1bmN0aW9uKGEpe3JldHVybiBhP1wic3RyaW5nXCI9PXR5cGVvZiBhP2kuY2FsbChyKGEpLHRoaXNbMF0pOmkuY2FsbCh0aGlzLGEuanF1ZXJ5P2FbMF06YSk6dGhpc1swXSYmdGhpc1swXS5wYXJlbnROb2RlP3RoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoOi0xfSxhZGQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soci51bmlxdWVTb3J0KHIubWVyZ2UodGhpcy5nZXQoKSxyKGEsYikpKSl9LGFkZEJhY2s6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuYWRkKG51bGw9PWE/dGhpcy5wcmV2T2JqZWN0OnRoaXMucHJldk9iamVjdC5maWx0ZXIoYSkpfX0pO2Z1bmN0aW9uIEooYSxiKXt3aGlsZSgoYT1hW2JdKSYmMSE9PWEubm9kZVR5cGUpO3JldHVybiBhfXIuZWFjaCh7cGFyZW50OmZ1bmN0aW9uKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtyZXR1cm4gYiYmMTEhPT1iLm5vZGVUeXBlP2I6bnVsbH0scGFyZW50czpmdW5jdGlvbihhKXtyZXR1cm4geShhLFwicGFyZW50Tm9kZVwiKX0scGFyZW50c1VudGlsOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4geShhLFwicGFyZW50Tm9kZVwiLGMpfSxuZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBKKGEsXCJuZXh0U2libGluZ1wiKX0scHJldjpmdW5jdGlvbihhKXtyZXR1cm4gSihhLFwicHJldmlvdXNTaWJsaW5nXCIpfSxuZXh0QWxsOmZ1bmN0aW9uKGEpe3JldHVybiB5KGEsXCJuZXh0U2libGluZ1wiKX0scHJldkFsbDpmdW5jdGlvbihhKXtyZXR1cm4geShhLFwicHJldmlvdXNTaWJsaW5nXCIpfSxuZXh0VW50aWw6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB5KGEsXCJuZXh0U2libGluZ1wiLGMpfSxwcmV2VW50aWw6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB5KGEsXCJwcmV2aW91c1NpYmxpbmdcIixjKX0sc2libGluZ3M6ZnVuY3Rpb24oYSl7cmV0dXJuIHooKGEucGFyZW50Tm9kZXx8e30pLmZpcnN0Q2hpbGQsYSl9LGNoaWxkcmVuOmZ1bmN0aW9uKGEpe3JldHVybiB6KGEuZmlyc3RDaGlsZCl9LGNvbnRlbnRzOmZ1bmN0aW9uKGEpe3JldHVybiBhLmNvbnRlbnREb2N1bWVudHx8ci5tZXJnZShbXSxhLmNoaWxkTm9kZXMpfX0sZnVuY3Rpb24oYSxiKXtyLmZuW2FdPWZ1bmN0aW9uKGMsZCl7dmFyIGU9ci5tYXAodGhpcyxiLGMpO3JldHVyblwiVW50aWxcIiE9PWEuc2xpY2UoLTUpJiYoZD1jKSxkJiZcInN0cmluZ1wiPT10eXBlb2YgZCYmKGU9ci5maWx0ZXIoZCxlKSksdGhpcy5sZW5ndGg+MSYmKElbYV18fHIudW5pcXVlU29ydChlKSxILnRlc3QoYSkmJmUucmV2ZXJzZSgpKSx0aGlzLnB1c2hTdGFjayhlKX19KTt2YXIgSz0vW15cXHgyMFxcdFxcclxcblxcZl0rL2c7ZnVuY3Rpb24gTChhKXt2YXIgYj17fTtyZXR1cm4gci5lYWNoKGEubWF0Y2goSyl8fFtdLGZ1bmN0aW9uKGEsYyl7YltjXT0hMH0pLGJ9ci5DYWxsYmFja3M9ZnVuY3Rpb24oYSl7YT1cInN0cmluZ1wiPT10eXBlb2YgYT9MKGEpOnIuZXh0ZW5kKHt9LGEpO3ZhciBiLGMsZCxlLGY9W10sZz1bXSxoPS0xLGk9ZnVuY3Rpb24oKXtmb3IoZT1hLm9uY2UsZD1iPSEwO2cubGVuZ3RoO2g9LTEpe2M9Zy5zaGlmdCgpO3doaWxlKCsraDxmLmxlbmd0aClmW2hdLmFwcGx5KGNbMF0sY1sxXSk9PT0hMSYmYS5zdG9wT25GYWxzZSYmKGg9Zi5sZW5ndGgsYz0hMSl9YS5tZW1vcnl8fChjPSExKSxiPSExLGUmJihmPWM/W106XCJcIil9LGo9e2FkZDpmdW5jdGlvbigpe3JldHVybiBmJiYoYyYmIWImJihoPWYubGVuZ3RoLTEsZy5wdXNoKGMpKSxmdW5jdGlvbiBkKGIpe3IuZWFjaChiLGZ1bmN0aW9uKGIsYyl7ci5pc0Z1bmN0aW9uKGMpP2EudW5pcXVlJiZqLmhhcyhjKXx8Zi5wdXNoKGMpOmMmJmMubGVuZ3RoJiZcInN0cmluZ1wiIT09ci50eXBlKGMpJiZkKGMpfSl9KGFyZ3VtZW50cyksYyYmIWImJmkoKSksdGhpc30scmVtb3ZlOmZ1bmN0aW9uKCl7cmV0dXJuIHIuZWFjaChhcmd1bWVudHMsZnVuY3Rpb24oYSxiKXt2YXIgYzt3aGlsZSgoYz1yLmluQXJyYXkoYixmLGMpKT4tMSlmLnNwbGljZShjLDEpLGM8PWgmJmgtLX0pLHRoaXN9LGhhczpmdW5jdGlvbihhKXtyZXR1cm4gYT9yLmluQXJyYXkoYSxmKT4tMTpmLmxlbmd0aD4wfSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiBmJiYoZj1bXSksdGhpc30sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiBlPWc9W10sZj1jPVwiXCIsdGhpc30sZGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hZn0sbG9jazpmdW5jdGlvbigpe3JldHVybiBlPWc9W10sY3x8Ynx8KGY9Yz1cIlwiKSx0aGlzfSxsb2NrZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hIWV9LGZpcmVXaXRoOmZ1bmN0aW9uKGEsYyl7cmV0dXJuIGV8fChjPWN8fFtdLGM9W2EsYy5zbGljZT9jLnNsaWNlKCk6Y10sZy5wdXNoKGMpLGJ8fGkoKSksdGhpc30sZmlyZTpmdW5jdGlvbigpe3JldHVybiBqLmZpcmVXaXRoKHRoaXMsYXJndW1lbnRzKSx0aGlzfSxmaXJlZDpmdW5jdGlvbigpe3JldHVybiEhZH19O3JldHVybiBqfTtmdW5jdGlvbiBNKGEpe3JldHVybiBhfWZ1bmN0aW9uIE4oYSl7dGhyb3cgYX1mdW5jdGlvbiBPKGEsYixjKXt2YXIgZDt0cnl7YSYmci5pc0Z1bmN0aW9uKGQ9YS5wcm9taXNlKT9kLmNhbGwoYSkuZG9uZShiKS5mYWlsKGMpOmEmJnIuaXNGdW5jdGlvbihkPWEudGhlbik/ZC5jYWxsKGEsYixjKTpiLmNhbGwodm9pZCAwLGEpfWNhdGNoKGEpe2MuY2FsbCh2b2lkIDAsYSl9fXIuZXh0ZW5kKHtEZWZlcnJlZDpmdW5jdGlvbihiKXt2YXIgYz1bW1wibm90aWZ5XCIsXCJwcm9ncmVzc1wiLHIuQ2FsbGJhY2tzKFwibWVtb3J5XCIpLHIuQ2FsbGJhY2tzKFwibWVtb3J5XCIpLDJdLFtcInJlc29sdmVcIixcImRvbmVcIixyLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLHIuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksMCxcInJlc29sdmVkXCJdLFtcInJlamVjdFwiLFwiZmFpbFwiLHIuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksci5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKSwxLFwicmVqZWN0ZWRcIl1dLGQ9XCJwZW5kaW5nXCIsZT17c3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sYWx3YXlzOmZ1bmN0aW9uKCl7cmV0dXJuIGYuZG9uZShhcmd1bWVudHMpLmZhaWwoYXJndW1lbnRzKSx0aGlzfSxcImNhdGNoXCI6ZnVuY3Rpb24oYSl7cmV0dXJuIGUudGhlbihudWxsLGEpfSxwaXBlOmZ1bmN0aW9uKCl7dmFyIGE9YXJndW1lbnRzO3JldHVybiByLkRlZmVycmVkKGZ1bmN0aW9uKGIpe3IuZWFjaChjLGZ1bmN0aW9uKGMsZCl7dmFyIGU9ci5pc0Z1bmN0aW9uKGFbZFs0XV0pJiZhW2RbNF1dO2ZbZFsxXV0oZnVuY3Rpb24oKXt2YXIgYT1lJiZlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTthJiZyLmlzRnVuY3Rpb24oYS5wcm9taXNlKT9hLnByb21pc2UoKS5wcm9ncmVzcyhiLm5vdGlmeSkuZG9uZShiLnJlc29sdmUpLmZhaWwoYi5yZWplY3QpOmJbZFswXStcIldpdGhcIl0odGhpcyxlP1thXTphcmd1bWVudHMpfSl9KSxhPW51bGx9KS5wcm9taXNlKCl9LHRoZW46ZnVuY3Rpb24oYixkLGUpe3ZhciBmPTA7ZnVuY3Rpb24gZyhiLGMsZCxlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgaD10aGlzLGk9YXJndW1lbnRzLGo9ZnVuY3Rpb24oKXt2YXIgYSxqO2lmKCEoYjxmKSl7aWYoYT1kLmFwcGx5KGgsaSksYT09PWMucHJvbWlzZSgpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIik7aj1hJiYoXCJvYmplY3RcIj09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGEpJiZhLnRoZW4sci5pc0Z1bmN0aW9uKGopP2U/ai5jYWxsKGEsZyhmLGMsTSxlKSxnKGYsYyxOLGUpKTooZisrLGouY2FsbChhLGcoZixjLE0sZSksZyhmLGMsTixlKSxnKGYsYyxNLGMubm90aWZ5V2l0aCkpKTooZCE9PU0mJihoPXZvaWQgMCxpPVthXSksKGV8fGMucmVzb2x2ZVdpdGgpKGgsaSkpfX0saz1lP2o6ZnVuY3Rpb24oKXt0cnl7aigpfWNhdGNoKGEpe3IuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayYmci5EZWZlcnJlZC5leGNlcHRpb25Ib29rKGEsay5zdGFja1RyYWNlKSxiKzE+PWYmJihkIT09TiYmKGg9dm9pZCAwLGk9W2FdKSxjLnJlamVjdFdpdGgoaCxpKSl9fTtiP2soKTooci5EZWZlcnJlZC5nZXRTdGFja0hvb2smJihrLnN0YWNrVHJhY2U9ci5EZWZlcnJlZC5nZXRTdGFja0hvb2soKSksYS5zZXRUaW1lb3V0KGspKX19cmV0dXJuIHIuRGVmZXJyZWQoZnVuY3Rpb24oYSl7Y1swXVszXS5hZGQoZygwLGEsci5pc0Z1bmN0aW9uKGUpP2U6TSxhLm5vdGlmeVdpdGgpKSxjWzFdWzNdLmFkZChnKDAsYSxyLmlzRnVuY3Rpb24oYik/YjpNKSksY1syXVszXS5hZGQoZygwLGEsci5pc0Z1bmN0aW9uKGQpP2Q6TikpfSkucHJvbWlzZSgpfSxwcm9taXNlOmZ1bmN0aW9uKGEpe3JldHVybiBudWxsIT1hP3IuZXh0ZW5kKGEsZSk6ZX19LGY9e307cmV0dXJuIHIuZWFjaChjLGZ1bmN0aW9uKGEsYil7dmFyIGc9YlsyXSxoPWJbNV07ZVtiWzFdXT1nLmFkZCxoJiZnLmFkZChmdW5jdGlvbigpe2Q9aH0sY1szLWFdWzJdLmRpc2FibGUsY1swXVsyXS5sb2NrKSxnLmFkZChiWzNdLmZpcmUpLGZbYlswXV09ZnVuY3Rpb24oKXtyZXR1cm4gZltiWzBdK1wiV2l0aFwiXSh0aGlzPT09Zj92b2lkIDA6dGhpcyxhcmd1bWVudHMpLHRoaXN9LGZbYlswXStcIldpdGhcIl09Zy5maXJlV2l0aH0pLGUucHJvbWlzZShmKSxiJiZiLmNhbGwoZixmKSxmfSx3aGVuOmZ1bmN0aW9uKGEpe3ZhciBiPWFyZ3VtZW50cy5sZW5ndGgsYz1iLGQ9QXJyYXkoYyksZT1mLmNhbGwoYXJndW1lbnRzKSxnPXIuRGVmZXJyZWQoKSxoPWZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihjKXtkW2FdPXRoaXMsZVthXT1hcmd1bWVudHMubGVuZ3RoPjE/Zi5jYWxsKGFyZ3VtZW50cyk6YywtLWJ8fGcucmVzb2x2ZVdpdGgoZCxlKX19O2lmKGI8PTEmJihPKGEsZy5kb25lKGgoYykpLnJlc29sdmUsZy5yZWplY3QpLFwicGVuZGluZ1wiPT09Zy5zdGF0ZSgpfHxyLmlzRnVuY3Rpb24oZVtjXSYmZVtjXS50aGVuKSkpcmV0dXJuIGcudGhlbigpO3doaWxlKGMtLSlPKGVbY10saChjKSxnLnJlamVjdCk7cmV0dXJuIGcucHJvbWlzZSgpfX0pO3ZhciBQPS9eKEV2YWx8SW50ZXJuYWx8UmFuZ2V8UmVmZXJlbmNlfFN5bnRheHxUeXBlfFVSSSlFcnJvciQvO3IuRGVmZXJyZWQuZXhjZXB0aW9uSG9vaz1mdW5jdGlvbihiLGMpe2EuY29uc29sZSYmYS5jb25zb2xlLndhcm4mJmImJlAudGVzdChiLm5hbWUpJiZhLmNvbnNvbGUud2FybihcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiK2IubWVzc2FnZSxiLnN0YWNrLGMpfSxyLnJlYWR5RXhjZXB0aW9uPWZ1bmN0aW9uKGIpe2Euc2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGJ9KX07dmFyIFE9ci5EZWZlcnJlZCgpO3IuZm4ucmVhZHk9ZnVuY3Rpb24oYSl7cmV0dXJuIFEudGhlbihhKVtcImNhdGNoXCJdKGZ1bmN0aW9uKGEpe3IucmVhZHlFeGNlcHRpb24oYSl9KSx0aGlzfSxyLmV4dGVuZCh7aXNSZWFkeTohMSxyZWFkeVdhaXQ6MSxob2xkUmVhZHk6ZnVuY3Rpb24oYSl7YT9yLnJlYWR5V2FpdCsrOnIucmVhZHkoITApfSxyZWFkeTpmdW5jdGlvbihhKXsoYT09PSEwPy0tci5yZWFkeVdhaXQ6ci5pc1JlYWR5KXx8KHIuaXNSZWFkeT0hMCxhIT09ITAmJi0tci5yZWFkeVdhaXQ+MHx8US5yZXNvbHZlV2l0aChkLFtyXSkpfX0pLHIucmVhZHkudGhlbj1RLnRoZW47ZnVuY3Rpb24gUigpe2QucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixSKSxcclxuYS5yZW1vdmVFdmVudExpc3RlbmVyKFwibG9hZFwiLFIpLHIucmVhZHkoKX1cImNvbXBsZXRlXCI9PT1kLnJlYWR5U3RhdGV8fFwibG9hZGluZ1wiIT09ZC5yZWFkeVN0YXRlJiYhZC5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGw/YS5zZXRUaW1lb3V0KHIucmVhZHkpOihkLmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsUiksYS5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLFIpKTt2YXIgUz1mdW5jdGlvbihhLGIsYyxkLGUsZixnKXt2YXIgaD0wLGk9YS5sZW5ndGgsaj1udWxsPT1jO2lmKFwib2JqZWN0XCI9PT1yLnR5cGUoYykpe2U9ITA7Zm9yKGggaW4gYylTKGEsYixoLGNbaF0sITAsZixnKX1lbHNlIGlmKHZvaWQgMCE9PWQmJihlPSEwLHIuaXNGdW5jdGlvbihkKXx8KGc9ITApLGomJihnPyhiLmNhbGwoYSxkKSxiPW51bGwpOihqPWIsYj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIGouY2FsbChyKGEpLGMpfSkpLGIpKWZvcig7aDxpO2grKyliKGFbaF0sYyxnP2Q6ZC5jYWxsKGFbaF0saCxiKGFbaF0sYykpKTtyZXR1cm4gZT9hOmo/Yi5jYWxsKGEpOmk/YihhWzBdLGMpOmZ9LFQ9ZnVuY3Rpb24oYSl7cmV0dXJuIDE9PT1hLm5vZGVUeXBlfHw5PT09YS5ub2RlVHlwZXx8ISthLm5vZGVUeXBlfTtmdW5jdGlvbiBVKCl7dGhpcy5leHBhbmRvPXIuZXhwYW5kbytVLnVpZCsrfVUudWlkPTEsVS5wcm90b3R5cGU9e2NhY2hlOmZ1bmN0aW9uKGEpe3ZhciBiPWFbdGhpcy5leHBhbmRvXTtyZXR1cm4gYnx8KGI9e30sVChhKSYmKGEubm9kZVR5cGU/YVt0aGlzLmV4cGFuZG9dPWI6T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsdGhpcy5leHBhbmRvLHt2YWx1ZTpiLGNvbmZpZ3VyYWJsZTohMH0pKSksYn0sc2V0OmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlPXRoaXMuY2FjaGUoYSk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGIpZVtyLmNhbWVsQ2FzZShiKV09YztlbHNlIGZvcihkIGluIGIpZVtyLmNhbWVsQ2FzZShkKV09YltkXTtyZXR1cm4gZX0sZ2V0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHZvaWQgMD09PWI/dGhpcy5jYWNoZShhKTphW3RoaXMuZXhwYW5kb10mJmFbdGhpcy5leHBhbmRvXVtyLmNhbWVsQ2FzZShiKV19LGFjY2VzczpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHZvaWQgMD09PWJ8fGImJlwic3RyaW5nXCI9PXR5cGVvZiBiJiZ2b2lkIDA9PT1jP3RoaXMuZ2V0KGEsYik6KHRoaXMuc2V0KGEsYixjKSx2b2lkIDAhPT1jP2M6Yil9LHJlbW92ZTpmdW5jdGlvbihhLGIpe3ZhciBjLGQ9YVt0aGlzLmV4cGFuZG9dO2lmKHZvaWQgMCE9PWQpe2lmKHZvaWQgMCE9PWIpe3IuaXNBcnJheShiKT9iPWIubWFwKHIuY2FtZWxDYXNlKTooYj1yLmNhbWVsQ2FzZShiKSxiPWIgaW4gZD9bYl06Yi5tYXRjaChLKXx8W10pLGM9Yi5sZW5ndGg7d2hpbGUoYy0tKWRlbGV0ZSBkW2JbY11dfSh2b2lkIDA9PT1ifHxyLmlzRW1wdHlPYmplY3QoZCkpJiYoYS5ub2RlVHlwZT9hW3RoaXMuZXhwYW5kb109dm9pZCAwOmRlbGV0ZSBhW3RoaXMuZXhwYW5kb10pfX0saGFzRGF0YTpmdW5jdGlvbihhKXt2YXIgYj1hW3RoaXMuZXhwYW5kb107cmV0dXJuIHZvaWQgMCE9PWImJiFyLmlzRW1wdHlPYmplY3QoYil9fTt2YXIgVj1uZXcgVSxXPW5ldyBVLFg9L14oPzpcXHtbXFx3XFxXXSpcXH18XFxbW1xcd1xcV10qXFxdKSQvLFk9L1tBLVpdL2c7ZnVuY3Rpb24gWihhKXtyZXR1cm5cInRydWVcIj09PWF8fFwiZmFsc2VcIiE9PWEmJihcIm51bGxcIj09PWE/bnVsbDphPT09K2ErXCJcIj8rYTpYLnRlc3QoYSk/SlNPTi5wYXJzZShhKTphKX1mdW5jdGlvbiAkKGEsYixjKXt2YXIgZDtpZih2b2lkIDA9PT1jJiYxPT09YS5ub2RlVHlwZSlpZihkPVwiZGF0YS1cIitiLnJlcGxhY2UoWSxcIi0kJlwiKS50b0xvd2VyQ2FzZSgpLGM9YS5nZXRBdHRyaWJ1dGUoZCksXCJzdHJpbmdcIj09dHlwZW9mIGMpe3RyeXtjPVooYyl9Y2F0Y2goZSl7fVcuc2V0KGEsYixjKX1lbHNlIGM9dm9pZCAwO3JldHVybiBjfXIuZXh0ZW5kKHtoYXNEYXRhOmZ1bmN0aW9uKGEpe3JldHVybiBXLmhhc0RhdGEoYSl8fFYuaGFzRGF0YShhKX0sZGF0YTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIFcuYWNjZXNzKGEsYixjKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihhLGIpe1cucmVtb3ZlKGEsYil9LF9kYXRhOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gVi5hY2Nlc3MoYSxiLGMpfSxfcmVtb3ZlRGF0YTpmdW5jdGlvbihhLGIpe1YucmVtb3ZlKGEsYil9fSksci5mbi5leHRlbmQoe2RhdGE6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZj10aGlzWzBdLGc9ZiYmZi5hdHRyaWJ1dGVzO2lmKHZvaWQgMD09PWEpe2lmKHRoaXMubGVuZ3RoJiYoZT1XLmdldChmKSwxPT09Zi5ub2RlVHlwZSYmIVYuZ2V0KGYsXCJoYXNEYXRhQXR0cnNcIikpKXtjPWcubGVuZ3RoO3doaWxlKGMtLSlnW2NdJiYoZD1nW2NdLm5hbWUsMD09PWQuaW5kZXhPZihcImRhdGEtXCIpJiYoZD1yLmNhbWVsQ2FzZShkLnNsaWNlKDUpKSwkKGYsZCxlW2RdKSkpO1Yuc2V0KGYsXCJoYXNEYXRhQXR0cnNcIiwhMCl9cmV0dXJuIGV9cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIGE/dGhpcy5lYWNoKGZ1bmN0aW9uKCl7Vy5zZXQodGhpcyxhKX0pOlModGhpcyxmdW5jdGlvbihiKXt2YXIgYztpZihmJiZ2b2lkIDA9PT1iKXtpZihjPVcuZ2V0KGYsYSksdm9pZCAwIT09YylyZXR1cm4gYztpZihjPSQoZixhKSx2b2lkIDAhPT1jKXJldHVybiBjfWVsc2UgdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Vy5zZXQodGhpcyxhLGIpfSl9LG51bGwsYixhcmd1bWVudHMubGVuZ3RoPjEsbnVsbCwhMCl9LHJlbW92ZURhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe1cucmVtb3ZlKHRoaXMsYSl9KX19KSxyLmV4dGVuZCh7cXVldWU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2lmKGEpcmV0dXJuIGI9KGJ8fFwiZnhcIikrXCJxdWV1ZVwiLGQ9Vi5nZXQoYSxiKSxjJiYoIWR8fHIuaXNBcnJheShjKT9kPVYuYWNjZXNzKGEsYixyLm1ha2VBcnJheShjKSk6ZC5wdXNoKGMpKSxkfHxbXX0sZGVxdWV1ZTpmdW5jdGlvbihhLGIpe2I9Ynx8XCJmeFwiO3ZhciBjPXIucXVldWUoYSxiKSxkPWMubGVuZ3RoLGU9Yy5zaGlmdCgpLGY9ci5fcXVldWVIb29rcyhhLGIpLGc9ZnVuY3Rpb24oKXtyLmRlcXVldWUoYSxiKX07XCJpbnByb2dyZXNzXCI9PT1lJiYoZT1jLnNoaWZ0KCksZC0tKSxlJiYoXCJmeFwiPT09YiYmYy51bnNoaWZ0KFwiaW5wcm9ncmVzc1wiKSxkZWxldGUgZi5zdG9wLGUuY2FsbChhLGcsZikpLCFkJiZmJiZmLmVtcHR5LmZpcmUoKX0sX3F1ZXVlSG9va3M6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iK1wicXVldWVIb29rc1wiO3JldHVybiBWLmdldChhLGMpfHxWLmFjY2VzcyhhLGMse2VtcHR5OnIuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIikuYWRkKGZ1bmN0aW9uKCl7Vi5yZW1vdmUoYSxbYitcInF1ZXVlXCIsY10pfSl9KX19KSxyLmZuLmV4dGVuZCh7cXVldWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz0yO3JldHVyblwic3RyaW5nXCIhPXR5cGVvZiBhJiYoYj1hLGE9XCJmeFwiLGMtLSksYXJndW1lbnRzLmxlbmd0aDxjP3IucXVldWUodGhpc1swXSxhKTp2b2lkIDA9PT1iP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGM9ci5xdWV1ZSh0aGlzLGEsYik7ci5fcXVldWVIb29rcyh0aGlzLGEpLFwiZnhcIj09PWEmJlwiaW5wcm9ncmVzc1wiIT09Y1swXSYmci5kZXF1ZXVlKHRoaXMsYSl9KX0sZGVxdWV1ZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ci5kZXF1ZXVlKHRoaXMsYSl9KX0sY2xlYXJRdWV1ZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5xdWV1ZShhfHxcImZ4XCIsW10pfSxwcm9taXNlOmZ1bmN0aW9uKGEsYil7dmFyIGMsZD0xLGU9ci5EZWZlcnJlZCgpLGY9dGhpcyxnPXRoaXMubGVuZ3RoLGg9ZnVuY3Rpb24oKXstLWR8fGUucmVzb2x2ZVdpdGgoZixbZl0pfTtcInN0cmluZ1wiIT10eXBlb2YgYSYmKGI9YSxhPXZvaWQgMCksYT1hfHxcImZ4XCI7d2hpbGUoZy0tKWM9Vi5nZXQoZltnXSxhK1wicXVldWVIb29rc1wiKSxjJiZjLmVtcHR5JiYoZCsrLGMuZW1wdHkuYWRkKGgpKTtyZXR1cm4gaCgpLGUucHJvbWlzZShiKX19KTt2YXIgXz0vWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLy5zb3VyY2UsYWE9bmV3IFJlZ0V4cChcIl4oPzooWystXSk9fCkoXCIrXytcIikoW2EteiVdKikkXCIsXCJpXCIpLGJhPVtcIlRvcFwiLFwiUmlnaHRcIixcIkJvdHRvbVwiLFwiTGVmdFwiXSxjYT1mdW5jdGlvbihhLGIpe3JldHVybiBhPWJ8fGEsXCJub25lXCI9PT1hLnN0eWxlLmRpc3BsYXl8fFwiXCI9PT1hLnN0eWxlLmRpc3BsYXkmJnIuY29udGFpbnMoYS5vd25lckRvY3VtZW50LGEpJiZcIm5vbmVcIj09PXIuY3NzKGEsXCJkaXNwbGF5XCIpfSxkYT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZSxmLGc9e307Zm9yKGYgaW4gYilnW2ZdPWEuc3R5bGVbZl0sYS5zdHlsZVtmXT1iW2ZdO2U9Yy5hcHBseShhLGR8fFtdKTtmb3IoZiBpbiBiKWEuc3R5bGVbZl09Z1tmXTtyZXR1cm4gZX07ZnVuY3Rpb24gZWEoYSxiLGMsZCl7dmFyIGUsZj0xLGc9MjAsaD1kP2Z1bmN0aW9uKCl7cmV0dXJuIGQuY3VyKCl9OmZ1bmN0aW9uKCl7cmV0dXJuIHIuY3NzKGEsYixcIlwiKX0saT1oKCksaj1jJiZjWzNdfHwoci5jc3NOdW1iZXJbYl0/XCJcIjpcInB4XCIpLGs9KHIuY3NzTnVtYmVyW2JdfHxcInB4XCIhPT1qJiYraSkmJmFhLmV4ZWMoci5jc3MoYSxiKSk7aWYoayYma1szXSE9PWope2o9anx8a1szXSxjPWN8fFtdLGs9K2l8fDE7ZG8gZj1mfHxcIi41XCIsay89ZixyLnN0eWxlKGEsYixrK2opO3doaWxlKGYhPT0oZj1oKCkvaSkmJjEhPT1mJiYtLWcpfXJldHVybiBjJiYoaz0ra3x8K2l8fDAsZT1jWzFdP2srKGNbMV0rMSkqY1syXTorY1syXSxkJiYoZC51bml0PWosZC5zdGFydD1rLGQuZW5kPWUpKSxlfXZhciBmYT17fTtmdW5jdGlvbiBnYShhKXt2YXIgYixjPWEub3duZXJEb2N1bWVudCxkPWEubm9kZU5hbWUsZT1mYVtkXTtyZXR1cm4gZT9lOihiPWMuYm9keS5hcHBlbmRDaGlsZChjLmNyZWF0ZUVsZW1lbnQoZCkpLGU9ci5jc3MoYixcImRpc3BsYXlcIiksYi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpLFwibm9uZVwiPT09ZSYmKGU9XCJibG9ja1wiKSxmYVtkXT1lLGUpfWZ1bmN0aW9uIGhhKGEsYil7Zm9yKHZhciBjLGQsZT1bXSxmPTAsZz1hLmxlbmd0aDtmPGc7ZisrKWQ9YVtmXSxkLnN0eWxlJiYoYz1kLnN0eWxlLmRpc3BsYXksYj8oXCJub25lXCI9PT1jJiYoZVtmXT1WLmdldChkLFwiZGlzcGxheVwiKXx8bnVsbCxlW2ZdfHwoZC5zdHlsZS5kaXNwbGF5PVwiXCIpKSxcIlwiPT09ZC5zdHlsZS5kaXNwbGF5JiZjYShkKSYmKGVbZl09Z2EoZCkpKTpcIm5vbmVcIiE9PWMmJihlW2ZdPVwibm9uZVwiLFYuc2V0KGQsXCJkaXNwbGF5XCIsYykpKTtmb3IoZj0wO2Y8ZztmKyspbnVsbCE9ZVtmXSYmKGFbZl0uc3R5bGUuZGlzcGxheT1lW2ZdKTtyZXR1cm4gYX1yLmZuLmV4dGVuZCh7c2hvdzpmdW5jdGlvbigpe3JldHVybiBoYSh0aGlzLCEwKX0saGlkZTpmdW5jdGlvbigpe3JldHVybiBoYSh0aGlzKX0sdG9nZ2xlOmZ1bmN0aW9uKGEpe3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgYT9hP3RoaXMuc2hvdygpOnRoaXMuaGlkZSgpOnRoaXMuZWFjaChmdW5jdGlvbigpe2NhKHRoaXMpP3IodGhpcykuc2hvdygpOnIodGhpcykuaGlkZSgpfSl9fSk7dmFyIGlhPS9eKD86Y2hlY2tib3h8cmFkaW8pJC9pLGphPS88KFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKykvaSxrYT0vXiR8XFwvKD86amF2YXxlY21hKXNjcmlwdC9pLGxhPXtvcHRpb246WzEsXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsXCI8L3NlbGVjdD5cIl0sdGhlYWQ6WzEsXCI8dGFibGU+XCIsXCI8L3RhYmxlPlwiXSxjb2w6WzIsXCI8dGFibGU+PGNvbGdyb3VwPlwiLFwiPC9jb2xncm91cD48L3RhYmxlPlwiXSx0cjpbMixcIjx0YWJsZT48dGJvZHk+XCIsXCI8L3Rib2R5PjwvdGFibGU+XCJdLHRkOlszLFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsXCI8L3RyPjwvdGJvZHk+PC90YWJsZT5cIl0sX2RlZmF1bHQ6WzAsXCJcIixcIlwiXX07bGEub3B0Z3JvdXA9bGEub3B0aW9uLGxhLnRib2R5PWxhLnRmb290PWxhLmNvbGdyb3VwPWxhLmNhcHRpb249bGEudGhlYWQsbGEudGg9bGEudGQ7ZnVuY3Rpb24gbWEoYSxiKXt2YXIgYztyZXR1cm4gYz1cInVuZGVmaW5lZFwiIT10eXBlb2YgYS5nZXRFbGVtZW50c0J5VGFnTmFtZT9hLmdldEVsZW1lbnRzQnlUYWdOYW1lKGJ8fFwiKlwiKTpcInVuZGVmaW5lZFwiIT10eXBlb2YgYS5xdWVyeVNlbGVjdG9yQWxsP2EucXVlcnlTZWxlY3RvckFsbChifHxcIipcIik6W10sdm9pZCAwPT09Ynx8YiYmci5ub2RlTmFtZShhLGIpP3IubWVyZ2UoW2FdLGMpOmN9ZnVuY3Rpb24gbmEoYSxiKXtmb3IodmFyIGM9MCxkPWEubGVuZ3RoO2M8ZDtjKyspVi5zZXQoYVtjXSxcImdsb2JhbEV2YWxcIiwhYnx8Vi5nZXQoYltjXSxcImdsb2JhbEV2YWxcIikpfXZhciBvYT0vPHwmIz9cXHcrOy87ZnVuY3Rpb24gcGEoYSxiLGMsZCxlKXtmb3IodmFyIGYsZyxoLGksaixrLGw9Yi5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksbT1bXSxuPTAsbz1hLmxlbmd0aDtuPG87bisrKWlmKGY9YVtuXSxmfHwwPT09ZilpZihcIm9iamVjdFwiPT09ci50eXBlKGYpKXIubWVyZ2UobSxmLm5vZGVUeXBlP1tmXTpmKTtlbHNlIGlmKG9hLnRlc3QoZikpe2c9Z3x8bC5hcHBlbmRDaGlsZChiLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLGg9KGphLmV4ZWMoZil8fFtcIlwiLFwiXCJdKVsxXS50b0xvd2VyQ2FzZSgpLGk9bGFbaF18fGxhLl9kZWZhdWx0LGcuaW5uZXJIVE1MPWlbMV0rci5odG1sUHJlZmlsdGVyKGYpK2lbMl0saz1pWzBdO3doaWxlKGstLSlnPWcubGFzdENoaWxkO3IubWVyZ2UobSxnLmNoaWxkTm9kZXMpLGc9bC5maXJzdENoaWxkLGcudGV4dENvbnRlbnQ9XCJcIn1lbHNlIG0ucHVzaChiLmNyZWF0ZVRleHROb2RlKGYpKTtsLnRleHRDb250ZW50PVwiXCIsbj0wO3doaWxlKGY9bVtuKytdKWlmKGQmJnIuaW5BcnJheShmLGQpPi0xKWUmJmUucHVzaChmKTtlbHNlIGlmKGo9ci5jb250YWlucyhmLm93bmVyRG9jdW1lbnQsZiksZz1tYShsLmFwcGVuZENoaWxkKGYpLFwic2NyaXB0XCIpLGomJm5hKGcpLGMpe2s9MDt3aGlsZShmPWdbaysrXSlrYS50ZXN0KGYudHlwZXx8XCJcIikmJmMucHVzaChmKX1yZXR1cm4gbH0hZnVuY3Rpb24oKXt2YXIgYT1kLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxiPWEuYXBwZW5kQ2hpbGQoZC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKSxjPWQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO2Muc2V0QXR0cmlidXRlKFwidHlwZVwiLFwicmFkaW9cIiksYy5zZXRBdHRyaWJ1dGUoXCJjaGVja2VkXCIsXCJjaGVja2VkXCIpLGMuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwidFwiKSxiLmFwcGVuZENoaWxkKGMpLG8uY2hlY2tDbG9uZT1iLmNsb25lTm9kZSghMCkuY2xvbmVOb2RlKCEwKS5sYXN0Q2hpbGQuY2hlY2tlZCxiLmlubmVySFRNTD1cIjx0ZXh0YXJlYT54PC90ZXh0YXJlYT5cIixvLm5vQ2xvbmVDaGVja2VkPSEhYi5jbG9uZU5vZGUoITApLmxhc3RDaGlsZC5kZWZhdWx0VmFsdWV9KCk7dmFyIHFhPWQuZG9jdW1lbnRFbGVtZW50LHJhPS9ea2V5LyxzYT0vXig/Om1vdXNlfHBvaW50ZXJ8Y29udGV4dG1lbnV8ZHJhZ3xkcm9wKXxjbGljay8sdGE9L14oW14uXSopKD86XFwuKC4rKXwpLztmdW5jdGlvbiB1YSgpe3JldHVybiEwfWZ1bmN0aW9uIHZhKCl7cmV0dXJuITF9ZnVuY3Rpb24gd2EoKXt0cnl7cmV0dXJuIGQuYWN0aXZlRWxlbWVudH1jYXRjaChhKXt9fWZ1bmN0aW9uIHhhKGEsYixjLGQsZSxmKXt2YXIgZyxoO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBiKXtcInN0cmluZ1wiIT10eXBlb2YgYyYmKGQ9ZHx8YyxjPXZvaWQgMCk7Zm9yKGggaW4gYil4YShhLGgsYyxkLGJbaF0sZik7cmV0dXJuIGF9aWYobnVsbD09ZCYmbnVsbD09ZT8oZT1jLGQ9Yz12b2lkIDApOm51bGw9PWUmJihcInN0cmluZ1wiPT10eXBlb2YgYz8oZT1kLGQ9dm9pZCAwKTooZT1kLGQ9YyxjPXZvaWQgMCkpLGU9PT0hMSllPXZhO2Vsc2UgaWYoIWUpcmV0dXJuIGE7cmV0dXJuIDE9PT1mJiYoZz1lLGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHIoKS5vZmYoYSksZy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGUuZ3VpZD1nLmd1aWR8fChnLmd1aWQ9ci5ndWlkKyspKSxhLmVhY2goZnVuY3Rpb24oKXtyLmV2ZW50LmFkZCh0aGlzLGIsZSxkLGMpfSl9ci5ldmVudD17Z2xvYmFsOnt9LGFkZDpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmLGcsaCxpLGosayxsLG0sbixvLHAscT1WLmdldChhKTtpZihxKXtjLmhhbmRsZXImJihmPWMsYz1mLmhhbmRsZXIsZT1mLnNlbGVjdG9yKSxlJiZyLmZpbmQubWF0Y2hlc1NlbGVjdG9yKHFhLGUpLGMuZ3VpZHx8KGMuZ3VpZD1yLmd1aWQrKyksKGk9cS5ldmVudHMpfHwoaT1xLmV2ZW50cz17fSksKGc9cS5oYW5kbGUpfHwoZz1xLmhhbmRsZT1mdW5jdGlvbihiKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgciYmci5ldmVudC50cmlnZ2VyZWQhPT1iLnR5cGU/ci5ldmVudC5kaXNwYXRjaC5hcHBseShhLGFyZ3VtZW50cyk6dm9pZCAwfSksYj0oYnx8XCJcIikubWF0Y2goSyl8fFtcIlwiXSxqPWIubGVuZ3RoO3doaWxlKGotLSloPXRhLmV4ZWMoYltqXSl8fFtdLG49cD1oWzFdLG89KGhbMl18fFwiXCIpLnNwbGl0KFwiLlwiKS5zb3J0KCksbiYmKGw9ci5ldmVudC5zcGVjaWFsW25dfHx7fSxuPShlP2wuZGVsZWdhdGVUeXBlOmwuYmluZFR5cGUpfHxuLGw9ci5ldmVudC5zcGVjaWFsW25dfHx7fSxrPXIuZXh0ZW5kKHt0eXBlOm4sb3JpZ1R5cGU6cCxkYXRhOmQsaGFuZGxlcjpjLGd1aWQ6Yy5ndWlkLHNlbGVjdG9yOmUsbmVlZHNDb250ZXh0OmUmJnIuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdChlKSxuYW1lc3BhY2U6by5qb2luKFwiLlwiKX0sZiksKG09aVtuXSl8fChtPWlbbl09W10sbS5kZWxlZ2F0ZUNvdW50PTAsbC5zZXR1cCYmbC5zZXR1cC5jYWxsKGEsZCxvLGcpIT09ITF8fGEuYWRkRXZlbnRMaXN0ZW5lciYmYS5hZGRFdmVudExpc3RlbmVyKG4sZykpLGwuYWRkJiYobC5hZGQuY2FsbChhLGspLGsuaGFuZGxlci5ndWlkfHwoay5oYW5kbGVyLmd1aWQ9Yy5ndWlkKSksZT9tLnNwbGljZShtLmRlbGVnYXRlQ291bnQrKywwLGspOm0ucHVzaChrKSxyLmV2ZW50Lmdsb2JhbFtuXT0hMCl9fSxyZW1vdmU6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZixnLGgsaSxqLGssbCxtLG4sbyxwLHE9Vi5oYXNEYXRhKGEpJiZWLmdldChhKTtpZihxJiYoaT1xLmV2ZW50cykpe2I9KGJ8fFwiXCIpLm1hdGNoKEspfHxbXCJcIl0saj1iLmxlbmd0aDt3aGlsZShqLS0paWYoaD10YS5leGVjKGJbal0pfHxbXSxuPXA9aFsxXSxvPShoWzJdfHxcIlwiKS5zcGxpdChcIi5cIikuc29ydCgpLG4pe2w9ci5ldmVudC5zcGVjaWFsW25dfHx7fSxuPShkP2wuZGVsZWdhdGVUeXBlOmwuYmluZFR5cGUpfHxuLG09aVtuXXx8W10saD1oWzJdJiZuZXcgUmVnRXhwKFwiKF58XFxcXC4pXCIrby5qb2luKFwiXFxcXC4oPzouKlxcXFwufClcIikrXCIoXFxcXC58JClcIiksZz1mPW0ubGVuZ3RoO3doaWxlKGYtLSlrPW1bZl0sIWUmJnAhPT1rLm9yaWdUeXBlfHxjJiZjLmd1aWQhPT1rLmd1aWR8fGgmJiFoLnRlc3Qoay5uYW1lc3BhY2UpfHxkJiZkIT09ay5zZWxlY3RvciYmKFwiKipcIiE9PWR8fCFrLnNlbGVjdG9yKXx8KG0uc3BsaWNlKGYsMSksay5zZWxlY3RvciYmbS5kZWxlZ2F0ZUNvdW50LS0sbC5yZW1vdmUmJmwucmVtb3ZlLmNhbGwoYSxrKSk7ZyYmIW0ubGVuZ3RoJiYobC50ZWFyZG93biYmbC50ZWFyZG93bi5jYWxsKGEsbyxxLmhhbmRsZSkhPT0hMXx8ci5yZW1vdmVFdmVudChhLG4scS5oYW5kbGUpLGRlbGV0ZSBpW25dKX1lbHNlIGZvcihuIGluIGkpci5ldmVudC5yZW1vdmUoYSxuK2Jbal0sYyxkLCEwKTtyLmlzRW1wdHlPYmplY3QoaSkmJlYucmVtb3ZlKGEsXCJoYW5kbGUgZXZlbnRzXCIpfX0sZGlzcGF0Y2g6ZnVuY3Rpb24oYSl7dmFyIGI9ci5ldmVudC5maXgoYSksYyxkLGUsZixnLGgsaT1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCksaj0oVi5nZXQodGhpcyxcImV2ZW50c1wiKXx8e30pW2IudHlwZV18fFtdLGs9ci5ldmVudC5zcGVjaWFsW2IudHlwZV18fHt9O2ZvcihpWzBdPWIsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspaVtjXT1hcmd1bWVudHNbY107aWYoYi5kZWxlZ2F0ZVRhcmdldD10aGlzLCFrLnByZURpc3BhdGNofHxrLnByZURpc3BhdGNoLmNhbGwodGhpcyxiKSE9PSExKXtoPXIuZXZlbnQuaGFuZGxlcnMuY2FsbCh0aGlzLGIsaiksYz0wO3doaWxlKChmPWhbYysrXSkmJiFiLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpe2IuY3VycmVudFRhcmdldD1mLmVsZW0sZD0wO3doaWxlKChnPWYuaGFuZGxlcnNbZCsrXSkmJiFiLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCkpYi5ybmFtZXNwYWNlJiYhYi5ybmFtZXNwYWNlLnRlc3QoZy5uYW1lc3BhY2UpfHwoYi5oYW5kbGVPYmo9ZyxiLmRhdGE9Zy5kYXRhLGU9KChyLmV2ZW50LnNwZWNpYWxbZy5vcmlnVHlwZV18fHt9KS5oYW5kbGV8fGcuaGFuZGxlcikuYXBwbHkoZi5lbGVtLGkpLHZvaWQgMCE9PWUmJihiLnJlc3VsdD1lKT09PSExJiYoYi5wcmV2ZW50RGVmYXVsdCgpLGIuc3RvcFByb3BhZ2F0aW9uKCkpKX1yZXR1cm4gay5wb3N0RGlzcGF0Y2gmJmsucG9zdERpc3BhdGNoLmNhbGwodGhpcyxiKSxiLnJlc3VsdH19LGhhbmRsZXJzOmZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGYsZyxoPVtdLGk9Yi5kZWxlZ2F0ZUNvdW50LGo9YS50YXJnZXQ7aWYoaSYmai5ub2RlVHlwZSYmIShcImNsaWNrXCI9PT1hLnR5cGUmJmEuYnV0dG9uPj0xKSlmb3IoO2ohPT10aGlzO2o9ai5wYXJlbnROb2RlfHx0aGlzKWlmKDE9PT1qLm5vZGVUeXBlJiYoXCJjbGlja1wiIT09YS50eXBlfHxqLmRpc2FibGVkIT09ITApKXtmb3IoZj1bXSxnPXt9LGM9MDtjPGk7YysrKWQ9YltjXSxlPWQuc2VsZWN0b3IrXCIgXCIsdm9pZCAwPT09Z1tlXSYmKGdbZV09ZC5uZWVkc0NvbnRleHQ/cihlLHRoaXMpLmluZGV4KGopPi0xOnIuZmluZChlLHRoaXMsbnVsbCxbal0pLmxlbmd0aCksZ1tlXSYmZi5wdXNoKGQpO2YubGVuZ3RoJiZoLnB1c2goe2VsZW06aixoYW5kbGVyczpmfSl9cmV0dXJuIGo9dGhpcyxpPGIubGVuZ3RoJiZoLnB1c2goe2VsZW06aixoYW5kbGVyczpiLnNsaWNlKGkpfSksaH0sYWRkUHJvcDpmdW5jdGlvbihhLGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLkV2ZW50LnByb3RvdHlwZSxhLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ci5pc0Z1bmN0aW9uKGIpP2Z1bmN0aW9uKCl7aWYodGhpcy5vcmlnaW5hbEV2ZW50KXJldHVybiBiKHRoaXMub3JpZ2luYWxFdmVudCl9OmZ1bmN0aW9uKCl7aWYodGhpcy5vcmlnaW5hbEV2ZW50KXJldHVybiB0aGlzLm9yaWdpbmFsRXZlbnRbYV19LHNldDpmdW5jdGlvbihiKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxhLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTpifSl9fSl9LGZpeDpmdW5jdGlvbihhKXtyZXR1cm4gYVtyLmV4cGFuZG9dP2E6bmV3IHIuRXZlbnQoYSl9LHNwZWNpYWw6e2xvYWQ6e25vQnViYmxlOiEwfSxmb2N1czp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKHRoaXMhPT13YSgpJiZ0aGlzLmZvY3VzKXJldHVybiB0aGlzLmZvY3VzKCksITF9LGRlbGVnYXRlVHlwZTpcImZvY3VzaW5cIn0sYmx1cjp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKHRoaXM9PT13YSgpJiZ0aGlzLmJsdXIpcmV0dXJuIHRoaXMuYmx1cigpLCExfSxkZWxlZ2F0ZVR5cGU6XCJmb2N1c291dFwifSxjbGljazp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKFwiY2hlY2tib3hcIj09PXRoaXMudHlwZSYmdGhpcy5jbGljayYmci5ub2RlTmFtZSh0aGlzLFwiaW5wdXRcIikpcmV0dXJuIHRoaXMuY2xpY2soKSwhMX0sX2RlZmF1bHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHIubm9kZU5hbWUoYS50YXJnZXQsXCJhXCIpfX0sYmVmb3JldW5sb2FkOntwb3N0RGlzcGF0Y2g6ZnVuY3Rpb24oYSl7dm9pZCAwIT09YS5yZXN1bHQmJmEub3JpZ2luYWxFdmVudCYmKGEub3JpZ2luYWxFdmVudC5yZXR1cm5WYWx1ZT1hLnJlc3VsdCl9fX19LHIucmVtb3ZlRXZlbnQ9ZnVuY3Rpb24oYSxiLGMpe2EucmVtb3ZlRXZlbnRMaXN0ZW5lciYmYS5yZW1vdmVFdmVudExpc3RlbmVyKGIsYyl9LHIuRXZlbnQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIHIuRXZlbnQ/KGEmJmEudHlwZT8odGhpcy5vcmlnaW5hbEV2ZW50PWEsdGhpcy50eXBlPWEudHlwZSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1hLmRlZmF1bHRQcmV2ZW50ZWR8fHZvaWQgMD09PWEuZGVmYXVsdFByZXZlbnRlZCYmYS5yZXR1cm5WYWx1ZT09PSExP3VhOnZhLHRoaXMudGFyZ2V0PWEudGFyZ2V0JiYzPT09YS50YXJnZXQubm9kZVR5cGU/YS50YXJnZXQucGFyZW50Tm9kZTphLnRhcmdldCx0aGlzLmN1cnJlbnRUYXJnZXQ9YS5jdXJyZW50VGFyZ2V0LHRoaXMucmVsYXRlZFRhcmdldD1hLnJlbGF0ZWRUYXJnZXQpOnRoaXMudHlwZT1hLGImJnIuZXh0ZW5kKHRoaXMsYiksdGhpcy50aW1lU3RhbXA9YSYmYS50aW1lU3RhbXB8fHIubm93KCksdm9pZCh0aGlzW3IuZXhwYW5kb109ITApKTpuZXcgci5FdmVudChhLGIpfSxyLkV2ZW50LnByb3RvdHlwZT17Y29uc3RydWN0b3I6ci5FdmVudCxpc0RlZmF1bHRQcmV2ZW50ZWQ6dmEsaXNQcm9wYWdhdGlvblN0b3BwZWQ6dmEsaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6dmEsaXNTaW11bGF0ZWQ6ITEscHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9dWEsYSYmIXRoaXMuaXNTaW11bGF0ZWQmJmEucHJldmVudERlZmF1bHQoKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dWEsYSYmIXRoaXMuaXNTaW11bGF0ZWQmJmEuc3RvcFByb3BhZ2F0aW9uKCl9LHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMub3JpZ2luYWxFdmVudDt0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkPXVhLGEmJiF0aGlzLmlzU2ltdWxhdGVkJiZhLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLHRoaXMuc3RvcFByb3BhZ2F0aW9uKCl9fSxyLmVhY2goe2FsdEtleTohMCxidWJibGVzOiEwLGNhbmNlbGFibGU6ITAsY2hhbmdlZFRvdWNoZXM6ITAsY3RybEtleTohMCxkZXRhaWw6ITAsZXZlbnRQaGFzZTohMCxtZXRhS2V5OiEwLHBhZ2VYOiEwLHBhZ2VZOiEwLHNoaWZ0S2V5OiEwLHZpZXc6ITAsXCJjaGFyXCI6ITAsY2hhckNvZGU6ITAsa2V5OiEwLGtleUNvZGU6ITAsYnV0dG9uOiEwLGJ1dHRvbnM6ITAsY2xpZW50WDohMCxjbGllbnRZOiEwLG9mZnNldFg6ITAsb2Zmc2V0WTohMCxwb2ludGVySWQ6ITAscG9pbnRlclR5cGU6ITAsc2NyZWVuWDohMCxzY3JlZW5ZOiEwLHRhcmdldFRvdWNoZXM6ITAsdG9FbGVtZW50OiEwLHRvdWNoZXM6ITAsd2hpY2g6ZnVuY3Rpb24oYSl7dmFyIGI9YS5idXR0b247cmV0dXJuIG51bGw9PWEud2hpY2gmJnJhLnRlc3QoYS50eXBlKT9udWxsIT1hLmNoYXJDb2RlP2EuY2hhckNvZGU6YS5rZXlDb2RlOiFhLndoaWNoJiZ2b2lkIDAhPT1iJiZzYS50ZXN0KGEudHlwZSk/MSZiPzE6MiZiPzM6NCZiPzI6MDphLndoaWNofX0sci5ldmVudC5hZGRQcm9wKSxyLmVhY2goe21vdXNlZW50ZXI6XCJtb3VzZW92ZXJcIixtb3VzZWxlYXZlOlwibW91c2VvdXRcIixwb2ludGVyZW50ZXI6XCJwb2ludGVyb3ZlclwiLHBvaW50ZXJsZWF2ZTpcInBvaW50ZXJvdXRcIn0sZnVuY3Rpb24oYSxiKXtyLmV2ZW50LnNwZWNpYWxbYV09e2RlbGVnYXRlVHlwZTpiLGJpbmRUeXBlOmIsaGFuZGxlOmZ1bmN0aW9uKGEpe3ZhciBjLGQ9dGhpcyxlPWEucmVsYXRlZFRhcmdldCxmPWEuaGFuZGxlT2JqO3JldHVybiBlJiYoZT09PWR8fHIuY29udGFpbnMoZCxlKSl8fChhLnR5cGU9Zi5vcmlnVHlwZSxjPWYuaGFuZGxlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksYS50eXBlPWIpLGN9fX0pLHIuZm4uZXh0ZW5kKHtvbjpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4geGEodGhpcyxhLGIsYyxkKX0sb25lOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiB4YSh0aGlzLGEsYixjLGQsMSl9LG9mZjpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZTtpZihhJiZhLnByZXZlbnREZWZhdWx0JiZhLmhhbmRsZU9iailyZXR1cm4gZD1hLmhhbmRsZU9iaixyKGEuZGVsZWdhdGVUYXJnZXQpLm9mZihkLm5hbWVzcGFjZT9kLm9yaWdUeXBlK1wiLlwiK2QubmFtZXNwYWNlOmQub3JpZ1R5cGUsZC5zZWxlY3RvcixkLmhhbmRsZXIpLHRoaXM7aWYoXCJvYmplY3RcIj09dHlwZW9mIGEpe2ZvcihlIGluIGEpdGhpcy5vZmYoZSxiLGFbZV0pO3JldHVybiB0aGlzfXJldHVybiBiIT09ITEmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGJ8fChjPWIsYj12b2lkIDApLGM9PT0hMSYmKGM9dmEpLHRoaXMuZWFjaChmdW5jdGlvbigpe3IuZXZlbnQucmVtb3ZlKHRoaXMsYSxjLGIpfSl9fSk7dmFyIHlhPS88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKilbXj5dKilcXC8+L2dpLHphPS88c2NyaXB0fDxzdHlsZXw8bGluay9pLEFhPS9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksQmE9L150cnVlXFwvKC4qKS8sQ2E9L15cXHMqPCEoPzpcXFtDREFUQVxcW3wtLSl8KD86XFxdXFxdfC0tKT5cXHMqJC9nO2Z1bmN0aW9uIERhKGEsYil7cmV0dXJuIHIubm9kZU5hbWUoYSxcInRhYmxlXCIpJiZyLm5vZGVOYW1lKDExIT09Yi5ub2RlVHlwZT9iOmIuZmlyc3RDaGlsZCxcInRyXCIpP2EuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ0Ym9keVwiKVswXXx8YTphfWZ1bmN0aW9uIEVhKGEpe3JldHVybiBhLnR5cGU9KG51bGwhPT1hLmdldEF0dHJpYnV0ZShcInR5cGVcIikpK1wiL1wiK2EudHlwZSxhfWZ1bmN0aW9uIEZhKGEpe3ZhciBiPUJhLmV4ZWMoYS50eXBlKTtyZXR1cm4gYj9hLnR5cGU9YlsxXTphLnJlbW92ZUF0dHJpYnV0ZShcInR5cGVcIiksYX1mdW5jdGlvbiBHYShhLGIpe3ZhciBjLGQsZSxmLGcsaCxpLGo7aWYoMT09PWIubm9kZVR5cGUpe2lmKFYuaGFzRGF0YShhKSYmKGY9Vi5hY2Nlc3MoYSksZz1WLnNldChiLGYpLGo9Zi5ldmVudHMpKXtkZWxldGUgZy5oYW5kbGUsZy5ldmVudHM9e307Zm9yKGUgaW4gailmb3IoYz0wLGQ9altlXS5sZW5ndGg7YzxkO2MrKylyLmV2ZW50LmFkZChiLGUsaltlXVtjXSl9Vy5oYXNEYXRhKGEpJiYoaD1XLmFjY2VzcyhhKSxpPXIuZXh0ZW5kKHt9LGgpLFcuc2V0KGIsaSkpfX1mdW5jdGlvbiBIYShhLGIpe3ZhciBjPWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcImlucHV0XCI9PT1jJiZpYS50ZXN0KGEudHlwZSk/Yi5jaGVja2VkPWEuY2hlY2tlZDpcImlucHV0XCIhPT1jJiZcInRleHRhcmVhXCIhPT1jfHwoYi5kZWZhdWx0VmFsdWU9YS5kZWZhdWx0VmFsdWUpfWZ1bmN0aW9uIElhKGEsYixjLGQpe2I9Zy5hcHBseShbXSxiKTt2YXIgZSxmLGgsaSxqLGssbD0wLG09YS5sZW5ndGgsbj1tLTEscT1iWzBdLHM9ci5pc0Z1bmN0aW9uKHEpO2lmKHN8fG0+MSYmXCJzdHJpbmdcIj09dHlwZW9mIHEmJiFvLmNoZWNrQ2xvbmUmJkFhLnRlc3QocSkpcmV0dXJuIGEuZWFjaChmdW5jdGlvbihlKXt2YXIgZj1hLmVxKGUpO3MmJihiWzBdPXEuY2FsbCh0aGlzLGUsZi5odG1sKCkpKSxJYShmLGIsYyxkKX0pO2lmKG0mJihlPXBhKGIsYVswXS5vd25lckRvY3VtZW50LCExLGEsZCksZj1lLmZpcnN0Q2hpbGQsMT09PWUuY2hpbGROb2Rlcy5sZW5ndGgmJihlPWYpLGZ8fGQpKXtmb3IoaD1yLm1hcChtYShlLFwic2NyaXB0XCIpLEVhKSxpPWgubGVuZ3RoO2w8bTtsKyspaj1lLGwhPT1uJiYoaj1yLmNsb25lKGosITAsITApLGkmJnIubWVyZ2UoaCxtYShqLFwic2NyaXB0XCIpKSksYy5jYWxsKGFbbF0saixsKTtpZihpKWZvcihrPWhbaC5sZW5ndGgtMV0ub3duZXJEb2N1bWVudCxyLm1hcChoLEZhKSxsPTA7bDxpO2wrKylqPWhbbF0sa2EudGVzdChqLnR5cGV8fFwiXCIpJiYhVi5hY2Nlc3MoaixcImdsb2JhbEV2YWxcIikmJnIuY29udGFpbnMoayxqKSYmKGouc3JjP3IuX2V2YWxVcmwmJnIuX2V2YWxVcmwoai5zcmMpOnAoai50ZXh0Q29udGVudC5yZXBsYWNlKENhLFwiXCIpLGspKX1yZXR1cm4gYX1mdW5jdGlvbiBKYShhLGIsYyl7Zm9yKHZhciBkLGU9Yj9yLmZpbHRlcihiLGEpOmEsZj0wO251bGwhPShkPWVbZl0pO2YrKyljfHwxIT09ZC5ub2RlVHlwZXx8ci5jbGVhbkRhdGEobWEoZCkpLGQucGFyZW50Tm9kZSYmKGMmJnIuY29udGFpbnMoZC5vd25lckRvY3VtZW50LGQpJiZuYShtYShkLFwic2NyaXB0XCIpKSxkLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZCkpO3JldHVybiBhfXIuZXh0ZW5kKHtodG1sUHJlZmlsdGVyOmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UoeWEsXCI8JDE+PC8kMj5cIil9LGNsb25lOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGYsZyxoPWEuY2xvbmVOb2RlKCEwKSxpPXIuY29udGFpbnMoYS5vd25lckRvY3VtZW50LGEpO2lmKCEoby5ub0Nsb25lQ2hlY2tlZHx8MSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZXx8ci5pc1hNTERvYyhhKSkpZm9yKGc9bWEoaCksZj1tYShhKSxkPTAsZT1mLmxlbmd0aDtkPGU7ZCsrKUhhKGZbZF0sZ1tkXSk7aWYoYilpZihjKWZvcihmPWZ8fG1hKGEpLGc9Z3x8bWEoaCksZD0wLGU9Zi5sZW5ndGg7ZDxlO2QrKylHYShmW2RdLGdbZF0pO2Vsc2UgR2EoYSxoKTtyZXR1cm4gZz1tYShoLFwic2NyaXB0XCIpLGcubGVuZ3RoPjAmJm5hKGcsIWkmJm1hKGEsXCJzY3JpcHRcIikpLGh9LGNsZWFuRGF0YTpmdW5jdGlvbihhKXtmb3IodmFyIGIsYyxkLGU9ci5ldmVudC5zcGVjaWFsLGY9MDt2b2lkIDAhPT0oYz1hW2ZdKTtmKyspaWYoVChjKSl7aWYoYj1jW1YuZXhwYW5kb10pe2lmKGIuZXZlbnRzKWZvcihkIGluIGIuZXZlbnRzKWVbZF0/ci5ldmVudC5yZW1vdmUoYyxkKTpyLnJlbW92ZUV2ZW50KGMsZCxiLmhhbmRsZSk7Y1tWLmV4cGFuZG9dPXZvaWQgMH1jW1cuZXhwYW5kb10mJihjW1cuZXhwYW5kb109dm9pZCAwKX19fSksci5mbi5leHRlbmQoe2RldGFjaDpmdW5jdGlvbihhKXtyZXR1cm4gSmEodGhpcyxhLCEwKX0scmVtb3ZlOmZ1bmN0aW9uKGEpe3JldHVybiBKYSh0aGlzLGEpfSx0ZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBTKHRoaXMsZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWE/ci50ZXh0KHRoaXMpOnRoaXMuZW1wdHkoKS5lYWNoKGZ1bmN0aW9uKCl7MSE9PXRoaXMubm9kZVR5cGUmJjExIT09dGhpcy5ub2RlVHlwZSYmOSE9PXRoaXMubm9kZVR5cGV8fCh0aGlzLnRleHRDb250ZW50PWEpfSl9LG51bGwsYSxhcmd1bWVudHMubGVuZ3RoKX0sYXBwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIElhKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGEpe2lmKDE9PT10aGlzLm5vZGVUeXBlfHwxMT09PXRoaXMubm9kZVR5cGV8fDk9PT10aGlzLm5vZGVUeXBlKXt2YXIgYj1EYSh0aGlzLGEpO2IuYXBwZW5kQ2hpbGQoYSl9fSl9LHByZXBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gSWEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYSl7aWYoMT09PXRoaXMubm9kZVR5cGV8fDExPT09dGhpcy5ub2RlVHlwZXx8OT09PXRoaXMubm9kZVR5cGUpe3ZhciBiPURhKHRoaXMsYSk7Yi5pbnNlcnRCZWZvcmUoYSxiLmZpcnN0Q2hpbGQpfX0pfSxiZWZvcmU6ZnVuY3Rpb24oKXtyZXR1cm4gSWEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYSl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsdGhpcyl9KX0sYWZ0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gSWEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYSl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsdGhpcy5uZXh0U2libGluZyl9KX0sZW1wdHk6ZnVuY3Rpb24oKXtmb3IodmFyIGEsYj0wO251bGwhPShhPXRoaXNbYl0pO2IrKykxPT09YS5ub2RlVHlwZSYmKHIuY2xlYW5EYXRhKG1hKGEsITEpKSxhLnRleHRDb250ZW50PVwiXCIpO3JldHVybiB0aGlzfSxjbG9uZTpmdW5jdGlvbihhLGIpe3JldHVybiBhPW51bGwhPWEmJmEsYj1udWxsPT1iP2E6Yix0aGlzLm1hcChmdW5jdGlvbigpe3JldHVybiByLmNsb25lKHRoaXMsYSxiKX0pfSxodG1sOmZ1bmN0aW9uKGEpe3JldHVybiBTKHRoaXMsZnVuY3Rpb24oYSl7dmFyIGI9dGhpc1swXXx8e30sYz0wLGQ9dGhpcy5sZW5ndGg7aWYodm9pZCAwPT09YSYmMT09PWIubm9kZVR5cGUpcmV0dXJuIGIuaW5uZXJIVE1MO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBhJiYhemEudGVzdChhKSYmIWxhWyhqYS5leGVjKGEpfHxbXCJcIixcIlwiXSlbMV0udG9Mb3dlckNhc2UoKV0pe2E9ci5odG1sUHJlZmlsdGVyKGEpO3RyeXtmb3IoO2M8ZDtjKyspYj10aGlzW2NdfHx7fSwxPT09Yi5ub2RlVHlwZSYmKHIuY2xlYW5EYXRhKG1hKGIsITEpKSxiLmlubmVySFRNTD1hKTtiPTB9Y2F0Y2goZSl7fX1iJiZ0aGlzLmVtcHR5KCkuYXBwZW5kKGEpfSxudWxsLGEsYXJndW1lbnRzLmxlbmd0aCl9LHJlcGxhY2VXaXRoOmZ1bmN0aW9uKCl7dmFyIGE9W107cmV0dXJuIElhKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGIpe3ZhciBjPXRoaXMucGFyZW50Tm9kZTtyLmluQXJyYXkodGhpcyxhKTwwJiYoci5jbGVhbkRhdGEobWEodGhpcykpLGMmJmMucmVwbGFjZUNoaWxkKGIsdGhpcykpfSxhKX19KSxyLmVhY2goe2FwcGVuZFRvOlwiYXBwZW5kXCIscHJlcGVuZFRvOlwicHJlcGVuZFwiLGluc2VydEJlZm9yZTpcImJlZm9yZVwiLGluc2VydEFmdGVyOlwiYWZ0ZXJcIixyZXBsYWNlQWxsOlwicmVwbGFjZVdpdGhcIn0sZnVuY3Rpb24oYSxiKXtyLmZuW2FdPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYyxkPVtdLGU9cihhKSxmPWUubGVuZ3RoLTEsZz0wO2c8PWY7ZysrKWM9Zz09PWY/dGhpczp0aGlzLmNsb25lKCEwKSxyKGVbZ10pW2JdKGMpLGguYXBwbHkoZCxjLmdldCgpKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2soZCl9fSk7dmFyIEthPS9ebWFyZ2luLyxMYT1uZXcgUmVnRXhwKFwiXihcIitfK1wiKSg/IXB4KVthLXolXSskXCIsXCJpXCIpLE1hPWZ1bmN0aW9uKGIpe3ZhciBjPWIub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztyZXR1cm4gYyYmYy5vcGVuZXJ8fChjPWEpLGMuZ2V0Q29tcHV0ZWRTdHlsZShiKX07IWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYigpe2lmKGkpe2kuc3R5bGUuY3NzVGV4dD1cImJveC1zaXppbmc6Ym9yZGVyLWJveDtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO21hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7dG9wOjElO3dpZHRoOjUwJVwiLGkuaW5uZXJIVE1MPVwiXCIscWEuYXBwZW5kQ2hpbGQoaCk7dmFyIGI9YS5nZXRDb21wdXRlZFN0eWxlKGkpO2M9XCIxJVwiIT09Yi50b3AsZz1cIjJweFwiPT09Yi5tYXJnaW5MZWZ0LGU9XCI0cHhcIj09PWIud2lkdGgsaS5zdHlsZS5tYXJnaW5SaWdodD1cIjUwJVwiLGY9XCI0cHhcIj09PWIubWFyZ2luUmlnaHQscWEucmVtb3ZlQ2hpbGQoaCksaT1udWxsfX12YXIgYyxlLGYsZyxoPWQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxpPWQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpLnN0eWxlJiYoaS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcD1cImNvbnRlbnQtYm94XCIsaS5jbG9uZU5vZGUoITApLnN0eWxlLmJhY2tncm91bmRDbGlwPVwiXCIsby5jbGVhckNsb25lU3R5bGU9XCJjb250ZW50LWJveFwiPT09aS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCxoLnN0eWxlLmNzc1RleHQ9XCJib3JkZXI6MDt3aWR0aDo4cHg7aGVpZ2h0OjA7dG9wOjA7bGVmdDotOTk5OXB4O3BhZGRpbmc6MDttYXJnaW4tdG9wOjFweDtwb3NpdGlvbjphYnNvbHV0ZVwiLGguYXBwZW5kQ2hpbGQoaSksci5leHRlbmQobyx7cGl4ZWxQb3NpdGlvbjpmdW5jdGlvbigpe3JldHVybiBiKCksY30sYm94U2l6aW5nUmVsaWFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gYigpLGV9LHBpeGVsTWFyZ2luUmlnaHQ6ZnVuY3Rpb24oKXtyZXR1cm4gYigpLGZ9LHJlbGlhYmxlTWFyZ2luTGVmdDpmdW5jdGlvbigpe3JldHVybiBiKCksZ319KSl9KCk7ZnVuY3Rpb24gTmEoYSxiLGMpe3ZhciBkLGUsZixnLGg9YS5zdHlsZTtyZXR1cm4gYz1jfHxNYShhKSxjJiYoZz1jLmdldFByb3BlcnR5VmFsdWUoYil8fGNbYl0sXCJcIiE9PWd8fHIuY29udGFpbnMoYS5vd25lckRvY3VtZW50LGEpfHwoZz1yLnN0eWxlKGEsYikpLCFvLnBpeGVsTWFyZ2luUmlnaHQoKSYmTGEudGVzdChnKSYmS2EudGVzdChiKSYmKGQ9aC53aWR0aCxlPWgubWluV2lkdGgsZj1oLm1heFdpZHRoLGgubWluV2lkdGg9aC5tYXhXaWR0aD1oLndpZHRoPWcsZz1jLndpZHRoLGgud2lkdGg9ZCxoLm1pbldpZHRoPWUsaC5tYXhXaWR0aD1mKSksdm9pZCAwIT09Zz9nK1wiXCI6Z31mdW5jdGlvbiBPYShhLGIpe3JldHVybntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYSgpP3ZvaWQgZGVsZXRlIHRoaXMuZ2V0Oih0aGlzLmdldD1iKS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX12YXIgUGE9L14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLFFhPXtwb3NpdGlvbjpcImFic29sdXRlXCIsdmlzaWJpbGl0eTpcImhpZGRlblwiLGRpc3BsYXk6XCJibG9ja1wifSxSYT17bGV0dGVyU3BhY2luZzpcIjBcIixmb250V2VpZ2h0OlwiNDAwXCJ9LFNhPVtcIldlYmtpdFwiLFwiTW96XCIsXCJtc1wiXSxUYT1kLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGU7ZnVuY3Rpb24gVWEoYSl7aWYoYSBpbiBUYSlyZXR1cm4gYTt2YXIgYj1hWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSxjPVNhLmxlbmd0aDt3aGlsZShjLS0paWYoYT1TYVtjXStiLGEgaW4gVGEpcmV0dXJuIGF9ZnVuY3Rpb24gVmEoYSxiLGMpe3ZhciBkPWFhLmV4ZWMoYik7cmV0dXJuIGQ/TWF0aC5tYXgoMCxkWzJdLShjfHwwKSkrKGRbM118fFwicHhcIik6Yn1mdW5jdGlvbiBXYShhLGIsYyxkLGUpe3ZhciBmLGc9MDtmb3IoZj1jPT09KGQ/XCJib3JkZXJcIjpcImNvbnRlbnRcIik/NDpcIndpZHRoXCI9PT1iPzE6MDtmPDQ7Zis9MilcIm1hcmdpblwiPT09YyYmKGcrPXIuY3NzKGEsYytiYVtmXSwhMCxlKSksZD8oXCJjb250ZW50XCI9PT1jJiYoZy09ci5jc3MoYSxcInBhZGRpbmdcIitiYVtmXSwhMCxlKSksXCJtYXJnaW5cIiE9PWMmJihnLT1yLmNzcyhhLFwiYm9yZGVyXCIrYmFbZl0rXCJXaWR0aFwiLCEwLGUpKSk6KGcrPXIuY3NzKGEsXCJwYWRkaW5nXCIrYmFbZl0sITAsZSksXCJwYWRkaW5nXCIhPT1jJiYoZys9ci5jc3MoYSxcImJvcmRlclwiK2JhW2ZdK1wiV2lkdGhcIiwhMCxlKSkpO3JldHVybiBnfWZ1bmN0aW9uIFhhKGEsYixjKXt2YXIgZCxlPSEwLGY9TWEoYSksZz1cImJvcmRlci1ib3hcIj09PXIuY3NzKGEsXCJib3hTaXppbmdcIiwhMSxmKTtpZihhLmdldENsaWVudFJlY3RzKCkubGVuZ3RoJiYoZD1hLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW2JdKSxkPD0wfHxudWxsPT1kKXtpZihkPU5hKGEsYixmKSwoZDwwfHxudWxsPT1kKSYmKGQ9YS5zdHlsZVtiXSksTGEudGVzdChkKSlyZXR1cm4gZDtlPWcmJihvLmJveFNpemluZ1JlbGlhYmxlKCl8fGQ9PT1hLnN0eWxlW2JdKSxkPXBhcnNlRmxvYXQoZCl8fDB9cmV0dXJuIGQrV2EoYSxiLGN8fChnP1wiYm9yZGVyXCI6XCJjb250ZW50XCIpLGUsZikrXCJweFwifXIuZXh0ZW5kKHtjc3NIb29rczp7b3BhY2l0eTp7Z2V0OmZ1bmN0aW9uKGEsYil7aWYoYil7dmFyIGM9TmEoYSxcIm9wYWNpdHlcIik7cmV0dXJuXCJcIj09PWM/XCIxXCI6Y319fX0sY3NzTnVtYmVyOnthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxjb2x1bW5Db3VudDohMCxmaWxsT3BhY2l0eTohMCxmbGV4R3JvdzohMCxmbGV4U2hyaW5rOiEwLGZvbnRXZWlnaHQ6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwfSxjc3NQcm9wczp7XCJmbG9hdFwiOlwiY3NzRmxvYXRcIn0sc3R5bGU6ZnVuY3Rpb24oYSxiLGMsZCl7aWYoYSYmMyE9PWEubm9kZVR5cGUmJjghPT1hLm5vZGVUeXBlJiZhLnN0eWxlKXt2YXIgZSxmLGcsaD1yLmNhbWVsQ2FzZShiKSxpPWEuc3R5bGU7cmV0dXJuIGI9ci5jc3NQcm9wc1toXXx8KHIuY3NzUHJvcHNbaF09VWEoaCl8fGgpLGc9ci5jc3NIb29rc1tiXXx8ci5jc3NIb29rc1toXSx2b2lkIDA9PT1jP2cmJlwiZ2V0XCJpbiBnJiZ2b2lkIDAhPT0oZT1nLmdldChhLCExLGQpKT9lOmlbYl06KGY9dHlwZW9mIGMsXCJzdHJpbmdcIj09PWYmJihlPWFhLmV4ZWMoYykpJiZlWzFdJiYoYz1lYShhLGIsZSksZj1cIm51bWJlclwiKSxudWxsIT1jJiZjPT09YyYmKFwibnVtYmVyXCI9PT1mJiYoYys9ZSYmZVszXXx8KHIuY3NzTnVtYmVyW2hdP1wiXCI6XCJweFwiKSksby5jbGVhckNsb25lU3R5bGV8fFwiXCIhPT1jfHwwIT09Yi5pbmRleE9mKFwiYmFja2dyb3VuZFwiKXx8KGlbYl09XCJpbmhlcml0XCIpLGcmJlwic2V0XCJpbiBnJiZ2b2lkIDA9PT0oYz1nLnNldChhLGMsZCkpfHwoaVtiXT1jKSksdm9pZCAwKX19LGNzczpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZSxmLGcsaD1yLmNhbWVsQ2FzZShiKTtyZXR1cm4gYj1yLmNzc1Byb3BzW2hdfHwoci5jc3NQcm9wc1toXT1VYShoKXx8aCksZz1yLmNzc0hvb2tzW2JdfHxyLmNzc0hvb2tzW2hdLGcmJlwiZ2V0XCJpbiBnJiYoZT1nLmdldChhLCEwLGMpKSx2b2lkIDA9PT1lJiYoZT1OYShhLGIsZCkpLFwibm9ybWFsXCI9PT1lJiZiIGluIFJhJiYoZT1SYVtiXSksXCJcIj09PWN8fGM/KGY9cGFyc2VGbG9hdChlKSxjPT09ITB8fGlzRmluaXRlKGYpP2Z8fDA6ZSk6ZX19KSxyLmVhY2goW1wiaGVpZ2h0XCIsXCJ3aWR0aFwiXSxmdW5jdGlvbihhLGIpe3IuY3NzSG9va3NbYl09e2dldDpmdW5jdGlvbihhLGMsZCl7aWYoYylyZXR1cm4hUGEudGVzdChyLmNzcyhhLFwiZGlzcGxheVwiKSl8fGEuZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGgmJmEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg/WGEoYSxiLGQpOmRhKGEsUWEsZnVuY3Rpb24oKXtyZXR1cm4gWGEoYSxiLGQpfSl9LHNldDpmdW5jdGlvbihhLGMsZCl7dmFyIGUsZj1kJiZNYShhKSxnPWQmJldhKGEsYixkLFwiYm9yZGVyLWJveFwiPT09ci5jc3MoYSxcImJveFNpemluZ1wiLCExLGYpLGYpO3JldHVybiBnJiYoZT1hYS5leGVjKGMpKSYmXCJweFwiIT09KGVbM118fFwicHhcIikmJihhLnN0eWxlW2JdPWMsYz1yLmNzcyhhLGIpKSxWYShhLGMsZyl9fX0pLHIuY3NzSG9va3MubWFyZ2luTGVmdD1PYShvLnJlbGlhYmxlTWFyZ2luTGVmdCxmdW5jdGlvbihhLGIpe2lmKGIpcmV0dXJuKHBhcnNlRmxvYXQoTmEoYSxcIm1hcmdpbkxlZnRcIikpfHxhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQtZGEoYSx7bWFyZ2luTGVmdDowfSxmdW5jdGlvbigpe3JldHVybiBhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnR9KSkrXCJweFwifSksci5lYWNoKHttYXJnaW46XCJcIixwYWRkaW5nOlwiXCIsYm9yZGVyOlwiV2lkdGhcIn0sZnVuY3Rpb24oYSxiKXtyLmNzc0hvb2tzW2ErYl09e2V4cGFuZDpmdW5jdGlvbihjKXtmb3IodmFyIGQ9MCxlPXt9LGY9XCJzdHJpbmdcIj09dHlwZW9mIGM/Yy5zcGxpdChcIiBcIik6W2NdO2Q8NDtkKyspZVthK2JhW2RdK2JdPWZbZF18fGZbZC0yXXx8ZlswXTtyZXR1cm4gZX19LEthLnRlc3QoYSl8fChyLmNzc0hvb2tzW2ErYl0uc2V0PVZhKX0pLHIuZm4uZXh0ZW5kKHtjc3M6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUyh0aGlzLGZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGY9e30sZz0wO2lmKHIuaXNBcnJheShiKSl7Zm9yKGQ9TWEoYSksZT1iLmxlbmd0aDtnPGU7ZysrKWZbYltnXV09ci5jc3MoYSxiW2ddLCExLGQpO3JldHVybiBmfXJldHVybiB2b2lkIDAhPT1jP3Iuc3R5bGUoYSxiLGMpOnIuY3NzKGEsYil9LGEsYixhcmd1bWVudHMubGVuZ3RoPjEpfX0pO2Z1bmN0aW9uIFlhKGEsYixjLGQsZSl7cmV0dXJuIG5ldyBZYS5wcm90b3R5cGUuaW5pdChhLGIsYyxkLGUpfXIuVHdlZW49WWEsWWEucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpZYSxpbml0OmZ1bmN0aW9uKGEsYixjLGQsZSxmKXt0aGlzLmVsZW09YSx0aGlzLnByb3A9Yyx0aGlzLmVhc2luZz1lfHxyLmVhc2luZy5fZGVmYXVsdCx0aGlzLm9wdGlvbnM9Yix0aGlzLnN0YXJ0PXRoaXMubm93PXRoaXMuY3VyKCksdGhpcy5lbmQ9ZCx0aGlzLnVuaXQ9Znx8KHIuY3NzTnVtYmVyW2NdP1wiXCI6XCJweFwiKX0sY3VyOmZ1bmN0aW9uKCl7dmFyIGE9WWEucHJvcEhvb2tzW3RoaXMucHJvcF07cmV0dXJuIGEmJmEuZ2V0P2EuZ2V0KHRoaXMpOllhLnByb3BIb29rcy5fZGVmYXVsdC5nZXQodGhpcyl9LHJ1bjpmdW5jdGlvbihhKXt2YXIgYixjPVlhLnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiB0aGlzLm9wdGlvbnMuZHVyYXRpb24/dGhpcy5wb3M9Yj1yLmVhc2luZ1t0aGlzLmVhc2luZ10oYSx0aGlzLm9wdGlvbnMuZHVyYXRpb24qYSwwLDEsdGhpcy5vcHRpb25zLmR1cmF0aW9uKTp0aGlzLnBvcz1iPWEsdGhpcy5ub3c9KHRoaXMuZW5kLXRoaXMuc3RhcnQpKmIrdGhpcy5zdGFydCx0aGlzLm9wdGlvbnMuc3RlcCYmdGhpcy5vcHRpb25zLnN0ZXAuY2FsbCh0aGlzLmVsZW0sdGhpcy5ub3csdGhpcyksYyYmYy5zZXQ/Yy5zZXQodGhpcyk6WWEucHJvcEhvb2tzLl9kZWZhdWx0LnNldCh0aGlzKSx0aGlzfX0sWWEucHJvdG90eXBlLmluaXQucHJvdG90eXBlPVlhLnByb3RvdHlwZSxZYS5wcm9wSG9va3M9e19kZWZhdWx0OntnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuIDEhPT1hLmVsZW0ubm9kZVR5cGV8fG51bGwhPWEuZWxlbVthLnByb3BdJiZudWxsPT1hLmVsZW0uc3R5bGVbYS5wcm9wXT9hLmVsZW1bYS5wcm9wXTooYj1yLmNzcyhhLmVsZW0sYS5wcm9wLFwiXCIpLGImJlwiYXV0b1wiIT09Yj9iOjApfSxzZXQ6ZnVuY3Rpb24oYSl7ci5meC5zdGVwW2EucHJvcF0/ci5meC5zdGVwW2EucHJvcF0oYSk6MSE9PWEuZWxlbS5ub2RlVHlwZXx8bnVsbD09YS5lbGVtLnN0eWxlW3IuY3NzUHJvcHNbYS5wcm9wXV0mJiFyLmNzc0hvb2tzW2EucHJvcF0/YS5lbGVtW2EucHJvcF09YS5ub3c6ci5zdHlsZShhLmVsZW0sYS5wcm9wLGEubm93K2EudW5pdCl9fX0sWWEucHJvcEhvb2tzLnNjcm9sbFRvcD1ZYS5wcm9wSG9va3Muc2Nyb2xsTGVmdD17c2V0OmZ1bmN0aW9uKGEpe2EuZWxlbS5ub2RlVHlwZSYmYS5lbGVtLnBhcmVudE5vZGUmJihhLmVsZW1bYS5wcm9wXT1hLm5vdyl9fSxyLmVhc2luZz17bGluZWFyOmZ1bmN0aW9uKGEpe3JldHVybiBhfSxzd2luZzpmdW5jdGlvbihhKXtyZXR1cm4uNS1NYXRoLmNvcyhhKk1hdGguUEkpLzJ9LF9kZWZhdWx0Olwic3dpbmdcIn0sci5meD1ZYS5wcm90b3R5cGUuaW5pdCxyLmZ4LnN0ZXA9e307dmFyIFphLCRhLF9hPS9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLyxhYj0vcXVldWVIb29rcyQvO2Z1bmN0aW9uIGJiKCl7JGEmJihhLnJlcXVlc3RBbmltYXRpb25GcmFtZShiYiksci5meC50aWNrKCkpfWZ1bmN0aW9uIGNiKCl7cmV0dXJuIGEuc2V0VGltZW91dChmdW5jdGlvbigpe1phPXZvaWQgMH0pLFphPXIubm93KCl9ZnVuY3Rpb24gZGIoYSxiKXt2YXIgYyxkPTAsZT17aGVpZ2h0OmF9O2ZvcihiPWI/MTowO2Q8NDtkKz0yLWIpYz1iYVtkXSxlW1wibWFyZ2luXCIrY109ZVtcInBhZGRpbmdcIitjXT1hO3JldHVybiBiJiYoZS5vcGFjaXR5PWUud2lkdGg9YSksZX1mdW5jdGlvbiBlYihhLGIsYyl7Zm9yKHZhciBkLGU9KGhiLnR3ZWVuZXJzW2JdfHxbXSkuY29uY2F0KGhiLnR3ZWVuZXJzW1wiKlwiXSksZj0wLGc9ZS5sZW5ndGg7ZjxnO2YrKylpZihkPWVbZl0uY2FsbChjLGIsYSkpcmV0dXJuIGR9ZnVuY3Rpb24gZmIoYSxiLGMpe3ZhciBkLGUsZixnLGgsaSxqLGssbD1cIndpZHRoXCJpbiBifHxcImhlaWdodFwiaW4gYixtPXRoaXMsbj17fSxvPWEuc3R5bGUscD1hLm5vZGVUeXBlJiZjYShhKSxxPVYuZ2V0KGEsXCJmeHNob3dcIik7Yy5xdWV1ZXx8KGc9ci5fcXVldWVIb29rcyhhLFwiZnhcIiksbnVsbD09Zy51bnF1ZXVlZCYmKGcudW5xdWV1ZWQ9MCxoPWcuZW1wdHkuZmlyZSxnLmVtcHR5LmZpcmU9ZnVuY3Rpb24oKXtnLnVucXVldWVkfHxoKCl9KSxnLnVucXVldWVkKyssbS5hbHdheXMoZnVuY3Rpb24oKXttLmFsd2F5cyhmdW5jdGlvbigpe2cudW5xdWV1ZWQtLSxyLnF1ZXVlKGEsXCJmeFwiKS5sZW5ndGh8fGcuZW1wdHkuZmlyZSgpfSl9KSk7Zm9yKGQgaW4gYilpZihlPWJbZF0sX2EudGVzdChlKSl7aWYoZGVsZXRlIGJbZF0sZj1mfHxcInRvZ2dsZVwiPT09ZSxlPT09KHA/XCJoaWRlXCI6XCJzaG93XCIpKXtpZihcInNob3dcIiE9PWV8fCFxfHx2b2lkIDA9PT1xW2RdKWNvbnRpbnVlO3A9ITB9bltkXT1xJiZxW2RdfHxyLnN0eWxlKGEsZCl9aWYoaT0hci5pc0VtcHR5T2JqZWN0KGIpLGl8fCFyLmlzRW1wdHlPYmplY3Qobikpe2wmJjE9PT1hLm5vZGVUeXBlJiYoYy5vdmVyZmxvdz1bby5vdmVyZmxvdyxvLm92ZXJmbG93WCxvLm92ZXJmbG93WV0saj1xJiZxLmRpc3BsYXksbnVsbD09aiYmKGo9Vi5nZXQoYSxcImRpc3BsYXlcIikpLGs9ci5jc3MoYSxcImRpc3BsYXlcIiksXCJub25lXCI9PT1rJiYoaj9rPWo6KGhhKFthXSwhMCksaj1hLnN0eWxlLmRpc3BsYXl8fGosaz1yLmNzcyhhLFwiZGlzcGxheVwiKSxoYShbYV0pKSksKFwiaW5saW5lXCI9PT1rfHxcImlubGluZS1ibG9ja1wiPT09ayYmbnVsbCE9aikmJlwibm9uZVwiPT09ci5jc3MoYSxcImZsb2F0XCIpJiYoaXx8KG0uZG9uZShmdW5jdGlvbigpe28uZGlzcGxheT1qfSksbnVsbD09aiYmKGs9by5kaXNwbGF5LGo9XCJub25lXCI9PT1rP1wiXCI6aykpLG8uZGlzcGxheT1cImlubGluZS1ibG9ja1wiKSksYy5vdmVyZmxvdyYmKG8ub3ZlcmZsb3c9XCJoaWRkZW5cIixtLmFsd2F5cyhmdW5jdGlvbigpe28ub3ZlcmZsb3c9Yy5vdmVyZmxvd1swXSxvLm92ZXJmbG93WD1jLm92ZXJmbG93WzFdLG8ub3ZlcmZsb3dZPWMub3ZlcmZsb3dbMl19KSksaT0hMTtmb3IoZCBpbiBuKWl8fChxP1wiaGlkZGVuXCJpbiBxJiYocD1xLmhpZGRlbik6cT1WLmFjY2VzcyhhLFwiZnhzaG93XCIse2Rpc3BsYXk6an0pLGYmJihxLmhpZGRlbj0hcCkscCYmaGEoW2FdLCEwKSxtLmRvbmUoZnVuY3Rpb24oKXtwfHxoYShbYV0pLFYucmVtb3ZlKGEsXCJmeHNob3dcIik7Zm9yKGQgaW4gbilyLnN0eWxlKGEsZCxuW2RdKX0pKSxpPWViKHA/cVtkXTowLGQsbSksZCBpbiBxfHwocVtkXT1pLnN0YXJ0LHAmJihpLmVuZD1pLnN0YXJ0LGkuc3RhcnQ9MCkpfX1mdW5jdGlvbiBnYihhLGIpe3ZhciBjLGQsZSxmLGc7Zm9yKGMgaW4gYSlpZihkPXIuY2FtZWxDYXNlKGMpLGU9YltkXSxmPWFbY10sci5pc0FycmF5KGYpJiYoZT1mWzFdLGY9YVtjXT1mWzBdKSxjIT09ZCYmKGFbZF09ZixkZWxldGUgYVtjXSksZz1yLmNzc0hvb2tzW2RdLGcmJlwiZXhwYW5kXCJpbiBnKXtmPWcuZXhwYW5kKGYpLGRlbGV0ZSBhW2RdO2ZvcihjIGluIGYpYyBpbiBhfHwoYVtjXT1mW2NdLGJbY109ZSl9ZWxzZSBiW2RdPWV9ZnVuY3Rpb24gaGIoYSxiLGMpe3ZhciBkLGUsZj0wLGc9aGIucHJlZmlsdGVycy5sZW5ndGgsaD1yLkRlZmVycmVkKCkuYWx3YXlzKGZ1bmN0aW9uKCl7ZGVsZXRlIGkuZWxlbX0pLGk9ZnVuY3Rpb24oKXtpZihlKXJldHVybiExO2Zvcih2YXIgYj1aYXx8Y2IoKSxjPU1hdGgubWF4KDAsai5zdGFydFRpbWUrai5kdXJhdGlvbi1iKSxkPWMvai5kdXJhdGlvbnx8MCxmPTEtZCxnPTAsaT1qLnR3ZWVucy5sZW5ndGg7ZzxpO2crKylqLnR3ZWVuc1tnXS5ydW4oZik7cmV0dXJuIGgubm90aWZ5V2l0aChhLFtqLGYsY10pLGY8MSYmaT9jOihoLnJlc29sdmVXaXRoKGEsW2pdKSwhMSl9LGo9aC5wcm9taXNlKHtlbGVtOmEscHJvcHM6ci5leHRlbmQoe30sYiksb3B0czpyLmV4dGVuZCghMCx7c3BlY2lhbEVhc2luZzp7fSxlYXNpbmc6ci5lYXNpbmcuX2RlZmF1bHR9LGMpLG9yaWdpbmFsUHJvcGVydGllczpiLG9yaWdpbmFsT3B0aW9uczpjLHN0YXJ0VGltZTpaYXx8Y2IoKSxkdXJhdGlvbjpjLmR1cmF0aW9uLHR3ZWVuczpbXSxjcmVhdGVUd2VlbjpmdW5jdGlvbihiLGMpe3ZhciBkPXIuVHdlZW4oYSxqLm9wdHMsYixjLGoub3B0cy5zcGVjaWFsRWFzaW5nW2JdfHxqLm9wdHMuZWFzaW5nKTtyZXR1cm4gai50d2VlbnMucHVzaChkKSxkfSxzdG9wOmZ1bmN0aW9uKGIpe3ZhciBjPTAsZD1iP2oudHdlZW5zLmxlbmd0aDowO2lmKGUpcmV0dXJuIHRoaXM7Zm9yKGU9ITA7YzxkO2MrKylqLnR3ZWVuc1tjXS5ydW4oMSk7cmV0dXJuIGI/KGgubm90aWZ5V2l0aChhLFtqLDEsMF0pLGgucmVzb2x2ZVdpdGgoYSxbaixiXSkpOmgucmVqZWN0V2l0aChhLFtqLGJdKSx0aGlzfX0pLGs9ai5wcm9wcztmb3IoZ2IoayxqLm9wdHMuc3BlY2lhbEVhc2luZyk7ZjxnO2YrKylpZihkPWhiLnByZWZpbHRlcnNbZl0uY2FsbChqLGEsayxqLm9wdHMpKXJldHVybiByLmlzRnVuY3Rpb24oZC5zdG9wKSYmKHIuX3F1ZXVlSG9va3Moai5lbGVtLGoub3B0cy5xdWV1ZSkuc3RvcD1yLnByb3h5KGQuc3RvcCxkKSksZDtyZXR1cm4gci5tYXAoayxlYixqKSxyLmlzRnVuY3Rpb24oai5vcHRzLnN0YXJ0KSYmai5vcHRzLnN0YXJ0LmNhbGwoYSxqKSxyLmZ4LnRpbWVyKHIuZXh0ZW5kKGkse2VsZW06YSxhbmltOmoscXVldWU6ai5vcHRzLnF1ZXVlfSkpLGoucHJvZ3Jlc3Moai5vcHRzLnByb2dyZXNzKS5kb25lKGoub3B0cy5kb25lLGoub3B0cy5jb21wbGV0ZSkuZmFpbChqLm9wdHMuZmFpbCkuYWx3YXlzKGoub3B0cy5hbHdheXMpfXIuQW5pbWF0aW9uPXIuZXh0ZW5kKGhiLHt0d2VlbmVyczp7XCIqXCI6W2Z1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5jcmVhdGVUd2VlbihhLGIpO3JldHVybiBlYShjLmVsZW0sYSxhYS5leGVjKGIpLGMpLGN9XX0sdHdlZW5lcjpmdW5jdGlvbihhLGIpe3IuaXNGdW5jdGlvbihhKT8oYj1hLGE9W1wiKlwiXSk6YT1hLm1hdGNoKEspO2Zvcih2YXIgYyxkPTAsZT1hLmxlbmd0aDtkPGU7ZCsrKWM9YVtkXSxoYi50d2VlbmVyc1tjXT1oYi50d2VlbmVyc1tjXXx8W10saGIudHdlZW5lcnNbY10udW5zaGlmdChiKX0scHJlZmlsdGVyczpbZmJdLHByZWZpbHRlcjpmdW5jdGlvbihhLGIpe2I/aGIucHJlZmlsdGVycy51bnNoaWZ0KGEpOmhiLnByZWZpbHRlcnMucHVzaChhKX19KSxyLnNwZWVkPWZ1bmN0aW9uKGEsYixjKXt2YXIgZT1hJiZcIm9iamVjdFwiPT10eXBlb2YgYT9yLmV4dGVuZCh7fSxhKTp7Y29tcGxldGU6Y3x8IWMmJmJ8fHIuaXNGdW5jdGlvbihhKSYmYSxkdXJhdGlvbjphLGVhc2luZzpjJiZifHxiJiYhci5pc0Z1bmN0aW9uKGIpJiZifTtyZXR1cm4gci5meC5vZmZ8fGQuaGlkZGVuP2UuZHVyYXRpb249MDpcIm51bWJlclwiIT10eXBlb2YgZS5kdXJhdGlvbiYmKGUuZHVyYXRpb24gaW4gci5meC5zcGVlZHM/ZS5kdXJhdGlvbj1yLmZ4LnNwZWVkc1tlLmR1cmF0aW9uXTplLmR1cmF0aW9uPXIuZnguc3BlZWRzLl9kZWZhdWx0KSxudWxsIT1lLnF1ZXVlJiZlLnF1ZXVlIT09ITB8fChlLnF1ZXVlPVwiZnhcIiksZS5vbGQ9ZS5jb21wbGV0ZSxlLmNvbXBsZXRlPWZ1bmN0aW9uKCl7ci5pc0Z1bmN0aW9uKGUub2xkKSYmZS5vbGQuY2FsbCh0aGlzKSxlLnF1ZXVlJiZyLmRlcXVldWUodGhpcyxlLnF1ZXVlKX0sZX0sci5mbi5leHRlbmQoe2ZhZGVUbzpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5maWx0ZXIoY2EpLmNzcyhcIm9wYWNpdHlcIiwwKS5zaG93KCkuZW5kKCkuYW5pbWF0ZSh7b3BhY2l0eTpifSxhLGMsZCl9LGFuaW1hdGU6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ci5pc0VtcHR5T2JqZWN0KGEpLGY9ci5zcGVlZChiLGMsZCksZz1mdW5jdGlvbigpe3ZhciBiPWhiKHRoaXMsci5leHRlbmQoe30sYSksZik7KGV8fFYuZ2V0KHRoaXMsXCJmaW5pc2hcIikpJiZiLnN0b3AoITApfTtyZXR1cm4gZy5maW5pc2g9ZyxlfHxmLnF1ZXVlPT09ITE/dGhpcy5lYWNoKGcpOnRoaXMucXVldWUoZi5xdWV1ZSxnKX0sc3RvcDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZnVuY3Rpb24oYSl7dmFyIGI9YS5zdG9wO2RlbGV0ZSBhLnN0b3AsYihjKX07cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGEmJihjPWIsYj1hLGE9dm9pZCAwKSxiJiZhIT09ITEmJnRoaXMucXVldWUoYXx8XCJmeFwiLFtdKSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj0hMCxlPW51bGwhPWEmJmErXCJxdWV1ZUhvb2tzXCIsZj1yLnRpbWVycyxnPVYuZ2V0KHRoaXMpO2lmKGUpZ1tlXSYmZ1tlXS5zdG9wJiZkKGdbZV0pO2Vsc2UgZm9yKGUgaW4gZylnW2VdJiZnW2VdLnN0b3AmJmFiLnRlc3QoZSkmJmQoZ1tlXSk7Zm9yKGU9Zi5sZW5ndGg7ZS0tOylmW2VdLmVsZW0hPT10aGlzfHxudWxsIT1hJiZmW2VdLnF1ZXVlIT09YXx8KGZbZV0uYW5pbS5zdG9wKGMpLGI9ITEsZi5zcGxpY2UoZSwxKSk7IWImJmN8fHIuZGVxdWV1ZSh0aGlzLGEpfSl9LGZpbmlzaDpmdW5jdGlvbihhKXtyZXR1cm4gYSE9PSExJiYoYT1hfHxcImZ4XCIpLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiLGM9Vi5nZXQodGhpcyksZD1jW2ErXCJxdWV1ZVwiXSxlPWNbYStcInF1ZXVlSG9va3NcIl0sZj1yLnRpbWVycyxnPWQ/ZC5sZW5ndGg6MDtmb3IoYy5maW5pc2g9ITAsci5xdWV1ZSh0aGlzLGEsW10pLGUmJmUuc3RvcCYmZS5zdG9wLmNhbGwodGhpcywhMCksYj1mLmxlbmd0aDtiLS07KWZbYl0uZWxlbT09PXRoaXMmJmZbYl0ucXVldWU9PT1hJiYoZltiXS5hbmltLnN0b3AoITApLGYuc3BsaWNlKGIsMSkpO2ZvcihiPTA7YjxnO2IrKylkW2JdJiZkW2JdLmZpbmlzaCYmZFtiXS5maW5pc2guY2FsbCh0aGlzKTtkZWxldGUgYy5maW5pc2h9KX19KSxyLmVhY2goW1widG9nZ2xlXCIsXCJzaG93XCIsXCJoaWRlXCJdLGZ1bmN0aW9uKGEsYil7dmFyIGM9ci5mbltiXTtyLmZuW2JdPWZ1bmN0aW9uKGEsZCxlKXtyZXR1cm4gbnVsbD09YXx8XCJib29sZWFuXCI9PXR5cGVvZiBhP2MuYXBwbHkodGhpcyxhcmd1bWVudHMpOnRoaXMuYW5pbWF0ZShkYihiLCEwKSxhLGQsZSl9fSksci5lYWNoKHtzbGlkZURvd246ZGIoXCJzaG93XCIpLHNsaWRlVXA6ZGIoXCJoaWRlXCIpLHNsaWRlVG9nZ2xlOmRiKFwidG9nZ2xlXCIpLGZhZGVJbjp7b3BhY2l0eTpcInNob3dcIn0sZmFkZU91dDp7b3BhY2l0eTpcImhpZGVcIn0sZmFkZVRvZ2dsZTp7b3BhY2l0eTpcInRvZ2dsZVwifX0sZnVuY3Rpb24oYSxiKXtyLmZuW2FdPWZ1bmN0aW9uKGEsYyxkKXtyZXR1cm4gdGhpcy5hbmltYXRlKGIsYSxjLGQpfX0pLHIudGltZXJzPVtdLHIuZngudGljaz1mdW5jdGlvbigpe3ZhciBhLGI9MCxjPXIudGltZXJzO2ZvcihaYT1yLm5vdygpO2I8Yy5sZW5ndGg7YisrKWE9Y1tiXSxhKCl8fGNbYl0hPT1hfHxjLnNwbGljZShiLS0sMSk7Yy5sZW5ndGh8fHIuZnguc3RvcCgpLFphPXZvaWQgMH0sci5meC50aW1lcj1mdW5jdGlvbihhKXtyLnRpbWVycy5wdXNoKGEpLGEoKT9yLmZ4LnN0YXJ0KCk6ci50aW1lcnMucG9wKCl9LHIuZnguaW50ZXJ2YWw9MTMsci5meC5zdGFydD1mdW5jdGlvbigpeyRhfHwoJGE9YS5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/YS5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYmIpOmEuc2V0SW50ZXJ2YWwoci5meC50aWNrLHIuZnguaW50ZXJ2YWwpKX0sci5meC5zdG9wPWZ1bmN0aW9uKCl7YS5jYW5jZWxBbmltYXRpb25GcmFtZT9hLmNhbmNlbEFuaW1hdGlvbkZyYW1lKCRhKTphLmNsZWFySW50ZXJ2YWwoJGEpLCRhPW51bGx9LHIuZnguc3BlZWRzPXtzbG93OjYwMCxmYXN0OjIwMCxfZGVmYXVsdDo0MDB9LHIuZm4uZGVsYXk9ZnVuY3Rpb24oYixjKXtyZXR1cm4gYj1yLmZ4P3IuZnguc3BlZWRzW2JdfHxiOmIsYz1jfHxcImZ4XCIsdGhpcy5xdWV1ZShjLGZ1bmN0aW9uKGMsZCl7dmFyIGU9YS5zZXRUaW1lb3V0KGMsYik7ZC5zdG9wPWZ1bmN0aW9uKCl7YS5jbGVhclRpbWVvdXQoZSl9fSl9LGZ1bmN0aW9uKCl7dmFyIGE9ZC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiksYj1kLmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIiksYz1iLmFwcGVuZENoaWxkKGQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKSk7YS50eXBlPVwiY2hlY2tib3hcIixvLmNoZWNrT249XCJcIiE9PWEudmFsdWUsby5vcHRTZWxlY3RlZD1jLnNlbGVjdGVkLGE9ZC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiksYS52YWx1ZT1cInRcIixhLnR5cGU9XCJyYWRpb1wiLG8ucmFkaW9WYWx1ZT1cInRcIj09PWEudmFsdWV9KCk7dmFyIGliLGpiPXIuZXhwci5hdHRySGFuZGxlO3IuZm4uZXh0ZW5kKHthdHRyOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFModGhpcyxyLmF0dHIsYSxiLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHJlbW92ZUF0dHI6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3IucmVtb3ZlQXR0cih0aGlzLGEpfSl9fSksci5leHRlbmQoe2F0dHI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj1hLm5vZGVUeXBlO2lmKDMhPT1mJiY4IT09ZiYmMiE9PWYpcmV0dXJuXCJ1bmRlZmluZWRcIj09dHlwZW9mIGEuZ2V0QXR0cmlidXRlP3IucHJvcChhLGIsYyk6KDE9PT1mJiZyLmlzWE1MRG9jKGEpfHwoZT1yLmF0dHJIb29rc1tiLnRvTG93ZXJDYXNlKCldfHwoci5leHByLm1hdGNoLmJvb2wudGVzdChiKT9pYjp2b2lkIDApKSxcclxudm9pZCAwIT09Yz9udWxsPT09Yz92b2lkIHIucmVtb3ZlQXR0cihhLGIpOmUmJlwic2V0XCJpbiBlJiZ2b2lkIDAhPT0oZD1lLnNldChhLGMsYikpP2Q6KGEuc2V0QXR0cmlidXRlKGIsYytcIlwiKSxjKTplJiZcImdldFwiaW4gZSYmbnVsbCE9PShkPWUuZ2V0KGEsYikpP2Q6KGQ9ci5maW5kLmF0dHIoYSxiKSxudWxsPT1kP3ZvaWQgMDpkKSl9LGF0dHJIb29rczp7dHlwZTp7c2V0OmZ1bmN0aW9uKGEsYil7aWYoIW8ucmFkaW9WYWx1ZSYmXCJyYWRpb1wiPT09YiYmci5ub2RlTmFtZShhLFwiaW5wdXRcIikpe3ZhciBjPWEudmFsdWU7cmV0dXJuIGEuc2V0QXR0cmlidXRlKFwidHlwZVwiLGIpLGMmJihhLnZhbHVlPWMpLGJ9fX19LHJlbW92ZUF0dHI6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTAsZT1iJiZiLm1hdGNoKEspO2lmKGUmJjE9PT1hLm5vZGVUeXBlKXdoaWxlKGM9ZVtkKytdKWEucmVtb3ZlQXR0cmlidXRlKGMpfX0pLGliPXtzZXQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBiPT09ITE/ci5yZW1vdmVBdHRyKGEsYyk6YS5zZXRBdHRyaWJ1dGUoYyxjKSxjfX0sci5lYWNoKHIuZXhwci5tYXRjaC5ib29sLnNvdXJjZS5tYXRjaCgvXFx3Ky9nKSxmdW5jdGlvbihhLGIpe3ZhciBjPWpiW2JdfHxyLmZpbmQuYXR0cjtqYltiXT1mdW5jdGlvbihhLGIsZCl7dmFyIGUsZixnPWIudG9Mb3dlckNhc2UoKTtyZXR1cm4gZHx8KGY9amJbZ10samJbZ109ZSxlPW51bGwhPWMoYSxiLGQpP2c6bnVsbCxqYltnXT1mKSxlfX0pO3ZhciBrYj0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLGxiPS9eKD86YXxhcmVhKSQvaTtyLmZuLmV4dGVuZCh7cHJvcDpmdW5jdGlvbihhLGIpe3JldHVybiBTKHRoaXMsci5wcm9wLGEsYixhcmd1bWVudHMubGVuZ3RoPjEpfSxyZW1vdmVQcm9wOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtkZWxldGUgdGhpc1tyLnByb3BGaXhbYV18fGFdfSl9fSksci5leHRlbmQoe3Byb3A6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj1hLm5vZGVUeXBlO2lmKDMhPT1mJiY4IT09ZiYmMiE9PWYpcmV0dXJuIDE9PT1mJiZyLmlzWE1MRG9jKGEpfHwoYj1yLnByb3BGaXhbYl18fGIsZT1yLnByb3BIb29rc1tiXSksdm9pZCAwIT09Yz9lJiZcInNldFwiaW4gZSYmdm9pZCAwIT09KGQ9ZS5zZXQoYSxjLGIpKT9kOmFbYl09YzplJiZcImdldFwiaW4gZSYmbnVsbCE9PShkPWUuZ2V0KGEsYikpP2Q6YVtiXX0scHJvcEhvb2tzOnt0YWJJbmRleDp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiPXIuZmluZC5hdHRyKGEsXCJ0YWJpbmRleFwiKTtyZXR1cm4gYj9wYXJzZUludChiLDEwKTprYi50ZXN0KGEubm9kZU5hbWUpfHxsYi50ZXN0KGEubm9kZU5hbWUpJiZhLmhyZWY/MDotMX19fSxwcm9wRml4OntcImZvclwiOlwiaHRtbEZvclwiLFwiY2xhc3NcIjpcImNsYXNzTmFtZVwifX0pLG8ub3B0U2VsZWN0ZWR8fChyLnByb3BIb29rcy5zZWxlY3RlZD17Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtyZXR1cm4gYiYmYi5wYXJlbnROb2RlJiZiLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCxudWxsfSxzZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5wYXJlbnROb2RlO2ImJihiLnNlbGVjdGVkSW5kZXgsYi5wYXJlbnROb2RlJiZiLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCl9fSksci5lYWNoKFtcInRhYkluZGV4XCIsXCJyZWFkT25seVwiLFwibWF4TGVuZ3RoXCIsXCJjZWxsU3BhY2luZ1wiLFwiY2VsbFBhZGRpbmdcIixcInJvd1NwYW5cIixcImNvbFNwYW5cIixcInVzZU1hcFwiLFwiZnJhbWVCb3JkZXJcIixcImNvbnRlbnRFZGl0YWJsZVwiXSxmdW5jdGlvbigpe3IucHJvcEZpeFt0aGlzLnRvTG93ZXJDYXNlKCldPXRoaXN9KTtmdW5jdGlvbiBtYihhKXt2YXIgYj1hLm1hdGNoKEspfHxbXTtyZXR1cm4gYi5qb2luKFwiIFwiKX1mdW5jdGlvbiBuYihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUmJmEuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIil8fFwiXCJ9ci5mbi5leHRlbmQoe2FkZENsYXNzOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoLGk9MDtpZihyLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtyKHRoaXMpLmFkZENsYXNzKGEuY2FsbCh0aGlzLGIsbmIodGhpcykpKX0pO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBhJiZhKXtiPWEubWF0Y2goSyl8fFtdO3doaWxlKGM9dGhpc1tpKytdKWlmKGU9bmIoYyksZD0xPT09Yy5ub2RlVHlwZSYmXCIgXCIrbWIoZSkrXCIgXCIpe2c9MDt3aGlsZShmPWJbZysrXSlkLmluZGV4T2YoXCIgXCIrZitcIiBcIik8MCYmKGQrPWYrXCIgXCIpO2g9bWIoZCksZSE9PWgmJmMuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixoKX19cmV0dXJuIHRoaXN9LHJlbW92ZUNsYXNzOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoLGk9MDtpZihyLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtyKHRoaXMpLnJlbW92ZUNsYXNzKGEuY2FsbCh0aGlzLGIsbmIodGhpcykpKX0pO2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiB0aGlzLmF0dHIoXCJjbGFzc1wiLFwiXCIpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBhJiZhKXtiPWEubWF0Y2goSyl8fFtdO3doaWxlKGM9dGhpc1tpKytdKWlmKGU9bmIoYyksZD0xPT09Yy5ub2RlVHlwZSYmXCIgXCIrbWIoZSkrXCIgXCIpe2c9MDt3aGlsZShmPWJbZysrXSl3aGlsZShkLmluZGV4T2YoXCIgXCIrZitcIiBcIik+LTEpZD1kLnJlcGxhY2UoXCIgXCIrZitcIiBcIixcIiBcIik7aD1tYihkKSxlIT09aCYmYy5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLGgpfX1yZXR1cm4gdGhpc30sdG9nZ2xlQ2xhc3M6ZnVuY3Rpb24oYSxiKXt2YXIgYz10eXBlb2YgYTtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIGImJlwic3RyaW5nXCI9PT1jP2I/dGhpcy5hZGRDbGFzcyhhKTp0aGlzLnJlbW92ZUNsYXNzKGEpOnIuaXNGdW5jdGlvbihhKT90aGlzLmVhY2goZnVuY3Rpb24oYyl7cih0aGlzKS50b2dnbGVDbGFzcyhhLmNhbGwodGhpcyxjLG5iKHRoaXMpLGIpLGIpfSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGIsZCxlLGY7aWYoXCJzdHJpbmdcIj09PWMpe2Q9MCxlPXIodGhpcyksZj1hLm1hdGNoKEspfHxbXTt3aGlsZShiPWZbZCsrXSllLmhhc0NsYXNzKGIpP2UucmVtb3ZlQ2xhc3MoYik6ZS5hZGRDbGFzcyhiKX1lbHNlIHZvaWQgMCE9PWEmJlwiYm9vbGVhblwiIT09Y3x8KGI9bmIodGhpcyksYiYmVi5zZXQodGhpcyxcIl9fY2xhc3NOYW1lX19cIixiKSx0aGlzLnNldEF0dHJpYnV0ZSYmdGhpcy5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLGJ8fGE9PT0hMT9cIlwiOlYuZ2V0KHRoaXMsXCJfX2NsYXNzTmFtZV9fXCIpfHxcIlwiKSl9KX0saGFzQ2xhc3M6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkPTA7Yj1cIiBcIithK1wiIFwiO3doaWxlKGM9dGhpc1tkKytdKWlmKDE9PT1jLm5vZGVUeXBlJiYoXCIgXCIrbWIobmIoYykpK1wiIFwiKS5pbmRleE9mKGIpPi0xKXJldHVybiEwO3JldHVybiExfX0pO3ZhciBvYj0vXFxyL2c7ci5mbi5leHRlbmQoe3ZhbDpmdW5jdGlvbihhKXt2YXIgYixjLGQsZT10aGlzWzBdO3tpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiBkPXIuaXNGdW5jdGlvbihhKSx0aGlzLmVhY2goZnVuY3Rpb24oYyl7dmFyIGU7MT09PXRoaXMubm9kZVR5cGUmJihlPWQ/YS5jYWxsKHRoaXMsYyxyKHRoaXMpLnZhbCgpKTphLG51bGw9PWU/ZT1cIlwiOlwibnVtYmVyXCI9PXR5cGVvZiBlP2UrPVwiXCI6ci5pc0FycmF5KGUpJiYoZT1yLm1hcChlLGZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hP1wiXCI6YStcIlwifSkpLGI9ci52YWxIb29rc1t0aGlzLnR5cGVdfHxyLnZhbEhvb2tzW3RoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0sYiYmXCJzZXRcImluIGImJnZvaWQgMCE9PWIuc2V0KHRoaXMsZSxcInZhbHVlXCIpfHwodGhpcy52YWx1ZT1lKSl9KTtpZihlKXJldHVybiBiPXIudmFsSG9va3NbZS50eXBlXXx8ci52YWxIb29rc1tlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldLGImJlwiZ2V0XCJpbiBiJiZ2b2lkIDAhPT0oYz1iLmdldChlLFwidmFsdWVcIikpP2M6KGM9ZS52YWx1ZSxcInN0cmluZ1wiPT10eXBlb2YgYz9jLnJlcGxhY2Uob2IsXCJcIik6bnVsbD09Yz9cIlwiOmMpfX19KSxyLmV4dGVuZCh7dmFsSG9va3M6e29wdGlvbjp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiPXIuZmluZC5hdHRyKGEsXCJ2YWx1ZVwiKTtyZXR1cm4gbnVsbCE9Yj9iOm1iKHIudGV4dChhKSl9fSxzZWxlY3Q6e2dldDpmdW5jdGlvbihhKXt2YXIgYixjLGQsZT1hLm9wdGlvbnMsZj1hLnNlbGVjdGVkSW5kZXgsZz1cInNlbGVjdC1vbmVcIj09PWEudHlwZSxoPWc/bnVsbDpbXSxpPWc/ZisxOmUubGVuZ3RoO2ZvcihkPWY8MD9pOmc/ZjowO2Q8aTtkKyspaWYoYz1lW2RdLChjLnNlbGVjdGVkfHxkPT09ZikmJiFjLmRpc2FibGVkJiYoIWMucGFyZW50Tm9kZS5kaXNhYmxlZHx8IXIubm9kZU5hbWUoYy5wYXJlbnROb2RlLFwib3B0Z3JvdXBcIikpKXtpZihiPXIoYykudmFsKCksZylyZXR1cm4gYjtoLnB1c2goYil9cmV0dXJuIGh9LHNldDpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZT1hLm9wdGlvbnMsZj1yLm1ha2VBcnJheShiKSxnPWUubGVuZ3RoO3doaWxlKGctLSlkPWVbZ10sKGQuc2VsZWN0ZWQ9ci5pbkFycmF5KHIudmFsSG9va3Mub3B0aW9uLmdldChkKSxmKT4tMSkmJihjPSEwKTtyZXR1cm4gY3x8KGEuc2VsZWN0ZWRJbmRleD0tMSksZn19fX0pLHIuZWFjaChbXCJyYWRpb1wiLFwiY2hlY2tib3hcIl0sZnVuY3Rpb24oKXtyLnZhbEhvb2tzW3RoaXNdPXtzZXQ6ZnVuY3Rpb24oYSxiKXtpZihyLmlzQXJyYXkoYikpcmV0dXJuIGEuY2hlY2tlZD1yLmluQXJyYXkocihhKS52YWwoKSxiKT4tMX19LG8uY2hlY2tPbnx8KHIudmFsSG9va3NbdGhpc10uZ2V0PWZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT09YS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKT9cIm9uXCI6YS52YWx1ZX0pfSk7dmFyIHBiPS9eKD86Zm9jdXNpbmZvY3VzfGZvY3Vzb3V0Ymx1cikkLztyLmV4dGVuZChyLmV2ZW50LHt0cmlnZ2VyOmZ1bmN0aW9uKGIsYyxlLGYpe3ZhciBnLGgsaSxqLGssbSxuLG89W2V8fGRdLHA9bC5jYWxsKGIsXCJ0eXBlXCIpP2IudHlwZTpiLHE9bC5jYWxsKGIsXCJuYW1lc3BhY2VcIik/Yi5uYW1lc3BhY2Uuc3BsaXQoXCIuXCIpOltdO2lmKGg9aT1lPWV8fGQsMyE9PWUubm9kZVR5cGUmJjghPT1lLm5vZGVUeXBlJiYhcGIudGVzdChwK3IuZXZlbnQudHJpZ2dlcmVkKSYmKHAuaW5kZXhPZihcIi5cIik+LTEmJihxPXAuc3BsaXQoXCIuXCIpLHA9cS5zaGlmdCgpLHEuc29ydCgpKSxrPXAuaW5kZXhPZihcIjpcIik8MCYmXCJvblwiK3AsYj1iW3IuZXhwYW5kb10/YjpuZXcgci5FdmVudChwLFwib2JqZWN0XCI9PXR5cGVvZiBiJiZiKSxiLmlzVHJpZ2dlcj1mPzI6MyxiLm5hbWVzcGFjZT1xLmpvaW4oXCIuXCIpLGIucm5hbWVzcGFjZT1iLm5hbWVzcGFjZT9uZXcgUmVnRXhwKFwiKF58XFxcXC4pXCIrcS5qb2luKFwiXFxcXC4oPzouKlxcXFwufClcIikrXCIoXFxcXC58JClcIik6bnVsbCxiLnJlc3VsdD12b2lkIDAsYi50YXJnZXR8fChiLnRhcmdldD1lKSxjPW51bGw9PWM/W2JdOnIubWFrZUFycmF5KGMsW2JdKSxuPXIuZXZlbnQuc3BlY2lhbFtwXXx8e30sZnx8IW4udHJpZ2dlcnx8bi50cmlnZ2VyLmFwcGx5KGUsYykhPT0hMSkpe2lmKCFmJiYhbi5ub0J1YmJsZSYmIXIuaXNXaW5kb3coZSkpe2ZvcihqPW4uZGVsZWdhdGVUeXBlfHxwLHBiLnRlc3QoaitwKXx8KGg9aC5wYXJlbnROb2RlKTtoO2g9aC5wYXJlbnROb2RlKW8ucHVzaChoKSxpPWg7aT09PShlLm93bmVyRG9jdW1lbnR8fGQpJiZvLnB1c2goaS5kZWZhdWx0Vmlld3x8aS5wYXJlbnRXaW5kb3d8fGEpfWc9MDt3aGlsZSgoaD1vW2crK10pJiYhYi5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWIudHlwZT1nPjE/ajpuLmJpbmRUeXBlfHxwLG09KFYuZ2V0KGgsXCJldmVudHNcIil8fHt9KVtiLnR5cGVdJiZWLmdldChoLFwiaGFuZGxlXCIpLG0mJm0uYXBwbHkoaCxjKSxtPWsmJmhba10sbSYmbS5hcHBseSYmVChoKSYmKGIucmVzdWx0PW0uYXBwbHkoaCxjKSxiLnJlc3VsdD09PSExJiZiLnByZXZlbnREZWZhdWx0KCkpO3JldHVybiBiLnR5cGU9cCxmfHxiLmlzRGVmYXVsdFByZXZlbnRlZCgpfHxuLl9kZWZhdWx0JiZuLl9kZWZhdWx0LmFwcGx5KG8ucG9wKCksYykhPT0hMXx8IVQoZSl8fGsmJnIuaXNGdW5jdGlvbihlW3BdKSYmIXIuaXNXaW5kb3coZSkmJihpPWVba10saSYmKGVba109bnVsbCksci5ldmVudC50cmlnZ2VyZWQ9cCxlW3BdKCksci5ldmVudC50cmlnZ2VyZWQ9dm9pZCAwLGkmJihlW2tdPWkpKSxiLnJlc3VsdH19LHNpbXVsYXRlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1yLmV4dGVuZChuZXcgci5FdmVudCxjLHt0eXBlOmEsaXNTaW11bGF0ZWQ6ITB9KTtyLmV2ZW50LnRyaWdnZXIoZCxudWxsLGIpfX0pLHIuZm4uZXh0ZW5kKHt0cmlnZ2VyOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3IuZXZlbnQudHJpZ2dlcihhLGIsdGhpcyl9KX0sdHJpZ2dlckhhbmRsZXI6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzWzBdO2lmKGMpcmV0dXJuIHIuZXZlbnQudHJpZ2dlcihhLGIsYywhMCl9fSksci5lYWNoKFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgbW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBjb250ZXh0bWVudVwiLnNwbGl0KFwiIFwiKSxmdW5jdGlvbihhLGIpe3IuZm5bYl09ZnVuY3Rpb24oYSxjKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4wP3RoaXMub24oYixudWxsLGEsYyk6dGhpcy50cmlnZ2VyKGIpfX0pLHIuZm4uZXh0ZW5kKHtob3ZlcjpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLm1vdXNlZW50ZXIoYSkubW91c2VsZWF2ZShifHxhKX19KSxvLmZvY3VzaW49XCJvbmZvY3VzaW5cImluIGEsby5mb2N1c2lufHxyLmVhY2goe2ZvY3VzOlwiZm9jdXNpblwiLGJsdXI6XCJmb2N1c291dFwifSxmdW5jdGlvbihhLGIpe3ZhciBjPWZ1bmN0aW9uKGEpe3IuZXZlbnQuc2ltdWxhdGUoYixhLnRhcmdldCxyLmV2ZW50LmZpeChhKSl9O3IuZXZlbnQuc3BlY2lhbFtiXT17c2V0dXA6ZnVuY3Rpb24oKXt2YXIgZD10aGlzLm93bmVyRG9jdW1lbnR8fHRoaXMsZT1WLmFjY2VzcyhkLGIpO2V8fGQuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApLFYuYWNjZXNzKGQsYiwoZXx8MCkrMSl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7dmFyIGQ9dGhpcy5vd25lckRvY3VtZW50fHx0aGlzLGU9Vi5hY2Nlc3MoZCxiKS0xO2U/Vi5hY2Nlc3MoZCxiLGUpOihkLnJlbW92ZUV2ZW50TGlzdGVuZXIoYSxjLCEwKSxWLnJlbW92ZShkLGIpKX19fSk7dmFyIHFiPWEubG9jYXRpb24scmI9ci5ub3coKSxzYj0vXFw/LztyLnBhcnNlWE1MPWZ1bmN0aW9uKGIpe3ZhciBjO2lmKCFifHxcInN0cmluZ1wiIT10eXBlb2YgYilyZXR1cm4gbnVsbDt0cnl7Yz0obmV3IGEuRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcoYixcInRleHQveG1sXCIpfWNhdGNoKGQpe2M9dm9pZCAwfXJldHVybiBjJiYhYy5nZXRFbGVtZW50c0J5VGFnTmFtZShcInBhcnNlcmVycm9yXCIpLmxlbmd0aHx8ci5lcnJvcihcIkludmFsaWQgWE1MOiBcIitiKSxjfTt2YXIgdGI9L1xcW1xcXSQvLHViPS9cXHI/XFxuL2csdmI9L14oPzpzdWJtaXR8YnV0dG9ufGltYWdlfHJlc2V0fGZpbGUpJC9pLHdiPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtmdW5jdGlvbiB4YihhLGIsYyxkKXt2YXIgZTtpZihyLmlzQXJyYXkoYikpci5lYWNoKGIsZnVuY3Rpb24oYixlKXtjfHx0Yi50ZXN0KGEpP2QoYSxlKTp4YihhK1wiW1wiKyhcIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9ZT9iOlwiXCIpK1wiXVwiLGUsYyxkKX0pO2Vsc2UgaWYoY3x8XCJvYmplY3RcIiE9PXIudHlwZShiKSlkKGEsYik7ZWxzZSBmb3IoZSBpbiBiKXhiKGErXCJbXCIrZStcIl1cIixiW2VdLGMsZCl9ci5wYXJhbT1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9W10sZT1mdW5jdGlvbihhLGIpe3ZhciBjPXIuaXNGdW5jdGlvbihiKT9iKCk6YjtkW2QubGVuZ3RoXT1lbmNvZGVVUklDb21wb25lbnQoYSkrXCI9XCIrZW5jb2RlVVJJQ29tcG9uZW50KG51bGw9PWM/XCJcIjpjKX07aWYoci5pc0FycmF5KGEpfHxhLmpxdWVyeSYmIXIuaXNQbGFpbk9iamVjdChhKSlyLmVhY2goYSxmdW5jdGlvbigpe2UodGhpcy5uYW1lLHRoaXMudmFsdWUpfSk7ZWxzZSBmb3IoYyBpbiBhKXhiKGMsYVtjXSxiLGUpO3JldHVybiBkLmpvaW4oXCImXCIpfSxyLmZuLmV4dGVuZCh7c2VyaWFsaXplOmZ1bmN0aW9uKCl7cmV0dXJuIHIucGFyYW0odGhpcy5zZXJpYWxpemVBcnJheSgpKX0sc2VyaWFsaXplQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgYT1yLnByb3AodGhpcyxcImVsZW1lbnRzXCIpO3JldHVybiBhP3IubWFrZUFycmF5KGEpOnRoaXN9KS5maWx0ZXIoZnVuY3Rpb24oKXt2YXIgYT10aGlzLnR5cGU7cmV0dXJuIHRoaXMubmFtZSYmIXIodGhpcykuaXMoXCI6ZGlzYWJsZWRcIikmJndiLnRlc3QodGhpcy5ub2RlTmFtZSkmJiF2Yi50ZXN0KGEpJiYodGhpcy5jaGVja2VkfHwhaWEudGVzdChhKSl9KS5tYXAoZnVuY3Rpb24oYSxiKXt2YXIgYz1yKHRoaXMpLnZhbCgpO3JldHVybiBudWxsPT1jP251bGw6ci5pc0FycmF5KGMpP3IubWFwKGMsZnVuY3Rpb24oYSl7cmV0dXJue25hbWU6Yi5uYW1lLHZhbHVlOmEucmVwbGFjZSh1YixcIlxcclxcblwiKX19KTp7bmFtZTpiLm5hbWUsdmFsdWU6Yy5yZXBsYWNlKHViLFwiXFxyXFxuXCIpfX0pLmdldCgpfX0pO3ZhciB5Yj0vJTIwL2csemI9LyMuKiQvLEFiPS8oWz8mXSlfPVteJl0qLyxCYj0vXiguKj8pOlsgXFx0XSooW15cXHJcXG5dKikkL2dtLENiPS9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLERiPS9eKD86R0VUfEhFQUQpJC8sRWI9L15cXC9cXC8vLEZiPXt9LEdiPXt9LEhiPVwiKi9cIi5jb25jYXQoXCIqXCIpLEliPWQuY3JlYXRlRWxlbWVudChcImFcIik7SWIuaHJlZj1xYi5ocmVmO2Z1bmN0aW9uIEpiKGEpe3JldHVybiBmdW5jdGlvbihiLGMpe1wic3RyaW5nXCIhPXR5cGVvZiBiJiYoYz1iLGI9XCIqXCIpO3ZhciBkLGU9MCxmPWIudG9Mb3dlckNhc2UoKS5tYXRjaChLKXx8W107aWYoci5pc0Z1bmN0aW9uKGMpKXdoaWxlKGQ9ZltlKytdKVwiK1wiPT09ZFswXT8oZD1kLnNsaWNlKDEpfHxcIipcIiwoYVtkXT1hW2RdfHxbXSkudW5zaGlmdChjKSk6KGFbZF09YVtkXXx8W10pLnB1c2goYyl9fWZ1bmN0aW9uIEtiKGEsYixjLGQpe3ZhciBlPXt9LGY9YT09PUdiO2Z1bmN0aW9uIGcoaCl7dmFyIGk7cmV0dXJuIGVbaF09ITAsci5lYWNoKGFbaF18fFtdLGZ1bmN0aW9uKGEsaCl7dmFyIGo9aChiLGMsZCk7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGp8fGZ8fGVbal0/Zj8hKGk9aik6dm9pZCAwOihiLmRhdGFUeXBlcy51bnNoaWZ0KGopLGcoaiksITEpfSksaX1yZXR1cm4gZyhiLmRhdGFUeXBlc1swXSl8fCFlW1wiKlwiXSYmZyhcIipcIil9ZnVuY3Rpb24gTGIoYSxiKXt2YXIgYyxkLGU9ci5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnN8fHt9O2ZvcihjIGluIGIpdm9pZCAwIT09YltjXSYmKChlW2NdP2E6ZHx8KGQ9e30pKVtjXT1iW2NdKTtyZXR1cm4gZCYmci5leHRlbmQoITAsYSxkKSxhfWZ1bmN0aW9uIE1iKGEsYixjKXt2YXIgZCxlLGYsZyxoPWEuY29udGVudHMsaT1hLmRhdGFUeXBlczt3aGlsZShcIipcIj09PWlbMF0paS5zaGlmdCgpLHZvaWQgMD09PWQmJihkPWEubWltZVR5cGV8fGIuZ2V0UmVzcG9uc2VIZWFkZXIoXCJDb250ZW50LVR5cGVcIikpO2lmKGQpZm9yKGUgaW4gaClpZihoW2VdJiZoW2VdLnRlc3QoZCkpe2kudW5zaGlmdChlKTticmVha31pZihpWzBdaW4gYylmPWlbMF07ZWxzZXtmb3IoZSBpbiBjKXtpZighaVswXXx8YS5jb252ZXJ0ZXJzW2UrXCIgXCIraVswXV0pe2Y9ZTticmVha31nfHwoZz1lKX1mPWZ8fGd9aWYoZilyZXR1cm4gZiE9PWlbMF0mJmkudW5zaGlmdChmKSxjW2ZdfWZ1bmN0aW9uIE5iKGEsYixjLGQpe3ZhciBlLGYsZyxoLGksaj17fSxrPWEuZGF0YVR5cGVzLnNsaWNlKCk7aWYoa1sxXSlmb3IoZyBpbiBhLmNvbnZlcnRlcnMpaltnLnRvTG93ZXJDYXNlKCldPWEuY29udmVydGVyc1tnXTtmPWsuc2hpZnQoKTt3aGlsZShmKWlmKGEucmVzcG9uc2VGaWVsZHNbZl0mJihjW2EucmVzcG9uc2VGaWVsZHNbZl1dPWIpLCFpJiZkJiZhLmRhdGFGaWx0ZXImJihiPWEuZGF0YUZpbHRlcihiLGEuZGF0YVR5cGUpKSxpPWYsZj1rLnNoaWZ0KCkpaWYoXCIqXCI9PT1mKWY9aTtlbHNlIGlmKFwiKlwiIT09aSYmaSE9PWYpe2lmKGc9altpK1wiIFwiK2ZdfHxqW1wiKiBcIitmXSwhZylmb3IoZSBpbiBqKWlmKGg9ZS5zcGxpdChcIiBcIiksaFsxXT09PWYmJihnPWpbaStcIiBcIitoWzBdXXx8altcIiogXCIraFswXV0pKXtnPT09ITA/Zz1qW2VdOmpbZV0hPT0hMCYmKGY9aFswXSxrLnVuc2hpZnQoaFsxXSkpO2JyZWFrfWlmKGchPT0hMClpZihnJiZhW1widGhyb3dzXCJdKWI9ZyhiKTtlbHNlIHRyeXtiPWcoYil9Y2F0Y2gobCl7cmV0dXJue3N0YXRlOlwicGFyc2VyZXJyb3JcIixlcnJvcjpnP2w6XCJObyBjb252ZXJzaW9uIGZyb20gXCIraStcIiB0byBcIitmfX19cmV0dXJue3N0YXRlOlwic3VjY2Vzc1wiLGRhdGE6Yn19ci5leHRlbmQoe2FjdGl2ZTowLGxhc3RNb2RpZmllZDp7fSxldGFnOnt9LGFqYXhTZXR0aW5nczp7dXJsOnFiLmhyZWYsdHlwZTpcIkdFVFwiLGlzTG9jYWw6Q2IudGVzdChxYi5wcm90b2NvbCksZ2xvYmFsOiEwLHByb2Nlc3NEYXRhOiEwLGFzeW5jOiEwLGNvbnRlbnRUeXBlOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsYWNjZXB0czp7XCIqXCI6SGIsdGV4dDpcInRleHQvcGxhaW5cIixodG1sOlwidGV4dC9odG1sXCIseG1sOlwiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbFwiLGpzb246XCJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHRcIn0sY29udGVudHM6e3htbDovXFxieG1sXFxiLyxodG1sOi9cXGJodG1sLyxqc29uOi9cXGJqc29uXFxiL30scmVzcG9uc2VGaWVsZHM6e3htbDpcInJlc3BvbnNlWE1MXCIsdGV4dDpcInJlc3BvbnNlVGV4dFwiLGpzb246XCJyZXNwb25zZUpTT05cIn0sY29udmVydGVyczp7XCIqIHRleHRcIjpTdHJpbmcsXCJ0ZXh0IGh0bWxcIjohMCxcInRleHQganNvblwiOkpTT04ucGFyc2UsXCJ0ZXh0IHhtbFwiOnIucGFyc2VYTUx9LGZsYXRPcHRpb25zOnt1cmw6ITAsY29udGV4dDohMH19LGFqYXhTZXR1cDpmdW5jdGlvbihhLGIpe3JldHVybiBiP0xiKExiKGEsci5hamF4U2V0dGluZ3MpLGIpOkxiKHIuYWpheFNldHRpbmdzLGEpfSxhamF4UHJlZmlsdGVyOkpiKEZiKSxhamF4VHJhbnNwb3J0OkpiKEdiKSxhamF4OmZ1bmN0aW9uKGIsYyl7XCJvYmplY3RcIj09dHlwZW9mIGImJihjPWIsYj12b2lkIDApLGM9Y3x8e307dmFyIGUsZixnLGgsaSxqLGssbCxtLG4sbz1yLmFqYXhTZXR1cCh7fSxjKSxwPW8uY29udGV4dHx8byxxPW8uY29udGV4dCYmKHAubm9kZVR5cGV8fHAuanF1ZXJ5KT9yKHApOnIuZXZlbnQscz1yLkRlZmVycmVkKCksdD1yLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLHU9by5zdGF0dXNDb2RlfHx7fSx2PXt9LHc9e30seD1cImNhbmNlbGVkXCIseT17cmVhZHlTdGF0ZTowLGdldFJlc3BvbnNlSGVhZGVyOmZ1bmN0aW9uKGEpe3ZhciBiO2lmKGspe2lmKCFoKXtoPXt9O3doaWxlKGI9QmIuZXhlYyhnKSloW2JbMV0udG9Mb3dlckNhc2UoKV09YlsyXX1iPWhbYS50b0xvd2VyQ2FzZSgpXX1yZXR1cm4gbnVsbD09Yj9udWxsOmJ9LGdldEFsbFJlc3BvbnNlSGVhZGVyczpmdW5jdGlvbigpe3JldHVybiBrP2c6bnVsbH0sc2V0UmVxdWVzdEhlYWRlcjpmdW5jdGlvbihhLGIpe3JldHVybiBudWxsPT1rJiYoYT13W2EudG9Mb3dlckNhc2UoKV09d1thLnRvTG93ZXJDYXNlKCldfHxhLHZbYV09YiksdGhpc30sb3ZlcnJpZGVNaW1lVHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09ayYmKG8ubWltZVR5cGU9YSksdGhpc30sc3RhdHVzQ29kZTpmdW5jdGlvbihhKXt2YXIgYjtpZihhKWlmKGspeS5hbHdheXMoYVt5LnN0YXR1c10pO2Vsc2UgZm9yKGIgaW4gYSl1W2JdPVt1W2JdLGFbYl1dO3JldHVybiB0aGlzfSxhYm9ydDpmdW5jdGlvbihhKXt2YXIgYj1hfHx4O3JldHVybiBlJiZlLmFib3J0KGIpLEEoMCxiKSx0aGlzfX07aWYocy5wcm9taXNlKHkpLG8udXJsPSgoYnx8by51cmx8fHFiLmhyZWYpK1wiXCIpLnJlcGxhY2UoRWIscWIucHJvdG9jb2wrXCIvL1wiKSxvLnR5cGU9Yy5tZXRob2R8fGMudHlwZXx8by5tZXRob2R8fG8udHlwZSxvLmRhdGFUeXBlcz0oby5kYXRhVHlwZXx8XCIqXCIpLnRvTG93ZXJDYXNlKCkubWF0Y2goSyl8fFtcIlwiXSxudWxsPT1vLmNyb3NzRG9tYWluKXtqPWQuY3JlYXRlRWxlbWVudChcImFcIik7dHJ5e2ouaHJlZj1vLnVybCxqLmhyZWY9ai5ocmVmLG8uY3Jvc3NEb21haW49SWIucHJvdG9jb2wrXCIvL1wiK0liLmhvc3QhPWoucHJvdG9jb2wrXCIvL1wiK2ouaG9zdH1jYXRjaCh6KXtvLmNyb3NzRG9tYWluPSEwfX1pZihvLmRhdGEmJm8ucHJvY2Vzc0RhdGEmJlwic3RyaW5nXCIhPXR5cGVvZiBvLmRhdGEmJihvLmRhdGE9ci5wYXJhbShvLmRhdGEsby50cmFkaXRpb25hbCkpLEtiKEZiLG8sYyx5KSxrKXJldHVybiB5O2w9ci5ldmVudCYmby5nbG9iYWwsbCYmMD09PXIuYWN0aXZlKysmJnIuZXZlbnQudHJpZ2dlcihcImFqYXhTdGFydFwiKSxvLnR5cGU9by50eXBlLnRvVXBwZXJDYXNlKCksby5oYXNDb250ZW50PSFEYi50ZXN0KG8udHlwZSksZj1vLnVybC5yZXBsYWNlKHpiLFwiXCIpLG8uaGFzQ29udGVudD9vLmRhdGEmJm8ucHJvY2Vzc0RhdGEmJjA9PT0oby5jb250ZW50VHlwZXx8XCJcIikuaW5kZXhPZihcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKSYmKG8uZGF0YT1vLmRhdGEucmVwbGFjZSh5YixcIitcIikpOihuPW8udXJsLnNsaWNlKGYubGVuZ3RoKSxvLmRhdGEmJihmKz0oc2IudGVzdChmKT9cIiZcIjpcIj9cIikrby5kYXRhLGRlbGV0ZSBvLmRhdGEpLG8uY2FjaGU9PT0hMSYmKGY9Zi5yZXBsYWNlKEFiLFwiJDFcIiksbj0oc2IudGVzdChmKT9cIiZcIjpcIj9cIikrXCJfPVwiK3JiKysgK24pLG8udXJsPWYrbiksby5pZk1vZGlmaWVkJiYoci5sYXN0TW9kaWZpZWRbZl0mJnkuc2V0UmVxdWVzdEhlYWRlcihcIklmLU1vZGlmaWVkLVNpbmNlXCIsci5sYXN0TW9kaWZpZWRbZl0pLHIuZXRhZ1tmXSYmeS5zZXRSZXF1ZXN0SGVhZGVyKFwiSWYtTm9uZS1NYXRjaFwiLHIuZXRhZ1tmXSkpLChvLmRhdGEmJm8uaGFzQ29udGVudCYmby5jb250ZW50VHlwZSE9PSExfHxjLmNvbnRlbnRUeXBlKSYmeS5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsby5jb250ZW50VHlwZSkseS5zZXRSZXF1ZXN0SGVhZGVyKFwiQWNjZXB0XCIsby5kYXRhVHlwZXNbMF0mJm8uYWNjZXB0c1tvLmRhdGFUeXBlc1swXV0/by5hY2NlcHRzW28uZGF0YVR5cGVzWzBdXSsoXCIqXCIhPT1vLmRhdGFUeXBlc1swXT9cIiwgXCIrSGIrXCI7IHE9MC4wMVwiOlwiXCIpOm8uYWNjZXB0c1tcIipcIl0pO2ZvcihtIGluIG8uaGVhZGVycyl5LnNldFJlcXVlc3RIZWFkZXIobSxvLmhlYWRlcnNbbV0pO2lmKG8uYmVmb3JlU2VuZCYmKG8uYmVmb3JlU2VuZC5jYWxsKHAseSxvKT09PSExfHxrKSlyZXR1cm4geS5hYm9ydCgpO2lmKHg9XCJhYm9ydFwiLHQuYWRkKG8uY29tcGxldGUpLHkuZG9uZShvLnN1Y2Nlc3MpLHkuZmFpbChvLmVycm9yKSxlPUtiKEdiLG8sYyx5KSl7aWYoeS5yZWFkeVN0YXRlPTEsbCYmcS50cmlnZ2VyKFwiYWpheFNlbmRcIixbeSxvXSksaylyZXR1cm4geTtvLmFzeW5jJiZvLnRpbWVvdXQ+MCYmKGk9YS5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7eS5hYm9ydChcInRpbWVvdXRcIil9LG8udGltZW91dCkpO3RyeXtrPSExLGUuc2VuZCh2LEEpfWNhdGNoKHope2lmKGspdGhyb3cgejtBKC0xLHopfX1lbHNlIEEoLTEsXCJObyBUcmFuc3BvcnRcIik7ZnVuY3Rpb24gQShiLGMsZCxoKXt2YXIgaixtLG4sdix3LHg9YztrfHwoaz0hMCxpJiZhLmNsZWFyVGltZW91dChpKSxlPXZvaWQgMCxnPWh8fFwiXCIseS5yZWFkeVN0YXRlPWI+MD80OjAsaj1iPj0yMDAmJmI8MzAwfHwzMDQ9PT1iLGQmJih2PU1iKG8seSxkKSksdj1OYihvLHYseSxqKSxqPyhvLmlmTW9kaWZpZWQmJih3PXkuZ2V0UmVzcG9uc2VIZWFkZXIoXCJMYXN0LU1vZGlmaWVkXCIpLHcmJihyLmxhc3RNb2RpZmllZFtmXT13KSx3PXkuZ2V0UmVzcG9uc2VIZWFkZXIoXCJldGFnXCIpLHcmJihyLmV0YWdbZl09dykpLDIwND09PWJ8fFwiSEVBRFwiPT09by50eXBlP3g9XCJub2NvbnRlbnRcIjozMDQ9PT1iP3g9XCJub3Rtb2RpZmllZFwiOih4PXYuc3RhdGUsbT12LmRhdGEsbj12LmVycm9yLGo9IW4pKToobj14LCFiJiZ4fHwoeD1cImVycm9yXCIsYjwwJiYoYj0wKSkpLHkuc3RhdHVzPWIseS5zdGF0dXNUZXh0PShjfHx4KStcIlwiLGo/cy5yZXNvbHZlV2l0aChwLFttLHgseV0pOnMucmVqZWN0V2l0aChwLFt5LHgsbl0pLHkuc3RhdHVzQ29kZSh1KSx1PXZvaWQgMCxsJiZxLnRyaWdnZXIoaj9cImFqYXhTdWNjZXNzXCI6XCJhamF4RXJyb3JcIixbeSxvLGo/bTpuXSksdC5maXJlV2l0aChwLFt5LHhdKSxsJiYocS50cmlnZ2VyKFwiYWpheENvbXBsZXRlXCIsW3ksb10pLC0tci5hY3RpdmV8fHIuZXZlbnQudHJpZ2dlcihcImFqYXhTdG9wXCIpKSl9cmV0dXJuIHl9LGdldEpTT046ZnVuY3Rpb24oYSxiLGMpe3JldHVybiByLmdldChhLGIsYyxcImpzb25cIil9LGdldFNjcmlwdDpmdW5jdGlvbihhLGIpe3JldHVybiByLmdldChhLHZvaWQgMCxiLFwic2NyaXB0XCIpfX0pLHIuZWFjaChbXCJnZXRcIixcInBvc3RcIl0sZnVuY3Rpb24oYSxiKXtyW2JdPWZ1bmN0aW9uKGEsYyxkLGUpe3JldHVybiByLmlzRnVuY3Rpb24oYykmJihlPWV8fGQsZD1jLGM9dm9pZCAwKSxyLmFqYXgoci5leHRlbmQoe3VybDphLHR5cGU6YixkYXRhVHlwZTplLGRhdGE6YyxzdWNjZXNzOmR9LHIuaXNQbGFpbk9iamVjdChhKSYmYSkpfX0pLHIuX2V2YWxVcmw9ZnVuY3Rpb24oYSl7cmV0dXJuIHIuYWpheCh7dXJsOmEsdHlwZTpcIkdFVFwiLGRhdGFUeXBlOlwic2NyaXB0XCIsY2FjaGU6ITAsYXN5bmM6ITEsZ2xvYmFsOiExLFwidGhyb3dzXCI6ITB9KX0sci5mbi5leHRlbmQoe3dyYXBBbGw6ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuIHRoaXNbMF0mJihyLmlzRnVuY3Rpb24oYSkmJihhPWEuY2FsbCh0aGlzWzBdKSksYj1yKGEsdGhpc1swXS5vd25lckRvY3VtZW50KS5lcSgwKS5jbG9uZSghMCksdGhpc1swXS5wYXJlbnROb2RlJiZiLmluc2VydEJlZm9yZSh0aGlzWzBdKSxiLm1hcChmdW5jdGlvbigpe3ZhciBhPXRoaXM7d2hpbGUoYS5maXJzdEVsZW1lbnRDaGlsZClhPWEuZmlyc3RFbGVtZW50Q2hpbGQ7cmV0dXJuIGF9KS5hcHBlbmQodGhpcykpLHRoaXN9LHdyYXBJbm5lcjpmdW5jdGlvbihhKXtyZXR1cm4gci5pc0Z1bmN0aW9uKGEpP3RoaXMuZWFjaChmdW5jdGlvbihiKXtyKHRoaXMpLndyYXBJbm5lcihhLmNhbGwodGhpcyxiKSl9KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1yKHRoaXMpLGM9Yi5jb250ZW50cygpO2MubGVuZ3RoP2Mud3JhcEFsbChhKTpiLmFwcGVuZChhKX0pfSx3cmFwOmZ1bmN0aW9uKGEpe3ZhciBiPXIuaXNGdW5jdGlvbihhKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3IodGhpcykud3JhcEFsbChiP2EuY2FsbCh0aGlzLGMpOmEpfSl9LHVud3JhcDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wYXJlbnQoYSkubm90KFwiYm9keVwiKS5lYWNoKGZ1bmN0aW9uKCl7cih0aGlzKS5yZXBsYWNlV2l0aCh0aGlzLmNoaWxkTm9kZXMpfSksdGhpc319KSxyLmV4cHIucHNldWRvcy5oaWRkZW49ZnVuY3Rpb24oYSl7cmV0dXJuIXIuZXhwci5wc2V1ZG9zLnZpc2libGUoYSl9LHIuZXhwci5wc2V1ZG9zLnZpc2libGU9ZnVuY3Rpb24oYSl7cmV0dXJuISEoYS5vZmZzZXRXaWR0aHx8YS5vZmZzZXRIZWlnaHR8fGEuZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGgpfSxyLmFqYXhTZXR0aW5ncy54aHI9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIG5ldyBhLlhNTEh0dHBSZXF1ZXN0fWNhdGNoKGIpe319O3ZhciBPYj17MDoyMDAsMTIyMzoyMDR9LFBiPXIuYWpheFNldHRpbmdzLnhocigpO28uY29ycz0hIVBiJiZcIndpdGhDcmVkZW50aWFsc1wiaW4gUGIsby5hamF4PVBiPSEhUGIsci5hamF4VHJhbnNwb3J0KGZ1bmN0aW9uKGIpe3ZhciBjLGQ7aWYoby5jb3JzfHxQYiYmIWIuY3Jvc3NEb21haW4pcmV0dXJue3NlbmQ6ZnVuY3Rpb24oZSxmKXt2YXIgZyxoPWIueGhyKCk7aWYoaC5vcGVuKGIudHlwZSxiLnVybCxiLmFzeW5jLGIudXNlcm5hbWUsYi5wYXNzd29yZCksYi54aHJGaWVsZHMpZm9yKGcgaW4gYi54aHJGaWVsZHMpaFtnXT1iLnhockZpZWxkc1tnXTtiLm1pbWVUeXBlJiZoLm92ZXJyaWRlTWltZVR5cGUmJmgub3ZlcnJpZGVNaW1lVHlwZShiLm1pbWVUeXBlKSxiLmNyb3NzRG9tYWlufHxlW1wiWC1SZXF1ZXN0ZWQtV2l0aFwiXXx8KGVbXCJYLVJlcXVlc3RlZC1XaXRoXCJdPVwiWE1MSHR0cFJlcXVlc3RcIik7Zm9yKGcgaW4gZSloLnNldFJlcXVlc3RIZWFkZXIoZyxlW2ddKTtjPWZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbigpe2MmJihjPWQ9aC5vbmxvYWQ9aC5vbmVycm9yPWgub25hYm9ydD1oLm9ucmVhZHlzdGF0ZWNoYW5nZT1udWxsLFwiYWJvcnRcIj09PWE/aC5hYm9ydCgpOlwiZXJyb3JcIj09PWE/XCJudW1iZXJcIiE9dHlwZW9mIGguc3RhdHVzP2YoMCxcImVycm9yXCIpOmYoaC5zdGF0dXMsaC5zdGF0dXNUZXh0KTpmKE9iW2guc3RhdHVzXXx8aC5zdGF0dXMsaC5zdGF0dXNUZXh0LFwidGV4dFwiIT09KGgucmVzcG9uc2VUeXBlfHxcInRleHRcIil8fFwic3RyaW5nXCIhPXR5cGVvZiBoLnJlc3BvbnNlVGV4dD97YmluYXJ5OmgucmVzcG9uc2V9Ont0ZXh0OmgucmVzcG9uc2VUZXh0fSxoLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSl9fSxoLm9ubG9hZD1jKCksZD1oLm9uZXJyb3I9YyhcImVycm9yXCIpLHZvaWQgMCE9PWgub25hYm9ydD9oLm9uYWJvcnQ9ZDpoLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpezQ9PT1oLnJlYWR5U3RhdGUmJmEuc2V0VGltZW91dChmdW5jdGlvbigpe2MmJmQoKX0pfSxjPWMoXCJhYm9ydFwiKTt0cnl7aC5zZW5kKGIuaGFzQ29udGVudCYmYi5kYXRhfHxudWxsKX1jYXRjaChpKXtpZihjKXRocm93IGl9fSxhYm9ydDpmdW5jdGlvbigpe2MmJmMoKX19fSksci5hamF4UHJlZmlsdGVyKGZ1bmN0aW9uKGEpe2EuY3Jvc3NEb21haW4mJihhLmNvbnRlbnRzLnNjcmlwdD0hMSl9KSxyLmFqYXhTZXR1cCh7YWNjZXB0czp7c2NyaXB0OlwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIn0sY29udGVudHM6e3NjcmlwdDovXFxiKD86amF2YXxlY21hKXNjcmlwdFxcYi99LGNvbnZlcnRlcnM6e1widGV4dCBzY3JpcHRcIjpmdW5jdGlvbihhKXtyZXR1cm4gci5nbG9iYWxFdmFsKGEpLGF9fX0pLHIuYWpheFByZWZpbHRlcihcInNjcmlwdFwiLGZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEuY2FjaGUmJihhLmNhY2hlPSExKSxhLmNyb3NzRG9tYWluJiYoYS50eXBlPVwiR0VUXCIpfSksci5hamF4VHJhbnNwb3J0KFwic2NyaXB0XCIsZnVuY3Rpb24oYSl7aWYoYS5jcm9zc0RvbWFpbil7dmFyIGIsYztyZXR1cm57c2VuZDpmdW5jdGlvbihlLGYpe2I9cihcIjxzY3JpcHQ+XCIpLnByb3Aoe2NoYXJzZXQ6YS5zY3JpcHRDaGFyc2V0LHNyYzphLnVybH0pLm9uKFwibG9hZCBlcnJvclwiLGM9ZnVuY3Rpb24oYSl7Yi5yZW1vdmUoKSxjPW51bGwsYSYmZihcImVycm9yXCI9PT1hLnR5cGU/NDA0OjIwMCxhLnR5cGUpfSksZC5oZWFkLmFwcGVuZENoaWxkKGJbMF0pfSxhYm9ydDpmdW5jdGlvbigpe2MmJmMoKX19fX0pO3ZhciBRYj1bXSxSYj0vKD0pXFw/KD89JnwkKXxcXD9cXD8vO3IuYWpheFNldHVwKHtqc29ucDpcImNhbGxiYWNrXCIsanNvbnBDYWxsYmFjazpmdW5jdGlvbigpe3ZhciBhPVFiLnBvcCgpfHxyLmV4cGFuZG8rXCJfXCIrcmIrKztyZXR1cm4gdGhpc1thXT0hMCxhfX0pLHIuYWpheFByZWZpbHRlcihcImpzb24ganNvbnBcIixmdW5jdGlvbihiLGMsZCl7dmFyIGUsZixnLGg9Yi5qc29ucCE9PSExJiYoUmIudGVzdChiLnVybCk/XCJ1cmxcIjpcInN0cmluZ1wiPT10eXBlb2YgYi5kYXRhJiYwPT09KGIuY29udGVudFR5cGV8fFwiXCIpLmluZGV4T2YoXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIikmJlJiLnRlc3QoYi5kYXRhKSYmXCJkYXRhXCIpO2lmKGh8fFwianNvbnBcIj09PWIuZGF0YVR5cGVzWzBdKXJldHVybiBlPWIuanNvbnBDYWxsYmFjaz1yLmlzRnVuY3Rpb24oYi5qc29ucENhbGxiYWNrKT9iLmpzb25wQ2FsbGJhY2soKTpiLmpzb25wQ2FsbGJhY2ssaD9iW2hdPWJbaF0ucmVwbGFjZShSYixcIiQxXCIrZSk6Yi5qc29ucCE9PSExJiYoYi51cmwrPShzYi50ZXN0KGIudXJsKT9cIiZcIjpcIj9cIikrYi5qc29ucCtcIj1cIitlKSxiLmNvbnZlcnRlcnNbXCJzY3JpcHQganNvblwiXT1mdW5jdGlvbigpe3JldHVybiBnfHxyLmVycm9yKGUrXCIgd2FzIG5vdCBjYWxsZWRcIiksZ1swXX0sYi5kYXRhVHlwZXNbMF09XCJqc29uXCIsZj1hW2VdLGFbZV09ZnVuY3Rpb24oKXtnPWFyZ3VtZW50c30sZC5hbHdheXMoZnVuY3Rpb24oKXt2b2lkIDA9PT1mP3IoYSkucmVtb3ZlUHJvcChlKTphW2VdPWYsYltlXSYmKGIuanNvbnBDYWxsYmFjaz1jLmpzb25wQ2FsbGJhY2ssUWIucHVzaChlKSksZyYmci5pc0Z1bmN0aW9uKGYpJiZmKGdbMF0pLGc9Zj12b2lkIDB9KSxcInNjcmlwdFwifSksby5jcmVhdGVIVE1MRG9jdW1lbnQ9ZnVuY3Rpb24oKXt2YXIgYT1kLmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudChcIlwiKS5ib2R5O3JldHVybiBhLmlubmVySFRNTD1cIjxmb3JtPjwvZm9ybT48Zm9ybT48L2Zvcm0+XCIsMj09PWEuY2hpbGROb2Rlcy5sZW5ndGh9KCksci5wYXJzZUhUTUw9ZnVuY3Rpb24oYSxiLGMpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBhKXJldHVybltdO1wiYm9vbGVhblwiPT10eXBlb2YgYiYmKGM9YixiPSExKTt2YXIgZSxmLGc7cmV0dXJuIGJ8fChvLmNyZWF0ZUhUTUxEb2N1bWVudD8oYj1kLmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudChcIlwiKSxlPWIuY3JlYXRlRWxlbWVudChcImJhc2VcIiksZS5ocmVmPWQubG9jYXRpb24uaHJlZixiLmhlYWQuYXBwZW5kQ2hpbGQoZSkpOmI9ZCksZj1CLmV4ZWMoYSksZz0hYyYmW10sZj9bYi5jcmVhdGVFbGVtZW50KGZbMV0pXTooZj1wYShbYV0sYixnKSxnJiZnLmxlbmd0aCYmcihnKS5yZW1vdmUoKSxyLm1lcmdlKFtdLGYuY2hpbGROb2RlcykpfSxyLmZuLmxvYWQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnPXRoaXMsaD1hLmluZGV4T2YoXCIgXCIpO3JldHVybiBoPi0xJiYoZD1tYihhLnNsaWNlKGgpKSxhPWEuc2xpY2UoMCxoKSksci5pc0Z1bmN0aW9uKGIpPyhjPWIsYj12b2lkIDApOmImJlwib2JqZWN0XCI9PXR5cGVvZiBiJiYoZT1cIlBPU1RcIiksZy5sZW5ndGg+MCYmci5hamF4KHt1cmw6YSx0eXBlOmV8fFwiR0VUXCIsZGF0YVR5cGU6XCJodG1sXCIsZGF0YTpifSkuZG9uZShmdW5jdGlvbihhKXtmPWFyZ3VtZW50cyxnLmh0bWwoZD9yKFwiPGRpdj5cIikuYXBwZW5kKHIucGFyc2VIVE1MKGEpKS5maW5kKGQpOmEpfSkuYWx3YXlzKGMmJmZ1bmN0aW9uKGEsYil7Zy5lYWNoKGZ1bmN0aW9uKCl7Yy5hcHBseSh0aGlzLGZ8fFthLnJlc3BvbnNlVGV4dCxiLGFdKX0pfSksdGhpc30sci5lYWNoKFtcImFqYXhTdGFydFwiLFwiYWpheFN0b3BcIixcImFqYXhDb21wbGV0ZVwiLFwiYWpheEVycm9yXCIsXCJhamF4U3VjY2Vzc1wiLFwiYWpheFNlbmRcIl0sZnVuY3Rpb24oYSxiKXtyLmZuW2JdPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLm9uKGIsYSl9fSksci5leHByLnBzZXVkb3MuYW5pbWF0ZWQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHIuZ3JlcChyLnRpbWVycyxmdW5jdGlvbihiKXtyZXR1cm4gYT09PWIuZWxlbX0pLmxlbmd0aH07ZnVuY3Rpb24gU2IoYSl7cmV0dXJuIHIuaXNXaW5kb3coYSk/YTo5PT09YS5ub2RlVHlwZSYmYS5kZWZhdWx0Vmlld31yLm9mZnNldD17c2V0T2Zmc2V0OmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGYsZyxoLGksaixrPXIuY3NzKGEsXCJwb3NpdGlvblwiKSxsPXIoYSksbT17fTtcInN0YXRpY1wiPT09ayYmKGEuc3R5bGUucG9zaXRpb249XCJyZWxhdGl2ZVwiKSxoPWwub2Zmc2V0KCksZj1yLmNzcyhhLFwidG9wXCIpLGk9ci5jc3MoYSxcImxlZnRcIiksaj0oXCJhYnNvbHV0ZVwiPT09a3x8XCJmaXhlZFwiPT09aykmJihmK2kpLmluZGV4T2YoXCJhdXRvXCIpPi0xLGo/KGQ9bC5wb3NpdGlvbigpLGc9ZC50b3AsZT1kLmxlZnQpOihnPXBhcnNlRmxvYXQoZil8fDAsZT1wYXJzZUZsb2F0KGkpfHwwKSxyLmlzRnVuY3Rpb24oYikmJihiPWIuY2FsbChhLGMsci5leHRlbmQoe30saCkpKSxudWxsIT1iLnRvcCYmKG0udG9wPWIudG9wLWgudG9wK2cpLG51bGwhPWIubGVmdCYmKG0ubGVmdD1iLmxlZnQtaC5sZWZ0K2UpLFwidXNpbmdcImluIGI/Yi51c2luZy5jYWxsKGEsbSk6bC5jc3MobSl9fSxyLmZuLmV4dGVuZCh7b2Zmc2V0OmZ1bmN0aW9uKGEpe2lmKGFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHZvaWQgMD09PWE/dGhpczp0aGlzLmVhY2goZnVuY3Rpb24oYil7ci5vZmZzZXQuc2V0T2Zmc2V0KHRoaXMsYSxiKX0pO3ZhciBiLGMsZCxlLGY9dGhpc1swXTtpZihmKXJldHVybiBmLmdldENsaWVudFJlY3RzKCkubGVuZ3RoPyhkPWYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksZC53aWR0aHx8ZC5oZWlnaHQ/KGU9Zi5vd25lckRvY3VtZW50LGM9U2IoZSksYj1lLmRvY3VtZW50RWxlbWVudCx7dG9wOmQudG9wK2MucGFnZVlPZmZzZXQtYi5jbGllbnRUb3AsbGVmdDpkLmxlZnQrYy5wYWdlWE9mZnNldC1iLmNsaWVudExlZnR9KTpkKTp7dG9wOjAsbGVmdDowfX0scG9zaXRpb246ZnVuY3Rpb24oKXtpZih0aGlzWzBdKXt2YXIgYSxiLGM9dGhpc1swXSxkPXt0b3A6MCxsZWZ0OjB9O3JldHVyblwiZml4ZWRcIj09PXIuY3NzKGMsXCJwb3NpdGlvblwiKT9iPWMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk6KGE9dGhpcy5vZmZzZXRQYXJlbnQoKSxiPXRoaXMub2Zmc2V0KCksci5ub2RlTmFtZShhWzBdLFwiaHRtbFwiKXx8KGQ9YS5vZmZzZXQoKSksZD17dG9wOmQudG9wK3IuY3NzKGFbMF0sXCJib3JkZXJUb3BXaWR0aFwiLCEwKSxsZWZ0OmQubGVmdCtyLmNzcyhhWzBdLFwiYm9yZGVyTGVmdFdpZHRoXCIsITApfSkse3RvcDpiLnRvcC1kLnRvcC1yLmNzcyhjLFwibWFyZ2luVG9wXCIsITApLGxlZnQ6Yi5sZWZ0LWQubGVmdC1yLmNzcyhjLFwibWFyZ2luTGVmdFwiLCEwKX19fSxvZmZzZXRQYXJlbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9mZnNldFBhcmVudDt3aGlsZShhJiZcInN0YXRpY1wiPT09ci5jc3MoYSxcInBvc2l0aW9uXCIpKWE9YS5vZmZzZXRQYXJlbnQ7cmV0dXJuIGF8fHFhfSl9fSksci5lYWNoKHtzY3JvbGxMZWZ0OlwicGFnZVhPZmZzZXRcIixzY3JvbGxUb3A6XCJwYWdlWU9mZnNldFwifSxmdW5jdGlvbihhLGIpe3ZhciBjPVwicGFnZVlPZmZzZXRcIj09PWI7ci5mblthXT1mdW5jdGlvbihkKXtyZXR1cm4gUyh0aGlzLGZ1bmN0aW9uKGEsZCxlKXt2YXIgZj1TYihhKTtyZXR1cm4gdm9pZCAwPT09ZT9mP2ZbYl06YVtkXTp2b2lkKGY/Zi5zY3JvbGxUbyhjP2YucGFnZVhPZmZzZXQ6ZSxjP2U6Zi5wYWdlWU9mZnNldCk6YVtkXT1lKX0sYSxkLGFyZ3VtZW50cy5sZW5ndGgpfX0pLHIuZWFjaChbXCJ0b3BcIixcImxlZnRcIl0sZnVuY3Rpb24oYSxiKXtyLmNzc0hvb2tzW2JdPU9hKG8ucGl4ZWxQb3NpdGlvbixmdW5jdGlvbihhLGMpe2lmKGMpcmV0dXJuIGM9TmEoYSxiKSxMYS50ZXN0KGMpP3IoYSkucG9zaXRpb24oKVtiXStcInB4XCI6Y30pfSksci5lYWNoKHtIZWlnaHQ6XCJoZWlnaHRcIixXaWR0aDpcIndpZHRoXCJ9LGZ1bmN0aW9uKGEsYil7ci5lYWNoKHtwYWRkaW5nOlwiaW5uZXJcIithLGNvbnRlbnQ6YixcIlwiOlwib3V0ZXJcIithfSxmdW5jdGlvbihjLGQpe3IuZm5bZF09ZnVuY3Rpb24oZSxmKXt2YXIgZz1hcmd1bWVudHMubGVuZ3RoJiYoY3x8XCJib29sZWFuXCIhPXR5cGVvZiBlKSxoPWN8fChlPT09ITB8fGY9PT0hMD9cIm1hcmdpblwiOlwiYm9yZGVyXCIpO3JldHVybiBTKHRoaXMsZnVuY3Rpb24oYixjLGUpe3ZhciBmO3JldHVybiByLmlzV2luZG93KGIpPzA9PT1kLmluZGV4T2YoXCJvdXRlclwiKT9iW1wiaW5uZXJcIithXTpiLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFtcImNsaWVudFwiK2FdOjk9PT1iLm5vZGVUeXBlPyhmPWIuZG9jdW1lbnRFbGVtZW50LE1hdGgubWF4KGIuYm9keVtcInNjcm9sbFwiK2FdLGZbXCJzY3JvbGxcIithXSxiLmJvZHlbXCJvZmZzZXRcIithXSxmW1wib2Zmc2V0XCIrYV0sZltcImNsaWVudFwiK2FdKSk6dm9pZCAwPT09ZT9yLmNzcyhiLGMsaCk6ci5zdHlsZShiLGMsZSxoKX0sYixnP2U6dm9pZCAwLGcpfX0pfSksci5mbi5leHRlbmQoe2JpbmQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB0aGlzLm9uKGEsbnVsbCxiLGMpfSx1bmJpbmQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5vZmYoYSxudWxsLGIpfSxkZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5vbihiLGEsYyxkKX0sdW5kZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMub2ZmKGEsXCIqKlwiKTp0aGlzLm9mZihiLGF8fFwiKipcIixjKX19KSxyLnBhcnNlSlNPTj1KU09OLnBhcnNlLFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lKFwianF1ZXJ5XCIsW10sZnVuY3Rpb24oKXtyZXR1cm4gcn0pO3ZhciBUYj1hLmpRdWVyeSxVYj1hLiQ7cmV0dXJuIHIubm9Db25mbGljdD1mdW5jdGlvbihiKXtyZXR1cm4gYS4kPT09ciYmKGEuJD1VYiksYiYmYS5qUXVlcnk9PT1yJiYoYS5qUXVlcnk9VGIpLHJ9LGJ8fChhLmpRdWVyeT1hLiQ9cikscn0pO1xyXG4iLCIvLyBqUXVlcnkgTWFzayBQbHVnaW4gdjEuMTQuMTNcclxuLy8gZ2l0aHViLmNvbS9pZ29yZXNjb2Jhci9qUXVlcnktTWFzay1QbHVnaW5cclxudmFyICRqc2NvbXA9e3Njb3BlOnt9LGZpbmRJbnRlcm5hbDpmdW5jdGlvbihhLGwsZCl7YSBpbnN0YW5jZW9mIFN0cmluZyYmKGE9U3RyaW5nKGEpKTtmb3IodmFyIHA9YS5sZW5ndGgsaD0wO2g8cDtoKyspe3ZhciBiPWFbaF07aWYobC5jYWxsKGQsYixoLGEpKXJldHVybntpOmgsdjpifX1yZXR1cm57aTotMSx2OnZvaWQgMH19fTskanNjb21wLmRlZmluZVByb3BlcnR5PVwiZnVuY3Rpb25cIj09dHlwZW9mIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihhLGwsZCl7aWYoZC5nZXR8fGQuc2V0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJFUzMgZG9lcyBub3Qgc3VwcG9ydCBnZXR0ZXJzIGFuZCBzZXR0ZXJzLlwiKTthIT1BcnJheS5wcm90b3R5cGUmJmEhPU9iamVjdC5wcm90b3R5cGUmJihhW2xdPWQudmFsdWUpfTtcclxuJGpzY29tcC5nZXRHbG9iYWw9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93PT09YT9hOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWwmJm51bGwhPWdsb2JhbD9nbG9iYWw6YX07JGpzY29tcC5nbG9iYWw9JGpzY29tcC5nZXRHbG9iYWwodGhpcyk7JGpzY29tcC5wb2x5ZmlsbD1mdW5jdGlvbihhLGwsZCxwKXtpZihsKXtkPSRqc2NvbXAuZ2xvYmFsO2E9YS5zcGxpdChcIi5cIik7Zm9yKHA9MDtwPGEubGVuZ3RoLTE7cCsrKXt2YXIgaD1hW3BdO2ggaW4gZHx8KGRbaF09e30pO2Q9ZFtoXX1hPWFbYS5sZW5ndGgtMV07cD1kW2FdO2w9bChwKTtsIT1wJiZudWxsIT1sJiYkanNjb21wLmRlZmluZVByb3BlcnR5KGQsYSx7Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOmx9KX19O1xyXG4kanNjb21wLnBvbHlmaWxsKFwiQXJyYXkucHJvdG90eXBlLmZpbmRcIixmdW5jdGlvbihhKXtyZXR1cm4gYT9hOmZ1bmN0aW9uKGEsZCl7cmV0dXJuICRqc2NvbXAuZmluZEludGVybmFsKHRoaXMsYSxkKS52fX0sXCJlczYtaW1wbFwiLFwiZXMzXCIpO1xyXG4oZnVuY3Rpb24oYSxsLGQpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcImpxdWVyeVwiXSxhKTpcIm9iamVjdFwiPT09dHlwZW9mIGV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9YShyZXF1aXJlKFwianF1ZXJ5XCIpKTphKGx8fGQpfSkoZnVuY3Rpb24oYSl7dmFyIGw9ZnVuY3Rpb24oYixlLGYpe3ZhciBjPXtpbnZhbGlkOltdLGdldENhcmV0OmZ1bmN0aW9uKCl7dHJ5e3ZhciBhLHI9MCxnPWIuZ2V0KDApLGU9ZG9jdW1lbnQuc2VsZWN0aW9uLGY9Zy5zZWxlY3Rpb25TdGFydDtpZihlJiYtMT09PW5hdmlnYXRvci5hcHBWZXJzaW9uLmluZGV4T2YoXCJNU0lFIDEwXCIpKWE9ZS5jcmVhdGVSYW5nZSgpLGEubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsLWMudmFsKCkubGVuZ3RoKSxyPWEudGV4dC5sZW5ndGg7ZWxzZSBpZihmfHxcIjBcIj09PWYpcj1mO3JldHVybiByfWNhdGNoKEMpe319LHNldENhcmV0OmZ1bmN0aW9uKGEpe3RyeXtpZihiLmlzKFwiOmZvY3VzXCIpKXt2YXIgYyxcclxuZz1iLmdldCgwKTtnLnNldFNlbGVjdGlvblJhbmdlP2cuc2V0U2VsZWN0aW9uUmFuZ2UoYSxhKTooYz1nLmNyZWF0ZVRleHRSYW5nZSgpLGMuY29sbGFwc2UoITApLGMubW92ZUVuZChcImNoYXJhY3RlclwiLGEpLGMubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsYSksYy5zZWxlY3QoKSl9fWNhdGNoKEIpe319LGV2ZW50czpmdW5jdGlvbigpe2Iub24oXCJrZXlkb3duLm1hc2tcIixmdW5jdGlvbihhKXtiLmRhdGEoXCJtYXNrLWtleWNvZGVcIixhLmtleUNvZGV8fGEud2hpY2gpO2IuZGF0YShcIm1hc2stcHJldml1cy12YWx1ZVwiLGIudmFsKCkpO2IuZGF0YShcIm1hc2stcHJldml1cy1jYXJldC1wb3NcIixjLmdldENhcmV0KCkpO2MubWFza0RpZ2l0UG9zTWFwT2xkPWMubWFza0RpZ2l0UG9zTWFwfSkub24oYS5qTWFza0dsb2JhbHMudXNlSW5wdXQ/XCJpbnB1dC5tYXNrXCI6XCJrZXl1cC5tYXNrXCIsYy5iZWhhdmlvdXIpLm9uKFwicGFzdGUubWFzayBkcm9wLm1hc2tcIixmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiLmtleWRvd24oKS5rZXl1cCgpfSxcclxuMTAwKX0pLm9uKFwiY2hhbmdlLm1hc2tcIixmdW5jdGlvbigpe2IuZGF0YShcImNoYW5nZWRcIiwhMCl9KS5vbihcImJsdXIubWFza1wiLGZ1bmN0aW9uKCl7ZD09PWMudmFsKCl8fGIuZGF0YShcImNoYW5nZWRcIil8fGIudHJpZ2dlcihcImNoYW5nZVwiKTtiLmRhdGEoXCJjaGFuZ2VkXCIsITEpfSkub24oXCJibHVyLm1hc2tcIixmdW5jdGlvbigpe2Q9Yy52YWwoKX0pLm9uKFwiZm9jdXMubWFza1wiLGZ1bmN0aW9uKGIpeyEwPT09Zi5zZWxlY3RPbkZvY3VzJiZhKGIudGFyZ2V0KS5zZWxlY3QoKX0pLm9uKFwiZm9jdXNvdXQubWFza1wiLGZ1bmN0aW9uKCl7Zi5jbGVhcklmTm90TWF0Y2gmJiFoLnRlc3QoYy52YWwoKSkmJmMudmFsKFwiXCIpfSl9LGdldFJlZ2V4TWFzazpmdW5jdGlvbigpe2Zvcih2YXIgYT1bXSxiLGMsZixuLGQ9MDtkPGUubGVuZ3RoO2QrKykoYj1tLnRyYW5zbGF0aW9uW2UuY2hhckF0KGQpXSk/KGM9Yi5wYXR0ZXJuLnRvU3RyaW5nKCkucmVwbGFjZSgvLnsxfSR8Xi57MX0vZyxcIlwiKSxmPWIub3B0aW9uYWwsXHJcbihiPWIucmVjdXJzaXZlKT8oYS5wdXNoKGUuY2hhckF0KGQpKSxuPXtkaWdpdDplLmNoYXJBdChkKSxwYXR0ZXJuOmN9KTphLnB1c2goZnx8Yj9jK1wiP1wiOmMpKTphLnB1c2goZS5jaGFyQXQoZCkucmVwbGFjZSgvWy1cXC9cXFxcXiQqKz8uKCl8W1xcXXt9XS9nLFwiXFxcXCQmXCIpKTthPWEuam9pbihcIlwiKTtuJiYoYT1hLnJlcGxhY2UobmV3IFJlZ0V4cChcIihcIituLmRpZ2l0K1wiKC4qXCIrbi5kaWdpdCtcIik/KVwiKSxcIigkMSk/XCIpLnJlcGxhY2UobmV3IFJlZ0V4cChuLmRpZ2l0LFwiZ1wiKSxuLnBhdHRlcm4pKTtyZXR1cm4gbmV3IFJlZ0V4cChhKX0sZGVzdHJveUV2ZW50czpmdW5jdGlvbigpe2Iub2ZmKFwiaW5wdXQga2V5ZG93biBrZXl1cCBwYXN0ZSBkcm9wIGJsdXIgZm9jdXNvdXQgXCIuc3BsaXQoXCIgXCIpLmpvaW4oXCIubWFzayBcIikpfSx2YWw6ZnVuY3Rpb24oYSl7dmFyIGM9Yi5pcyhcImlucHV0XCIpP1widmFsXCI6XCJ0ZXh0XCI7aWYoMDxhcmd1bWVudHMubGVuZ3RoKXtpZihiW2NdKCkhPT1hKWJbY10oYSk7XHJcbmM9Yn1lbHNlIGM9YltjXSgpO3JldHVybiBjfSxjYWxjdWxhdGVDYXJldFBvc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9Yi5kYXRhKFwibWFzay1wcmV2aXVzLXZhbHVlXCIpfHxcIlwiLGU9Yy5nZXRNYXNrZWQoKSxnPWMuZ2V0Q2FyZXQoKTtpZihhIT09ZSl7dmFyIGY9Yi5kYXRhKFwibWFzay1wcmV2aXVzLWNhcmV0LXBvc1wiKXx8MCxlPWUubGVuZ3RoLGQ9YS5sZW5ndGgsbT1hPTAsaD0wLGw9MCxrO2ZvcihrPWc7azxlJiZjLm1hc2tEaWdpdFBvc01hcFtrXTtrKyspbSsrO2ZvcihrPWctMTswPD1rJiZjLm1hc2tEaWdpdFBvc01hcFtrXTtrLS0pYSsrO2ZvcihrPWctMTswPD1rO2stLSljLm1hc2tEaWdpdFBvc01hcFtrXSYmaCsrO2ZvcihrPWYtMTswPD1rO2stLSljLm1hc2tEaWdpdFBvc01hcE9sZFtrXSYmbCsrO2c+ZD9nPTEwKmU6Zj49ZyYmZiE9PWQ/Yy5tYXNrRGlnaXRQb3NNYXBPbGRbZ118fChmPWcsZz1nLShsLWgpLWEsYy5tYXNrRGlnaXRQb3NNYXBbZ10mJihnPWYpKTpnPmYmJlxyXG4oZz1nKyhoLWwpK20pfXJldHVybiBnfSxiZWhhdmlvdXI6ZnVuY3Rpb24oZil7Zj1mfHx3aW5kb3cuZXZlbnQ7Yy5pbnZhbGlkPVtdO3ZhciBlPWIuZGF0YShcIm1hc2sta2V5Y29kZVwiKTtpZigtMT09PWEuaW5BcnJheShlLG0uYnlQYXNzS2V5cykpe3ZhciBlPWMuZ2V0TWFza2VkKCksZz1jLmdldENhcmV0KCk7c2V0VGltZW91dChmdW5jdGlvbigpe2Muc2V0Q2FyZXQoYy5jYWxjdWxhdGVDYXJldFBvc2l0aW9uKCkpfSwxMCk7Yy52YWwoZSk7Yy5zZXRDYXJldChnKTtyZXR1cm4gYy5jYWxsYmFja3MoZil9fSxnZXRNYXNrZWQ6ZnVuY3Rpb24oYSxiKXt2YXIgZz1bXSxkPXZvaWQgMD09PWI/Yy52YWwoKTpiK1wiXCIsbj0wLGg9ZS5sZW5ndGgscT0wLGw9ZC5sZW5ndGgsaz0xLHI9XCJwdXNoXCIscD0tMSx0PTAseT1bXSx2LHo7Zi5yZXZlcnNlPyhyPVwidW5zaGlmdFwiLGs9LTEsdj0wLG49aC0xLHE9bC0xLHo9ZnVuY3Rpb24oKXtyZXR1cm4tMTxuJiYtMTxxfSk6KHY9aC0xLHo9ZnVuY3Rpb24oKXtyZXR1cm4gbjxcclxuaCYmcTxsfSk7Zm9yKHZhciBBO3ooKTspe3ZhciB4PWUuY2hhckF0KG4pLHc9ZC5jaGFyQXQocSksdT1tLnRyYW5zbGF0aW9uW3hdO2lmKHUpdy5tYXRjaCh1LnBhdHRlcm4pPyhnW3JdKHcpLHUucmVjdXJzaXZlJiYoLTE9PT1wP3A9bjpuPT09diYmbiE9PXAmJihuPXAtayksdj09PXAmJihuLT1rKSksbis9ayk6dz09PUE/KHQtLSxBPXZvaWQgMCk6dS5vcHRpb25hbD8obis9ayxxLT1rKTp1LmZhbGxiYWNrPyhnW3JdKHUuZmFsbGJhY2spLG4rPWsscS09ayk6Yy5pbnZhbGlkLnB1c2goe3A6cSx2OncsZTp1LnBhdHRlcm59KSxxKz1rO2Vsc2V7aWYoIWEpZ1tyXSh4KTt3PT09eD8oeS5wdXNoKHEpLHErPWspOihBPXgseS5wdXNoKHErdCksdCsrKTtuKz1rfX1kPWUuY2hhckF0KHYpO2ghPT1sKzF8fG0udHJhbnNsYXRpb25bZF18fGcucHVzaChkKTtnPWcuam9pbihcIlwiKTtjLm1hcE1hc2tkaWdpdFBvc2l0aW9ucyhnLHksbCk7cmV0dXJuIGd9LG1hcE1hc2tkaWdpdFBvc2l0aW9uczpmdW5jdGlvbihhLFxyXG5iLGUpe2E9Zi5yZXZlcnNlP2EubGVuZ3RoLWU6MDtjLm1hc2tEaWdpdFBvc01hcD17fTtmb3IoZT0wO2U8Yi5sZW5ndGg7ZSsrKWMubWFza0RpZ2l0UG9zTWFwW2JbZV0rYV09MX0sY2FsbGJhY2tzOmZ1bmN0aW9uKGEpe3ZhciBoPWMudmFsKCksZz1oIT09ZCxtPVtoLGEsYixmXSxxPWZ1bmN0aW9uKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZlthXSYmYiYmZlthXS5hcHBseSh0aGlzLGMpfTtxKFwib25DaGFuZ2VcIiwhMD09PWcsbSk7cShcIm9uS2V5UHJlc3NcIiwhMD09PWcsbSk7cShcIm9uQ29tcGxldGVcIixoLmxlbmd0aD09PWUubGVuZ3RoLG0pO3EoXCJvbkludmFsaWRcIiwwPGMuaW52YWxpZC5sZW5ndGgsW2gsYSxiLGMuaW52YWxpZCxmXSl9fTtiPWEoYik7dmFyIG09dGhpcyxkPWMudmFsKCksaDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBlP2UoYy52YWwoKSx2b2lkIDAsYixmKTplO20ubWFzaz1lO20ub3B0aW9ucz1mO20ucmVtb3ZlPWZ1bmN0aW9uKCl7dmFyIGE9Yy5nZXRDYXJldCgpO1xyXG5jLmRlc3Ryb3lFdmVudHMoKTtjLnZhbChtLmdldENsZWFuVmFsKCkpO2Muc2V0Q2FyZXQoYSk7cmV0dXJuIGJ9O20uZ2V0Q2xlYW5WYWw9ZnVuY3Rpb24oKXtyZXR1cm4gYy5nZXRNYXNrZWQoITApfTttLmdldE1hc2tlZFZhbD1mdW5jdGlvbihhKXtyZXR1cm4gYy5nZXRNYXNrZWQoITEsYSl9O20uaW5pdD1mdW5jdGlvbihkKXtkPWR8fCExO2Y9Znx8e307bS5jbGVhcklmTm90TWF0Y2g9YS5qTWFza0dsb2JhbHMuY2xlYXJJZk5vdE1hdGNoO20uYnlQYXNzS2V5cz1hLmpNYXNrR2xvYmFscy5ieVBhc3NLZXlzO20udHJhbnNsYXRpb249YS5leHRlbmQoe30sYS5qTWFza0dsb2JhbHMudHJhbnNsYXRpb24sZi50cmFuc2xhdGlvbik7bT1hLmV4dGVuZCghMCx7fSxtLGYpO2g9Yy5nZXRSZWdleE1hc2soKTtpZihkKWMuZXZlbnRzKCksYy52YWwoYy5nZXRNYXNrZWQoKSk7ZWxzZXtmLnBsYWNlaG9sZGVyJiZiLmF0dHIoXCJwbGFjZWhvbGRlclwiLGYucGxhY2Vob2xkZXIpO2IuZGF0YShcIm1hc2tcIikmJlxyXG5iLmF0dHIoXCJhdXRvY29tcGxldGVcIixcIm9mZlwiKTtkPTA7Zm9yKHZhciBsPSEwO2Q8ZS5sZW5ndGg7ZCsrKXt2YXIgZz1tLnRyYW5zbGF0aW9uW2UuY2hhckF0KGQpXTtpZihnJiZnLnJlY3Vyc2l2ZSl7bD0hMTticmVha319bCYmYi5hdHRyKFwibWF4bGVuZ3RoXCIsZS5sZW5ndGgpO2MuZGVzdHJveUV2ZW50cygpO2MuZXZlbnRzKCk7ZD1jLmdldENhcmV0KCk7Yy52YWwoYy5nZXRNYXNrZWQoKSk7Yy5zZXRDYXJldChkKX19O20uaW5pdCghYi5pcyhcImlucHV0XCIpKX07YS5tYXNrV2F0Y2hlcnM9e307dmFyIGQ9ZnVuY3Rpb24oKXt2YXIgYj1hKHRoaXMpLGU9e30sZj1iLmF0dHIoXCJkYXRhLW1hc2tcIik7Yi5hdHRyKFwiZGF0YS1tYXNrLXJldmVyc2VcIikmJihlLnJldmVyc2U9ITApO2IuYXR0cihcImRhdGEtbWFzay1jbGVhcmlmbm90bWF0Y2hcIikmJihlLmNsZWFySWZOb3RNYXRjaD0hMCk7XCJ0cnVlXCI9PT1iLmF0dHIoXCJkYXRhLW1hc2stc2VsZWN0b25mb2N1c1wiKSYmKGUuc2VsZWN0T25Gb2N1cz1cclxuITApO2lmKHAoYixmLGUpKXJldHVybiBiLmRhdGEoXCJtYXNrXCIsbmV3IGwodGhpcyxmLGUpKX0scD1mdW5jdGlvbihiLGUsZil7Zj1mfHx7fTt2YXIgYz1hKGIpLmRhdGEoXCJtYXNrXCIpLGQ9SlNPTi5zdHJpbmdpZnk7Yj1hKGIpLnZhbCgpfHxhKGIpLnRleHQoKTt0cnl7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGUmJihlPWUoYikpLFwib2JqZWN0XCIhPT10eXBlb2YgY3x8ZChjLm9wdGlvbnMpIT09ZChmKXx8Yy5tYXNrIT09ZX1jYXRjaCh0KXt9fSxoPWZ1bmN0aW9uKGEpe3ZhciBiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksZDthPVwib25cIithO2Q9YSBpbiBiO2R8fChiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gZH07YS5mbi5tYXNrPWZ1bmN0aW9uKGIsZCl7ZD1kfHx7fTt2YXIgZT10aGlzLnNlbGVjdG9yLGM9YS5qTWFza0dsb2JhbHMsaD1jLndhdGNoSW50ZXJ2YWwsYz1kLndhdGNoSW5wdXRzfHxjLndhdGNoSW5wdXRzLFxyXG50PWZ1bmN0aW9uKCl7aWYocCh0aGlzLGIsZCkpcmV0dXJuIGEodGhpcykuZGF0YShcIm1hc2tcIixuZXcgbCh0aGlzLGIsZCkpfTthKHRoaXMpLmVhY2godCk7ZSYmXCJcIiE9PWUmJmMmJihjbGVhckludGVydmFsKGEubWFza1dhdGNoZXJzW2VdKSxhLm1hc2tXYXRjaGVyc1tlXT1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2EoZG9jdW1lbnQpLmZpbmQoZSkuZWFjaCh0KX0saCkpO3JldHVybiB0aGlzfTthLmZuLm1hc2tlZD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5kYXRhKFwibWFza1wiKS5nZXRNYXNrZWRWYWwoYSl9O2EuZm4udW5tYXNrPWZ1bmN0aW9uKCl7Y2xlYXJJbnRlcnZhbChhLm1hc2tXYXRjaGVyc1t0aGlzLnNlbGVjdG9yXSk7ZGVsZXRlIGEubWFza1dhdGNoZXJzW3RoaXMuc2VsZWN0b3JdO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1hKHRoaXMpLmRhdGEoXCJtYXNrXCIpO2ImJmIucmVtb3ZlKCkucmVtb3ZlRGF0YShcIm1hc2tcIil9KX07YS5mbi5jbGVhblZhbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRhdGEoXCJtYXNrXCIpLmdldENsZWFuVmFsKCl9O1xyXG5hLmFwcGx5RGF0YU1hc2s9ZnVuY3Rpb24oYil7Yj1ifHxhLmpNYXNrR2xvYmFscy5tYXNrRWxlbWVudHM7KGIgaW5zdGFuY2VvZiBhP2I6YShiKSkuZmlsdGVyKGEuak1hc2tHbG9iYWxzLmRhdGFNYXNrQXR0cikuZWFjaChkKX07aD17bWFza0VsZW1lbnRzOlwiaW5wdXQsdGQsc3BhbixkaXZcIixkYXRhTWFza0F0dHI6XCIqW2RhdGEtbWFza11cIixkYXRhTWFzazohMCx3YXRjaEludGVydmFsOjMwMCx3YXRjaElucHV0czohMCx1c2VJbnB1dDohL0Nocm9tZVxcL1syLTRdWzAtOV18U2Ftc3VuZ0Jyb3dzZXIvLnRlc3Qod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpJiZoKFwiaW5wdXRcIiksd2F0Y2hEYXRhTWFzazohMSxieVBhc3NLZXlzOls5LDE2LDE3LDE4LDM2LDM3LDM4LDM5LDQwLDkxXSx0cmFuc2xhdGlvbjp7MDp7cGF0dGVybjovXFxkL30sOTp7cGF0dGVybjovXFxkLyxvcHRpb25hbDohMH0sXCIjXCI6e3BhdHRlcm46L1xcZC8scmVjdXJzaXZlOiEwfSxBOntwYXR0ZXJuOi9bYS16QS1aMC05XS99LFxyXG5TOntwYXR0ZXJuOi9bYS16QS1aXS99fX07YS5qTWFza0dsb2JhbHM9YS5qTWFza0dsb2JhbHN8fHt9O2g9YS5qTWFza0dsb2JhbHM9YS5leHRlbmQoITAse30saCxhLmpNYXNrR2xvYmFscyk7aC5kYXRhTWFzayYmYS5hcHBseURhdGFNYXNrKCk7c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXthLmpNYXNrR2xvYmFscy53YXRjaERhdGFNYXNrJiZhLmFwcGx5RGF0YU1hc2soKX0saC53YXRjaEludGVydmFsKX0sd2luZG93LmpRdWVyeSx3aW5kb3cuWmVwdG8pO1xyXG4iLCIvKiFcclxuICogQm9vdHN0cmFwIHY0LjAuMC1hbHBoYS42IChodHRwczovL2dldGJvb3RzdHJhcC5jb20pXHJcbiAqIENvcHlyaWdodCAyMDExLTIwMTcgVGhlIEJvb3RzdHJhcCBBdXRob3JzIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvZ3JhcGhzL2NvbnRyaWJ1dG9ycylcclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICovXHJcblxyXG5pZiAodHlwZW9mIGpRdWVyeSA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICB0aHJvdyBuZXcgRXJyb3IoJ0Jvb3RzdHJhcFxcJ3MgSmF2YVNjcmlwdCByZXF1aXJlcyBqUXVlcnkuIGpRdWVyeSBtdXN0IGJlIGluY2x1ZGVkIGJlZm9yZSBCb290c3RyYXBcXCdzIEphdmFTY3JpcHQuJylcclxufVxyXG5cclxuK2Z1bmN0aW9uICgkKSB7XHJcbiAgdmFyIHZlcnNpb24gPSAkLmZuLmpxdWVyeS5zcGxpdCgnICcpWzBdLnNwbGl0KCcuJylcclxuICBpZiAoKHZlcnNpb25bMF0gPCAyICYmIHZlcnNpb25bMV0gPCA5KSB8fCAodmVyc2lvblswXSA9PSAxICYmIHZlcnNpb25bMV0gPT0gOSAmJiB2ZXJzaW9uWzJdIDwgMSkgfHwgKHZlcnNpb25bMF0gPj0gNCkpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignQm9vdHN0cmFwXFwncyBKYXZhU2NyaXB0IHJlcXVpcmVzIGF0IGxlYXN0IGpRdWVyeSB2MS45LjEgYnV0IGxlc3MgdGhhbiB2NC4wLjAnKVxyXG4gIH1cclxufShqUXVlcnkpO1xyXG5cclxuXHJcbitmdW5jdGlvbiAoKSB7XHJcblxyXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XHJcblxyXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xyXG5cclxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XHJcblxyXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cclxuXHJcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XHJcblxyXG4vKipcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogQm9vdHN0cmFwICh2NC4wLjAtYWxwaGEuNik6IHV0aWwuanNcclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICovXHJcblxyXG52YXIgVXRpbCA9IGZ1bmN0aW9uICgkKSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIFByaXZhdGUgVHJhbnNpdGlvbkVuZCBIZWxwZXJzXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gIHZhciB0cmFuc2l0aW9uID0gZmFsc2U7XHJcblxyXG4gIHZhciBNQVhfVUlEID0gMTAwMDAwMDtcclxuXHJcbiAgdmFyIFRyYW5zaXRpb25FbmRFdmVudCA9IHtcclxuICAgIFdlYmtpdFRyYW5zaXRpb246ICd3ZWJraXRUcmFuc2l0aW9uRW5kJyxcclxuICAgIE1velRyYW5zaXRpb246ICd0cmFuc2l0aW9uZW5kJyxcclxuICAgIE9UcmFuc2l0aW9uOiAnb1RyYW5zaXRpb25FbmQgb3RyYW5zaXRpb25lbmQnLFxyXG4gICAgdHJhbnNpdGlvbjogJ3RyYW5zaXRpb25lbmQnXHJcbiAgfTtcclxuXHJcbiAgLy8gc2hvdXRvdXQgQW5ndXNDcm9sbCAoaHR0cHM6Ly9nb28uZ2wvcHh3UUdwKVxyXG4gIGZ1bmN0aW9uIHRvVHlwZShvYmopIHtcclxuICAgIHJldHVybiB7fS50b1N0cmluZy5jYWxsKG9iaikubWF0Y2goL1xccyhbYS16QS1aXSspLylbMV0udG9Mb3dlckNhc2UoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGlzRWxlbWVudChvYmopIHtcclxuICAgIHJldHVybiAob2JqWzBdIHx8IG9iaikubm9kZVR5cGU7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnZXRTcGVjaWFsVHJhbnNpdGlvbkVuZEV2ZW50KCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgYmluZFR5cGU6IHRyYW5zaXRpb24uZW5kLFxyXG4gICAgICBkZWxlZ2F0ZVR5cGU6IHRyYW5zaXRpb24uZW5kLFxyXG4gICAgICBoYW5kbGU6IGZ1bmN0aW9uIGhhbmRsZShldmVudCkge1xyXG4gICAgICAgIGlmICgkKGV2ZW50LnRhcmdldCkuaXModGhpcykpIHtcclxuICAgICAgICAgIHJldHVybiBldmVudC5oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdHJhbnNpdGlvbkVuZFRlc3QoKSB7XHJcbiAgICBpZiAod2luZG93LlFVbml0KSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdib290c3RyYXAnKTtcclxuXHJcbiAgICBmb3IgKHZhciBuYW1lIGluIFRyYW5zaXRpb25FbmRFdmVudCkge1xyXG4gICAgICBpZiAoZWwuc3R5bGVbbmFtZV0gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBlbmQ6IFRyYW5zaXRpb25FbmRFdmVudFtuYW1lXVxyXG4gICAgICAgIH07XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kRW11bGF0b3IoZHVyYXRpb24pIHtcclxuICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgdmFyIGNhbGxlZCA9IGZhbHNlO1xyXG5cclxuICAgICQodGhpcykub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgY2FsbGVkID0gdHJ1ZTtcclxuICAgIH0pO1xyXG5cclxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICBpZiAoIWNhbGxlZCkge1xyXG4gICAgICAgIFV0aWwudHJpZ2dlclRyYW5zaXRpb25FbmQoX3RoaXMpO1xyXG4gICAgICB9XHJcbiAgICB9LCBkdXJhdGlvbik7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBzZXRUcmFuc2l0aW9uRW5kU3VwcG9ydCgpIHtcclxuICAgIHRyYW5zaXRpb24gPSB0cmFuc2l0aW9uRW5kVGVzdCgpO1xyXG5cclxuICAgICQuZm4uZW11bGF0ZVRyYW5zaXRpb25FbmQgPSB0cmFuc2l0aW9uRW5kRW11bGF0b3I7XHJcblxyXG4gICAgaWYgKFV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkpIHtcclxuICAgICAgJC5ldmVudC5zcGVjaWFsW1V0aWwuVFJBTlNJVElPTl9FTkRdID0gZ2V0U3BlY2lhbFRyYW5zaXRpb25FbmRFdmVudCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBQdWJsaWMgVXRpbCBBcGlcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICB2YXIgVXRpbCA9IHtcclxuXHJcbiAgICBUUkFOU0lUSU9OX0VORDogJ2JzVHJhbnNpdGlvbkVuZCcsXHJcblxyXG4gICAgZ2V0VUlEOiBmdW5jdGlvbiBnZXRVSUQocHJlZml4KSB7XHJcbiAgICAgIGRvIHtcclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYml0d2lzZVxyXG4gICAgICAgIHByZWZpeCArPSB+fihNYXRoLnJhbmRvbSgpICogTUFYX1VJRCk7IC8vIFwifn5cIiBhY3RzIGxpa2UgYSBmYXN0ZXIgTWF0aC5mbG9vcigpIGhlcmVcclxuICAgICAgfSB3aGlsZSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJlZml4KSk7XHJcbiAgICAgIHJldHVybiBwcmVmaXg7XHJcbiAgICB9LFxyXG4gICAgZ2V0U2VsZWN0b3JGcm9tRWxlbWVudDogZnVuY3Rpb24gZ2V0U2VsZWN0b3JGcm9tRWxlbWVudChlbGVtZW50KSB7XHJcbiAgICAgIHZhciBzZWxlY3RvciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXRhcmdldCcpO1xyXG5cclxuICAgICAgaWYgKCFzZWxlY3Rvcikge1xyXG4gICAgICAgIHNlbGVjdG9yID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSB8fCAnJztcclxuICAgICAgICBzZWxlY3RvciA9IC9eI1thLXpdL2kudGVzdChzZWxlY3RvcikgPyBzZWxlY3RvciA6IG51bGw7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBzZWxlY3RvcjtcclxuICAgIH0sXHJcbiAgICByZWZsb3c6IGZ1bmN0aW9uIHJlZmxvdyhlbGVtZW50KSB7XHJcbiAgICAgIHJldHVybiBlbGVtZW50Lm9mZnNldEhlaWdodDtcclxuICAgIH0sXHJcbiAgICB0cmlnZ2VyVHJhbnNpdGlvbkVuZDogZnVuY3Rpb24gdHJpZ2dlclRyYW5zaXRpb25FbmQoZWxlbWVudCkge1xyXG4gICAgICAkKGVsZW1lbnQpLnRyaWdnZXIodHJhbnNpdGlvbi5lbmQpO1xyXG4gICAgfSxcclxuICAgIHN1cHBvcnRzVHJhbnNpdGlvbkVuZDogZnVuY3Rpb24gc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkge1xyXG4gICAgICByZXR1cm4gQm9vbGVhbih0cmFuc2l0aW9uKTtcclxuICAgIH0sXHJcbiAgICB0eXBlQ2hlY2tDb25maWc6IGZ1bmN0aW9uIHR5cGVDaGVja0NvbmZpZyhjb21wb25lbnROYW1lLCBjb25maWcsIGNvbmZpZ1R5cGVzKSB7XHJcbiAgICAgIGZvciAodmFyIHByb3BlcnR5IGluIGNvbmZpZ1R5cGVzKSB7XHJcbiAgICAgICAgaWYgKGNvbmZpZ1R5cGVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xyXG4gICAgICAgICAgdmFyIGV4cGVjdGVkVHlwZXMgPSBjb25maWdUeXBlc1twcm9wZXJ0eV07XHJcbiAgICAgICAgICB2YXIgdmFsdWUgPSBjb25maWdbcHJvcGVydHldO1xyXG4gICAgICAgICAgdmFyIHZhbHVlVHlwZSA9IHZhbHVlICYmIGlzRWxlbWVudCh2YWx1ZSkgPyAnZWxlbWVudCcgOiB0b1R5cGUodmFsdWUpO1xyXG5cclxuICAgICAgICAgIGlmICghbmV3IFJlZ0V4cChleHBlY3RlZFR5cGVzKS50ZXN0KHZhbHVlVHlwZSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGNvbXBvbmVudE5hbWUudG9VcHBlckNhc2UoKSArICc6ICcgKyAoJ09wdGlvbiBcIicgKyBwcm9wZXJ0eSArICdcIiBwcm92aWRlZCB0eXBlIFwiJyArIHZhbHVlVHlwZSArICdcIiAnKSArICgnYnV0IGV4cGVjdGVkIHR5cGUgXCInICsgZXhwZWN0ZWRUeXBlcyArICdcIi4nKSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgc2V0VHJhbnNpdGlvbkVuZFN1cHBvcnQoKTtcclxuXHJcbiAgcmV0dXJuIFV0aWw7XHJcbn0oalF1ZXJ5KTtcclxuXHJcbi8qKlxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBCb290c3RyYXAgKHY0LjAuMC1hbHBoYS42KTogYWxlcnQuanNcclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICovXHJcblxyXG52YXIgQWxlcnQgPSBmdW5jdGlvbiAoJCkge1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDb25zdGFudHNcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIE5BTUUgPSAnYWxlcnQnO1xyXG4gIHZhciBWRVJTSU9OID0gJzQuMC4wLWFscGhhLjYnO1xyXG4gIHZhciBEQVRBX0tFWSA9ICdicy5hbGVydCc7XHJcbiAgdmFyIEVWRU5UX0tFWSA9ICcuJyArIERBVEFfS0VZO1xyXG4gIHZhciBEQVRBX0FQSV9LRVkgPSAnLmRhdGEtYXBpJztcclxuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcclxuICB2YXIgVFJBTlNJVElPTl9EVVJBVElPTiA9IDE1MDtcclxuXHJcbiAgdmFyIFNlbGVjdG9yID0ge1xyXG4gICAgRElTTUlTUzogJ1tkYXRhLWRpc21pc3M9XCJhbGVydFwiXSdcclxuICB9O1xyXG5cclxuICB2YXIgRXZlbnQgPSB7XHJcbiAgICBDTE9TRTogJ2Nsb3NlJyArIEVWRU5UX0tFWSxcclxuICAgIENMT1NFRDogJ2Nsb3NlZCcgKyBFVkVOVF9LRVksXHJcbiAgICBDTElDS19EQVRBX0FQSTogJ2NsaWNrJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWVxyXG4gIH07XHJcblxyXG4gIHZhciBDbGFzc05hbWUgPSB7XHJcbiAgICBBTEVSVDogJ2FsZXJ0JyxcclxuICAgIEZBREU6ICdmYWRlJyxcclxuICAgIFNIT1c6ICdzaG93J1xyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIENsYXNzIERlZmluaXRpb25cclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIEFsZXJ0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQWxlcnQoZWxlbWVudCkge1xyXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWxlcnQpO1xyXG5cclxuICAgICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0dGVyc1xyXG5cclxuICAgIC8vIHB1YmxpY1xyXG5cclxuICAgIEFsZXJ0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uIGNsb3NlKGVsZW1lbnQpIHtcclxuICAgICAgZWxlbWVudCA9IGVsZW1lbnQgfHwgdGhpcy5fZWxlbWVudDtcclxuXHJcbiAgICAgIHZhciByb290RWxlbWVudCA9IHRoaXMuX2dldFJvb3RFbGVtZW50KGVsZW1lbnQpO1xyXG4gICAgICB2YXIgY3VzdG9tRXZlbnQgPSB0aGlzLl90cmlnZ2VyQ2xvc2VFdmVudChyb290RWxlbWVudCk7XHJcblxyXG4gICAgICBpZiAoY3VzdG9tRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX3JlbW92ZUVsZW1lbnQocm9vdEVsZW1lbnQpO1xyXG4gICAgfTtcclxuXHJcbiAgICBBbGVydC5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XHJcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSk7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBwcml2YXRlXHJcblxyXG4gICAgQWxlcnQucHJvdG90eXBlLl9nZXRSb290RWxlbWVudCA9IGZ1bmN0aW9uIF9nZXRSb290RWxlbWVudChlbGVtZW50KSB7XHJcbiAgICAgIHZhciBzZWxlY3RvciA9IFV0aWwuZ2V0U2VsZWN0b3JGcm9tRWxlbWVudChlbGVtZW50KTtcclxuICAgICAgdmFyIHBhcmVudCA9IGZhbHNlO1xyXG5cclxuICAgICAgaWYgKHNlbGVjdG9yKSB7XHJcbiAgICAgICAgcGFyZW50ID0gJChzZWxlY3RvcilbMF07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICghcGFyZW50KSB7XHJcbiAgICAgICAgcGFyZW50ID0gJChlbGVtZW50KS5jbG9zZXN0KCcuJyArIENsYXNzTmFtZS5BTEVSVClbMF07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBwYXJlbnQ7XHJcbiAgICB9O1xyXG5cclxuICAgIEFsZXJ0LnByb3RvdHlwZS5fdHJpZ2dlckNsb3NlRXZlbnQgPSBmdW5jdGlvbiBfdHJpZ2dlckNsb3NlRXZlbnQoZWxlbWVudCkge1xyXG4gICAgICB2YXIgY2xvc2VFdmVudCA9ICQuRXZlbnQoRXZlbnQuQ0xPU0UpO1xyXG5cclxuICAgICAgJChlbGVtZW50KS50cmlnZ2VyKGNsb3NlRXZlbnQpO1xyXG4gICAgICByZXR1cm4gY2xvc2VFdmVudDtcclxuICAgIH07XHJcblxyXG4gICAgQWxlcnQucHJvdG90eXBlLl9yZW1vdmVFbGVtZW50ID0gZnVuY3Rpb24gX3JlbW92ZUVsZW1lbnQoZWxlbWVudCkge1xyXG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcclxuXHJcbiAgICAgICQoZWxlbWVudCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpO1xyXG5cclxuICAgICAgaWYgKCFVdGlsLnN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpIHx8ICEkKGVsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZS5GQURFKSkge1xyXG4gICAgICAgIHRoaXMuX2Rlc3Ryb3lFbGVtZW50KGVsZW1lbnQpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgJChlbGVtZW50KS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzMi5fZGVzdHJveUVsZW1lbnQoZWxlbWVudCwgZXZlbnQpO1xyXG4gICAgICB9KS5lbXVsYXRlVHJhbnNpdGlvbkVuZChUUkFOU0lUSU9OX0RVUkFUSU9OKTtcclxuICAgIH07XHJcblxyXG4gICAgQWxlcnQucHJvdG90eXBlLl9kZXN0cm95RWxlbWVudCA9IGZ1bmN0aW9uIF9kZXN0cm95RWxlbWVudChlbGVtZW50KSB7XHJcbiAgICAgICQoZWxlbWVudCkuZGV0YWNoKCkudHJpZ2dlcihFdmVudC5DTE9TRUQpLnJlbW92ZSgpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBzdGF0aWNcclxuXHJcbiAgICBBbGVydC5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyICRlbGVtZW50ID0gJCh0aGlzKTtcclxuICAgICAgICB2YXIgZGF0YSA9ICRlbGVtZW50LmRhdGEoREFUQV9LRVkpO1xyXG5cclxuICAgICAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICAgIGRhdGEgPSBuZXcgQWxlcnQodGhpcyk7XHJcbiAgICAgICAgICAkZWxlbWVudC5kYXRhKERBVEFfS0VZLCBkYXRhKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChjb25maWcgPT09ICdjbG9zZScpIHtcclxuICAgICAgICAgIGRhdGFbY29uZmlnXSh0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBBbGVydC5faGFuZGxlRGlzbWlzcyA9IGZ1bmN0aW9uIF9oYW5kbGVEaXNtaXNzKGFsZXJ0SW5zdGFuY2UpIHtcclxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGlmIChldmVudCkge1xyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGFsZXJ0SW5zdGFuY2UuY2xvc2UodGhpcyk7XHJcbiAgICAgIH07XHJcbiAgICB9O1xyXG5cclxuICAgIF9jcmVhdGVDbGFzcyhBbGVydCwgbnVsbCwgW3tcclxuICAgICAga2V5OiAnVkVSU0lPTicsXHJcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICAgIHJldHVybiBWRVJTSU9OO1xyXG4gICAgICB9XHJcbiAgICB9XSk7XHJcblxyXG4gICAgcmV0dXJuIEFsZXJ0O1xyXG4gIH0oKTtcclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICogRGF0YSBBcGkgaW1wbGVtZW50YXRpb25cclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgJChkb2N1bWVudCkub24oRXZlbnQuQ0xJQ0tfREFUQV9BUEksIFNlbGVjdG9yLkRJU01JU1MsIEFsZXJ0Ll9oYW5kbGVEaXNtaXNzKG5ldyBBbGVydCgpKSk7XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIGpRdWVyeVxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkLmZuW05BTUVdID0gQWxlcnQuX2pRdWVyeUludGVyZmFjZTtcclxuICAkLmZuW05BTUVdLkNvbnN0cnVjdG9yID0gQWxlcnQ7XHJcbiAgJC5mbltOQU1FXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJC5mbltOQU1FXSA9IEpRVUVSWV9OT19DT05GTElDVDtcclxuICAgIHJldHVybiBBbGVydC5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBBbGVydDtcclxufShqUXVlcnkpO1xyXG5cclxuLyoqXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEJvb3RzdHJhcCAodjQuMC4wLWFscGhhLjYpOiBidXR0b24uanNcclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICovXHJcblxyXG52YXIgQnV0dG9uID0gZnVuY3Rpb24gKCQpIHtcclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICogQ29uc3RhbnRzXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gIHZhciBOQU1FID0gJ2J1dHRvbic7XHJcbiAgdmFyIFZFUlNJT04gPSAnNC4wLjAtYWxwaGEuNic7XHJcbiAgdmFyIERBVEFfS0VZID0gJ2JzLmJ1dHRvbic7XHJcbiAgdmFyIEVWRU5UX0tFWSA9ICcuJyArIERBVEFfS0VZO1xyXG4gIHZhciBEQVRBX0FQSV9LRVkgPSAnLmRhdGEtYXBpJztcclxuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcclxuXHJcbiAgdmFyIENsYXNzTmFtZSA9IHtcclxuICAgIEFDVElWRTogJ2FjdGl2ZScsXHJcbiAgICBCVVRUT046ICdidG4nLFxyXG4gICAgRk9DVVM6ICdmb2N1cydcclxuICB9O1xyXG5cclxuICB2YXIgU2VsZWN0b3IgPSB7XHJcbiAgICBEQVRBX1RPR0dMRV9DQVJST1Q6ICdbZGF0YS10b2dnbGVePVwiYnV0dG9uXCJdJyxcclxuICAgIERBVEFfVE9HR0xFOiAnW2RhdGEtdG9nZ2xlPVwiYnV0dG9uc1wiXScsXHJcbiAgICBJTlBVVDogJ2lucHV0JyxcclxuICAgIEFDVElWRTogJy5hY3RpdmUnLFxyXG4gICAgQlVUVE9OOiAnLmJ0bidcclxuICB9O1xyXG5cclxuICB2YXIgRXZlbnQgPSB7XHJcbiAgICBDTElDS19EQVRBX0FQSTogJ2NsaWNrJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWSxcclxuICAgIEZPQ1VTX0JMVVJfREFUQV9BUEk6ICdmb2N1cycgKyBFVkVOVF9LRVkgKyBEQVRBX0FQSV9LRVkgKyAnICcgKyAoJ2JsdXInICsgRVZFTlRfS0VZICsgREFUQV9BUElfS0VZKVxyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIENsYXNzIERlZmluaXRpb25cclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIEJ1dHRvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEJ1dHRvbihlbGVtZW50KSB7XHJcbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCdXR0b24pO1xyXG5cclxuICAgICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0dGVyc1xyXG5cclxuICAgIC8vIHB1YmxpY1xyXG5cclxuICAgIEJ1dHRvbi5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gdG9nZ2xlKCkge1xyXG4gICAgICB2YXIgdHJpZ2dlckNoYW5nZUV2ZW50ID0gdHJ1ZTtcclxuICAgICAgdmFyIHJvb3RFbGVtZW50ID0gJCh0aGlzLl9lbGVtZW50KS5jbG9zZXN0KFNlbGVjdG9yLkRBVEFfVE9HR0xFKVswXTtcclxuXHJcbiAgICAgIGlmIChyb290RWxlbWVudCkge1xyXG4gICAgICAgIHZhciBpbnB1dCA9ICQodGhpcy5fZWxlbWVudCkuZmluZChTZWxlY3Rvci5JTlBVVClbMF07XHJcblxyXG4gICAgICAgIGlmIChpbnB1dCkge1xyXG4gICAgICAgICAgaWYgKGlucHV0LnR5cGUgPT09ICdyYWRpbycpIHtcclxuICAgICAgICAgICAgaWYgKGlucHV0LmNoZWNrZWQgJiYgJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuQUNUSVZFKSkge1xyXG4gICAgICAgICAgICAgIHRyaWdnZXJDaGFuZ2VFdmVudCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHZhciBhY3RpdmVFbGVtZW50ID0gJChyb290RWxlbWVudCkuZmluZChTZWxlY3Rvci5BQ1RJVkUpWzBdO1xyXG5cclxuICAgICAgICAgICAgICBpZiAoYWN0aXZlRWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgJChhY3RpdmVFbGVtZW50KS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuQUNUSVZFKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBpZiAodHJpZ2dlckNoYW5nZUV2ZW50KSB7XHJcbiAgICAgICAgICAgIGlucHV0LmNoZWNrZWQgPSAhJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuQUNUSVZFKTtcclxuICAgICAgICAgICAgJChpbnB1dCkudHJpZ2dlcignY2hhbmdlJyk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgaW5wdXQuZm9jdXMoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLXByZXNzZWQnLCAhJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuQUNUSVZFKSk7XHJcblxyXG4gICAgICBpZiAodHJpZ2dlckNoYW5nZUV2ZW50KSB7XHJcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS50b2dnbGVDbGFzcyhDbGFzc05hbWUuQUNUSVZFKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBCdXR0b24ucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiBkaXNwb3NlKCkge1xyXG4gICAgICAkLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCwgREFUQV9LRVkpO1xyXG4gICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcclxuICAgIH07XHJcblxyXG4gICAgLy8gc3RhdGljXHJcblxyXG4gICAgQnV0dG9uLl9qUXVlcnlJbnRlcmZhY2UgPSBmdW5jdGlvbiBfalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZykge1xyXG4gICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuZGF0YShEQVRBX0tFWSk7XHJcblxyXG4gICAgICAgIGlmICghZGF0YSkge1xyXG4gICAgICAgICAgZGF0YSA9IG5ldyBCdXR0b24odGhpcyk7XHJcbiAgICAgICAgICAkKHRoaXMpLmRhdGEoREFUQV9LRVksIGRhdGEpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGNvbmZpZyA9PT0gJ3RvZ2dsZScpIHtcclxuICAgICAgICAgIGRhdGFbY29uZmlnXSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIF9jcmVhdGVDbGFzcyhCdXR0b24sIG51bGwsIFt7XHJcbiAgICAgIGtleTogJ1ZFUlNJT04nLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gVkVSU0lPTjtcclxuICAgICAgfVxyXG4gICAgfV0pO1xyXG5cclxuICAgIHJldHVybiBCdXR0b247XHJcbiAgfSgpO1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBEYXRhIEFwaSBpbXBsZW1lbnRhdGlvblxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkKGRvY3VtZW50KS5vbihFdmVudC5DTElDS19EQVRBX0FQSSwgU2VsZWN0b3IuREFUQV9UT0dHTEVfQ0FSUk9ULCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgdmFyIGJ1dHRvbiA9IGV2ZW50LnRhcmdldDtcclxuXHJcbiAgICBpZiAoISQoYnV0dG9uKS5oYXNDbGFzcyhDbGFzc05hbWUuQlVUVE9OKSkge1xyXG4gICAgICBidXR0b24gPSAkKGJ1dHRvbikuY2xvc2VzdChTZWxlY3Rvci5CVVRUT04pO1xyXG4gICAgfVxyXG5cclxuICAgIEJ1dHRvbi5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJChidXR0b24pLCAndG9nZ2xlJyk7XHJcbiAgfSkub24oRXZlbnQuRk9DVVNfQkxVUl9EQVRBX0FQSSwgU2VsZWN0b3IuREFUQV9UT0dHTEVfQ0FSUk9ULCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIHZhciBidXR0b24gPSAkKGV2ZW50LnRhcmdldCkuY2xvc2VzdChTZWxlY3Rvci5CVVRUT04pWzBdO1xyXG4gICAgJChidXR0b24pLnRvZ2dsZUNsYXNzKENsYXNzTmFtZS5GT0NVUywgL15mb2N1cyhpbik/JC8udGVzdChldmVudC50eXBlKSk7XHJcbiAgfSk7XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIGpRdWVyeVxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkLmZuW05BTUVdID0gQnV0dG9uLl9qUXVlcnlJbnRlcmZhY2U7XHJcbiAgJC5mbltOQU1FXS5Db25zdHJ1Y3RvciA9IEJ1dHRvbjtcclxuICAkLmZuW05BTUVdLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAkLmZuW05BTUVdID0gSlFVRVJZX05PX0NPTkZMSUNUO1xyXG4gICAgcmV0dXJuIEJ1dHRvbi5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBCdXR0b247XHJcbn0oalF1ZXJ5KTtcclxuXHJcbi8qKlxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBCb290c3RyYXAgKHY0LjAuMC1hbHBoYS42KTogY2Fyb3VzZWwuanNcclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICovXHJcblxyXG52YXIgQ2Fyb3VzZWwgPSBmdW5jdGlvbiAoJCkge1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDb25zdGFudHNcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIE5BTUUgPSAnY2Fyb3VzZWwnO1xyXG4gIHZhciBWRVJTSU9OID0gJzQuMC4wLWFscGhhLjYnO1xyXG4gIHZhciBEQVRBX0tFWSA9ICdicy5jYXJvdXNlbCc7XHJcbiAgdmFyIEVWRU5UX0tFWSA9ICcuJyArIERBVEFfS0VZO1xyXG4gIHZhciBEQVRBX0FQSV9LRVkgPSAnLmRhdGEtYXBpJztcclxuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcclxuICB2YXIgVFJBTlNJVElPTl9EVVJBVElPTiA9IDYwMDtcclxuICB2YXIgQVJST1dfTEVGVF9LRVlDT0RFID0gMzc7IC8vIEtleWJvYXJkRXZlbnQud2hpY2ggdmFsdWUgZm9yIGxlZnQgYXJyb3cga2V5XHJcbiAgdmFyIEFSUk9XX1JJR0hUX0tFWUNPREUgPSAzOTsgLy8gS2V5Ym9hcmRFdmVudC53aGljaCB2YWx1ZSBmb3IgcmlnaHQgYXJyb3cga2V5XHJcblxyXG4gIHZhciBEZWZhdWx0ID0ge1xyXG4gICAgaW50ZXJ2YWw6IDUwMDAsXHJcbiAgICBrZXlib2FyZDogdHJ1ZSxcclxuICAgIHNsaWRlOiBmYWxzZSxcclxuICAgIHBhdXNlOiAnaG92ZXInLFxyXG4gICAgd3JhcDogdHJ1ZVxyXG4gIH07XHJcblxyXG4gIHZhciBEZWZhdWx0VHlwZSA9IHtcclxuICAgIGludGVydmFsOiAnKG51bWJlcnxib29sZWFuKScsXHJcbiAgICBrZXlib2FyZDogJ2Jvb2xlYW4nLFxyXG4gICAgc2xpZGU6ICcoYm9vbGVhbnxzdHJpbmcpJyxcclxuICAgIHBhdXNlOiAnKHN0cmluZ3xib29sZWFuKScsXHJcbiAgICB3cmFwOiAnYm9vbGVhbidcclxuICB9O1xyXG5cclxuICB2YXIgRGlyZWN0aW9uID0ge1xyXG4gICAgTkVYVDogJ25leHQnLFxyXG4gICAgUFJFVjogJ3ByZXYnLFxyXG4gICAgTEVGVDogJ2xlZnQnLFxyXG4gICAgUklHSFQ6ICdyaWdodCdcclxuICB9O1xyXG5cclxuICB2YXIgRXZlbnQgPSB7XHJcbiAgICBTTElERTogJ3NsaWRlJyArIEVWRU5UX0tFWSxcclxuICAgIFNMSUQ6ICdzbGlkJyArIEVWRU5UX0tFWSxcclxuICAgIEtFWURPV046ICdrZXlkb3duJyArIEVWRU5UX0tFWSxcclxuICAgIE1PVVNFRU5URVI6ICdtb3VzZWVudGVyJyArIEVWRU5UX0tFWSxcclxuICAgIE1PVVNFTEVBVkU6ICdtb3VzZWxlYXZlJyArIEVWRU5UX0tFWSxcclxuICAgIExPQURfREFUQV9BUEk6ICdsb2FkJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWSxcclxuICAgIENMSUNLX0RBVEFfQVBJOiAnY2xpY2snICsgRVZFTlRfS0VZICsgREFUQV9BUElfS0VZXHJcbiAgfTtcclxuXHJcbiAgdmFyIENsYXNzTmFtZSA9IHtcclxuICAgIENBUk9VU0VMOiAnY2Fyb3VzZWwnLFxyXG4gICAgQUNUSVZFOiAnYWN0aXZlJyxcclxuICAgIFNMSURFOiAnc2xpZGUnLFxyXG4gICAgUklHSFQ6ICdjYXJvdXNlbC1pdGVtLXJpZ2h0JyxcclxuICAgIExFRlQ6ICdjYXJvdXNlbC1pdGVtLWxlZnQnLFxyXG4gICAgTkVYVDogJ2Nhcm91c2VsLWl0ZW0tbmV4dCcsXHJcbiAgICBQUkVWOiAnY2Fyb3VzZWwtaXRlbS1wcmV2JyxcclxuICAgIElURU06ICdjYXJvdXNlbC1pdGVtJ1xyXG4gIH07XHJcblxyXG4gIHZhciBTZWxlY3RvciA9IHtcclxuICAgIEFDVElWRTogJy5hY3RpdmUnLFxyXG4gICAgQUNUSVZFX0lURU06ICcuYWN0aXZlLmNhcm91c2VsLWl0ZW0nLFxyXG4gICAgSVRFTTogJy5jYXJvdXNlbC1pdGVtJyxcclxuICAgIE5FWFRfUFJFVjogJy5jYXJvdXNlbC1pdGVtLW5leHQsIC5jYXJvdXNlbC1pdGVtLXByZXYnLFxyXG4gICAgSU5ESUNBVE9SUzogJy5jYXJvdXNlbC1pbmRpY2F0b3JzJyxcclxuICAgIERBVEFfU0xJREU6ICdbZGF0YS1zbGlkZV0sIFtkYXRhLXNsaWRlLXRvXScsXHJcbiAgICBEQVRBX1JJREU6ICdbZGF0YS1yaWRlPVwiY2Fyb3VzZWxcIl0nXHJcbiAgfTtcclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICogQ2xhc3MgRGVmaW5pdGlvblxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICB2YXIgQ2Fyb3VzZWwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBDYXJvdXNlbChlbGVtZW50LCBjb25maWcpIHtcclxuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENhcm91c2VsKTtcclxuXHJcbiAgICAgIHRoaXMuX2l0ZW1zID0gbnVsbDtcclxuICAgICAgdGhpcy5faW50ZXJ2YWwgPSBudWxsO1xyXG4gICAgICB0aGlzLl9hY3RpdmVFbGVtZW50ID0gbnVsbDtcclxuXHJcbiAgICAgIHRoaXMuX2lzUGF1c2VkID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuX2lzU2xpZGluZyA9IGZhbHNlO1xyXG5cclxuICAgICAgdGhpcy5fY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSAkKGVsZW1lbnQpWzBdO1xyXG4gICAgICB0aGlzLl9pbmRpY2F0b3JzRWxlbWVudCA9ICQodGhpcy5fZWxlbWVudCkuZmluZChTZWxlY3Rvci5JTkRJQ0FUT1JTKVswXTtcclxuXHJcbiAgICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0dGVyc1xyXG5cclxuICAgIC8vIHB1YmxpY1xyXG5cclxuICAgIENhcm91c2VsLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24gbmV4dCgpIHtcclxuICAgICAgaWYgKHRoaXMuX2lzU2xpZGluZykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fyb3VzZWwgaXMgc2xpZGluZycpO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuX3NsaWRlKERpcmVjdGlvbi5ORVhUKTtcclxuICAgIH07XHJcblxyXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLm5leHRXaGVuVmlzaWJsZSA9IGZ1bmN0aW9uIG5leHRXaGVuVmlzaWJsZSgpIHtcclxuICAgICAgLy8gRG9uJ3QgY2FsbCBuZXh0IHdoZW4gdGhlIHBhZ2UgaXNuJ3QgdmlzaWJsZVxyXG4gICAgICBpZiAoIWRvY3VtZW50LmhpZGRlbikge1xyXG4gICAgICAgIHRoaXMubmV4dCgpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIENhcm91c2VsLnByb3RvdHlwZS5wcmV2ID0gZnVuY3Rpb24gcHJldigpIHtcclxuICAgICAgaWYgKHRoaXMuX2lzU2xpZGluZykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fyb3VzZWwgaXMgc2xpZGluZycpO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuX3NsaWRlKERpcmVjdGlvbi5QUkVWSU9VUyk7XHJcbiAgICB9O1xyXG5cclxuICAgIENhcm91c2VsLnByb3RvdHlwZS5wYXVzZSA9IGZ1bmN0aW9uIHBhdXNlKGV2ZW50KSB7XHJcbiAgICAgIGlmICghZXZlbnQpIHtcclxuICAgICAgICB0aGlzLl9pc1BhdXNlZCA9IHRydWU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICgkKHRoaXMuX2VsZW1lbnQpLmZpbmQoU2VsZWN0b3IuTkVYVF9QUkVWKVswXSAmJiBVdGlsLnN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpKSB7XHJcbiAgICAgICAgVXRpbC50cmlnZ2VyVHJhbnNpdGlvbkVuZCh0aGlzLl9lbGVtZW50KTtcclxuICAgICAgICB0aGlzLmN5Y2xlKHRydWUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjbGVhckludGVydmFsKHRoaXMuX2ludGVydmFsKTtcclxuICAgICAgdGhpcy5faW50ZXJ2YWwgPSBudWxsO1xyXG4gICAgfTtcclxuXHJcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuY3ljbGUgPSBmdW5jdGlvbiBjeWNsZShldmVudCkge1xyXG4gICAgICBpZiAoIWV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5faXNQYXVzZWQgPSBmYWxzZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHRoaXMuX2ludGVydmFsKSB7XHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLl9pbnRlcnZhbCk7XHJcbiAgICAgICAgdGhpcy5faW50ZXJ2YWwgPSBudWxsO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAodGhpcy5fY29uZmlnLmludGVydmFsICYmICF0aGlzLl9pc1BhdXNlZCkge1xyXG4gICAgICAgIHRoaXMuX2ludGVydmFsID0gc2V0SW50ZXJ2YWwoKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA/IHRoaXMubmV4dFdoZW5WaXNpYmxlIDogdGhpcy5uZXh0KS5iaW5kKHRoaXMpLCB0aGlzLl9jb25maWcuaW50ZXJ2YWwpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIENhcm91c2VsLnByb3RvdHlwZS50byA9IGZ1bmN0aW9uIHRvKGluZGV4KSB7XHJcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xyXG5cclxuICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudCA9ICQodGhpcy5fZWxlbWVudCkuZmluZChTZWxlY3Rvci5BQ1RJVkVfSVRFTSlbMF07XHJcblxyXG4gICAgICB2YXIgYWN0aXZlSW5kZXggPSB0aGlzLl9nZXRJdGVtSW5kZXgodGhpcy5fYWN0aXZlRWxlbWVudCk7XHJcblxyXG4gICAgICBpZiAoaW5kZXggPiB0aGlzLl9pdGVtcy5sZW5ndGggLSAxIHx8IGluZGV4IDwgMCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHRoaXMuX2lzU2xpZGluZykge1xyXG4gICAgICAgICQodGhpcy5fZWxlbWVudCkub25lKEV2ZW50LlNMSUQsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIHJldHVybiBfdGhpczMudG8oaW5kZXgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGFjdGl2ZUluZGV4ID09PSBpbmRleCkge1xyXG4gICAgICAgIHRoaXMucGF1c2UoKTtcclxuICAgICAgICB0aGlzLmN5Y2xlKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgZGlyZWN0aW9uID0gaW5kZXggPiBhY3RpdmVJbmRleCA/IERpcmVjdGlvbi5ORVhUIDogRGlyZWN0aW9uLlBSRVZJT1VTO1xyXG5cclxuICAgICAgdGhpcy5fc2xpZGUoZGlyZWN0aW9uLCB0aGlzLl9pdGVtc1tpbmRleF0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XHJcbiAgICAgICQodGhpcy5fZWxlbWVudCkub2ZmKEVWRU5UX0tFWSk7XHJcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSk7XHJcblxyXG4gICAgICB0aGlzLl9pdGVtcyA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2NvbmZpZyA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gICAgICB0aGlzLl9pbnRlcnZhbCA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2lzUGF1c2VkID0gbnVsbDtcclxuICAgICAgdGhpcy5faXNTbGlkaW5nID0gbnVsbDtcclxuICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudCA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2luZGljYXRvcnNFbGVtZW50ID0gbnVsbDtcclxuICAgIH07XHJcblxyXG4gICAgLy8gcHJpdmF0ZVxyXG5cclxuICAgIENhcm91c2VsLnByb3RvdHlwZS5fZ2V0Q29uZmlnID0gZnVuY3Rpb24gX2dldENvbmZpZyhjb25maWcpIHtcclxuICAgICAgY29uZmlnID0gJC5leHRlbmQoe30sIERlZmF1bHQsIGNvbmZpZyk7XHJcbiAgICAgIFV0aWwudHlwZUNoZWNrQ29uZmlnKE5BTUUsIGNvbmZpZywgRGVmYXVsdFR5cGUpO1xyXG4gICAgICByZXR1cm4gY29uZmlnO1xyXG4gICAgfTtcclxuXHJcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuX2FkZEV2ZW50TGlzdGVuZXJzID0gZnVuY3Rpb24gX2FkZEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcclxuXHJcbiAgICAgIGlmICh0aGlzLl9jb25maWcua2V5Ym9hcmQpIHtcclxuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uKEV2ZW50LktFWURPV04sIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgcmV0dXJuIF90aGlzNC5fa2V5ZG93bihldmVudCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0aGlzLl9jb25maWcucGF1c2UgPT09ICdob3ZlcicgJiYgISgnb250b3VjaHN0YXJ0JyBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpKSB7XHJcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbihFdmVudC5NT1VTRUVOVEVSLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgIHJldHVybiBfdGhpczQucGF1c2UoZXZlbnQpO1xyXG4gICAgICAgIH0pLm9uKEV2ZW50Lk1PVVNFTEVBVkUsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgcmV0dXJuIF90aGlzNC5jeWNsZShldmVudCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLl9rZXlkb3duID0gZnVuY3Rpb24gX2tleWRvd24oZXZlbnQpIHtcclxuICAgICAgaWYgKC9pbnB1dHx0ZXh0YXJlYS9pLnRlc3QoZXZlbnQudGFyZ2V0LnRhZ05hbWUpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzd2l0Y2ggKGV2ZW50LndoaWNoKSB7XHJcbiAgICAgICAgY2FzZSBBUlJPV19MRUZUX0tFWUNPREU6XHJcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgdGhpcy5wcmV2KCk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIEFSUk9XX1JJR0hUX0tFWUNPREU6XHJcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgdGhpcy5uZXh0KCk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIENhcm91c2VsLnByb3RvdHlwZS5fZ2V0SXRlbUluZGV4ID0gZnVuY3Rpb24gX2dldEl0ZW1JbmRleChlbGVtZW50KSB7XHJcbiAgICAgIHRoaXMuX2l0ZW1zID0gJC5tYWtlQXJyYXkoJChlbGVtZW50KS5wYXJlbnQoKS5maW5kKFNlbGVjdG9yLklURU0pKTtcclxuICAgICAgcmV0dXJuIHRoaXMuX2l0ZW1zLmluZGV4T2YoZWxlbWVudCk7XHJcbiAgICB9O1xyXG5cclxuICAgIENhcm91c2VsLnByb3RvdHlwZS5fZ2V0SXRlbUJ5RGlyZWN0aW9uID0gZnVuY3Rpb24gX2dldEl0ZW1CeURpcmVjdGlvbihkaXJlY3Rpb24sIGFjdGl2ZUVsZW1lbnQpIHtcclxuICAgICAgdmFyIGlzTmV4dERpcmVjdGlvbiA9IGRpcmVjdGlvbiA9PT0gRGlyZWN0aW9uLk5FWFQ7XHJcbiAgICAgIHZhciBpc1ByZXZEaXJlY3Rpb24gPSBkaXJlY3Rpb24gPT09IERpcmVjdGlvbi5QUkVWSU9VUztcclxuICAgICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5fZ2V0SXRlbUluZGV4KGFjdGl2ZUVsZW1lbnQpO1xyXG4gICAgICB2YXIgbGFzdEl0ZW1JbmRleCA9IHRoaXMuX2l0ZW1zLmxlbmd0aCAtIDE7XHJcbiAgICAgIHZhciBpc0dvaW5nVG9XcmFwID0gaXNQcmV2RGlyZWN0aW9uICYmIGFjdGl2ZUluZGV4ID09PSAwIHx8IGlzTmV4dERpcmVjdGlvbiAmJiBhY3RpdmVJbmRleCA9PT0gbGFzdEl0ZW1JbmRleDtcclxuXHJcbiAgICAgIGlmIChpc0dvaW5nVG9XcmFwICYmICF0aGlzLl9jb25maWcud3JhcCkge1xyXG4gICAgICAgIHJldHVybiBhY3RpdmVFbGVtZW50O1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgZGVsdGEgPSBkaXJlY3Rpb24gPT09IERpcmVjdGlvbi5QUkVWSU9VUyA/IC0xIDogMTtcclxuICAgICAgdmFyIGl0ZW1JbmRleCA9IChhY3RpdmVJbmRleCArIGRlbHRhKSAlIHRoaXMuX2l0ZW1zLmxlbmd0aDtcclxuXHJcbiAgICAgIHJldHVybiBpdGVtSW5kZXggPT09IC0xID8gdGhpcy5faXRlbXNbdGhpcy5faXRlbXMubGVuZ3RoIC0gMV0gOiB0aGlzLl9pdGVtc1tpdGVtSW5kZXhdO1xyXG4gICAgfTtcclxuXHJcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuX3RyaWdnZXJTbGlkZUV2ZW50ID0gZnVuY3Rpb24gX3RyaWdnZXJTbGlkZUV2ZW50KHJlbGF0ZWRUYXJnZXQsIGV2ZW50RGlyZWN0aW9uTmFtZSkge1xyXG4gICAgICB2YXIgc2xpZGVFdmVudCA9ICQuRXZlbnQoRXZlbnQuU0xJREUsIHtcclxuICAgICAgICByZWxhdGVkVGFyZ2V0OiByZWxhdGVkVGFyZ2V0LFxyXG4gICAgICAgIGRpcmVjdGlvbjogZXZlbnREaXJlY3Rpb25OYW1lXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNsaWRlRXZlbnQpO1xyXG5cclxuICAgICAgcmV0dXJuIHNsaWRlRXZlbnQ7XHJcbiAgICB9O1xyXG5cclxuICAgIENhcm91c2VsLnByb3RvdHlwZS5fc2V0QWN0aXZlSW5kaWNhdG9yRWxlbWVudCA9IGZ1bmN0aW9uIF9zZXRBY3RpdmVJbmRpY2F0b3JFbGVtZW50KGVsZW1lbnQpIHtcclxuICAgICAgaWYgKHRoaXMuX2luZGljYXRvcnNFbGVtZW50KSB7XHJcbiAgICAgICAgJCh0aGlzLl9pbmRpY2F0b3JzRWxlbWVudCkuZmluZChTZWxlY3Rvci5BQ1RJVkUpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5BQ1RJVkUpO1xyXG5cclxuICAgICAgICB2YXIgbmV4dEluZGljYXRvciA9IHRoaXMuX2luZGljYXRvcnNFbGVtZW50LmNoaWxkcmVuW3RoaXMuX2dldEl0ZW1JbmRleChlbGVtZW50KV07XHJcblxyXG4gICAgICAgIGlmIChuZXh0SW5kaWNhdG9yKSB7XHJcbiAgICAgICAgICAkKG5leHRJbmRpY2F0b3IpLmFkZENsYXNzKENsYXNzTmFtZS5BQ1RJVkUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuX3NsaWRlID0gZnVuY3Rpb24gX3NsaWRlKGRpcmVjdGlvbiwgZWxlbWVudCkge1xyXG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcclxuXHJcbiAgICAgIHZhciBhY3RpdmVFbGVtZW50ID0gJCh0aGlzLl9lbGVtZW50KS5maW5kKFNlbGVjdG9yLkFDVElWRV9JVEVNKVswXTtcclxuICAgICAgdmFyIG5leHRFbGVtZW50ID0gZWxlbWVudCB8fCBhY3RpdmVFbGVtZW50ICYmIHRoaXMuX2dldEl0ZW1CeURpcmVjdGlvbihkaXJlY3Rpb24sIGFjdGl2ZUVsZW1lbnQpO1xyXG5cclxuICAgICAgdmFyIGlzQ3ljbGluZyA9IEJvb2xlYW4odGhpcy5faW50ZXJ2YWwpO1xyXG5cclxuICAgICAgdmFyIGRpcmVjdGlvbmFsQ2xhc3NOYW1lID0gdm9pZCAwO1xyXG4gICAgICB2YXIgb3JkZXJDbGFzc05hbWUgPSB2b2lkIDA7XHJcbiAgICAgIHZhciBldmVudERpcmVjdGlvbk5hbWUgPSB2b2lkIDA7XHJcblxyXG4gICAgICBpZiAoZGlyZWN0aW9uID09PSBEaXJlY3Rpb24uTkVYVCkge1xyXG4gICAgICAgIGRpcmVjdGlvbmFsQ2xhc3NOYW1lID0gQ2xhc3NOYW1lLkxFRlQ7XHJcbiAgICAgICAgb3JkZXJDbGFzc05hbWUgPSBDbGFzc05hbWUuTkVYVDtcclxuICAgICAgICBldmVudERpcmVjdGlvbk5hbWUgPSBEaXJlY3Rpb24uTEVGVDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBkaXJlY3Rpb25hbENsYXNzTmFtZSA9IENsYXNzTmFtZS5SSUdIVDtcclxuICAgICAgICBvcmRlckNsYXNzTmFtZSA9IENsYXNzTmFtZS5QUkVWO1xyXG4gICAgICAgIGV2ZW50RGlyZWN0aW9uTmFtZSA9IERpcmVjdGlvbi5SSUdIVDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKG5leHRFbGVtZW50ICYmICQobmV4dEVsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZS5BQ1RJVkUpKSB7XHJcbiAgICAgICAgdGhpcy5faXNTbGlkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgc2xpZGVFdmVudCA9IHRoaXMuX3RyaWdnZXJTbGlkZUV2ZW50KG5leHRFbGVtZW50LCBldmVudERpcmVjdGlvbk5hbWUpO1xyXG4gICAgICBpZiAoc2xpZGVFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFhY3RpdmVFbGVtZW50IHx8ICFuZXh0RWxlbWVudCkge1xyXG4gICAgICAgIC8vIHNvbWUgd2VpcmRuZXNzIGlzIGhhcHBlbmluZywgc28gd2UgYmFpbFxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5faXNTbGlkaW5nID0gdHJ1ZTtcclxuXHJcbiAgICAgIGlmIChpc0N5Y2xpbmcpIHtcclxuICAgICAgICB0aGlzLnBhdXNlKCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX3NldEFjdGl2ZUluZGljYXRvckVsZW1lbnQobmV4dEVsZW1lbnQpO1xyXG5cclxuICAgICAgdmFyIHNsaWRFdmVudCA9ICQuRXZlbnQoRXZlbnQuU0xJRCwge1xyXG4gICAgICAgIHJlbGF0ZWRUYXJnZXQ6IG5leHRFbGVtZW50LFxyXG4gICAgICAgIGRpcmVjdGlvbjogZXZlbnREaXJlY3Rpb25OYW1lXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKFV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkgJiYgJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuU0xJREUpKSB7XHJcblxyXG4gICAgICAgICQobmV4dEVsZW1lbnQpLmFkZENsYXNzKG9yZGVyQ2xhc3NOYW1lKTtcclxuXHJcbiAgICAgICAgVXRpbC5yZWZsb3cobmV4dEVsZW1lbnQpO1xyXG5cclxuICAgICAgICAkKGFjdGl2ZUVsZW1lbnQpLmFkZENsYXNzKGRpcmVjdGlvbmFsQ2xhc3NOYW1lKTtcclxuICAgICAgICAkKG5leHRFbGVtZW50KS5hZGRDbGFzcyhkaXJlY3Rpb25hbENsYXNzTmFtZSk7XHJcblxyXG4gICAgICAgICQoYWN0aXZlRWxlbWVudCkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICQobmV4dEVsZW1lbnQpLnJlbW92ZUNsYXNzKGRpcmVjdGlvbmFsQ2xhc3NOYW1lICsgJyAnICsgb3JkZXJDbGFzc05hbWUpLmFkZENsYXNzKENsYXNzTmFtZS5BQ1RJVkUpO1xyXG5cclxuICAgICAgICAgICQoYWN0aXZlRWxlbWVudCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSArICcgJyArIG9yZGVyQ2xhc3NOYW1lICsgJyAnICsgZGlyZWN0aW9uYWxDbGFzc05hbWUpO1xyXG5cclxuICAgICAgICAgIF90aGlzNS5faXNTbGlkaW5nID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkKF90aGlzNS5fZWxlbWVudCkudHJpZ2dlcihzbGlkRXZlbnQpO1xyXG4gICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgfSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoVFJBTlNJVElPTl9EVVJBVElPTik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJChhY3RpdmVFbGVtZW50KS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuQUNUSVZFKTtcclxuICAgICAgICAkKG5leHRFbGVtZW50KS5hZGRDbGFzcyhDbGFzc05hbWUuQUNUSVZFKTtcclxuXHJcbiAgICAgICAgdGhpcy5faXNTbGlkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNsaWRFdmVudCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChpc0N5Y2xpbmcpIHtcclxuICAgICAgICB0aGlzLmN5Y2xlKCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gc3RhdGljXHJcblxyXG4gICAgQ2Fyb3VzZWwuX2pRdWVyeUludGVyZmFjZSA9IGZ1bmN0aW9uIF9qUXVlcnlJbnRlcmZhY2UoY29uZmlnKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5kYXRhKERBVEFfS0VZKTtcclxuICAgICAgICB2YXIgX2NvbmZpZyA9ICQuZXh0ZW5kKHt9LCBEZWZhdWx0LCAkKHRoaXMpLmRhdGEoKSk7XHJcblxyXG4gICAgICAgIGlmICgodHlwZW9mIGNvbmZpZyA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoY29uZmlnKSkgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICAkLmV4dGVuZChfY29uZmlnLCBjb25maWcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGFjdGlvbiA9IHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnID8gY29uZmlnIDogX2NvbmZpZy5zbGlkZTtcclxuXHJcbiAgICAgICAgaWYgKCFkYXRhKSB7XHJcbiAgICAgICAgICBkYXRhID0gbmV3IENhcm91c2VsKHRoaXMsIF9jb25maWcpO1xyXG4gICAgICAgICAgJCh0aGlzKS5kYXRhKERBVEFfS0VZLCBkYXRhKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnbnVtYmVyJykge1xyXG4gICAgICAgICAgZGF0YS50byhjb25maWcpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgIGlmIChkYXRhW2FjdGlvbl0gPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIG1ldGhvZCBuYW1lZCBcIicgKyBhY3Rpb24gKyAnXCInKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGRhdGFbYWN0aW9uXSgpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoX2NvbmZpZy5pbnRlcnZhbCkge1xyXG4gICAgICAgICAgZGF0YS5wYXVzZSgpO1xyXG4gICAgICAgICAgZGF0YS5jeWNsZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIENhcm91c2VsLl9kYXRhQXBpQ2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gX2RhdGFBcGlDbGlja0hhbmRsZXIoZXZlbnQpIHtcclxuICAgICAgdmFyIHNlbGVjdG9yID0gVXRpbC5nZXRTZWxlY3RvckZyb21FbGVtZW50KHRoaXMpO1xyXG5cclxuICAgICAgaWYgKCFzZWxlY3Rvcikge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHRhcmdldCA9ICQoc2VsZWN0b3IpWzBdO1xyXG5cclxuICAgICAgaWYgKCF0YXJnZXQgfHwgISQodGFyZ2V0KS5oYXNDbGFzcyhDbGFzc05hbWUuQ0FST1VTRUwpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgY29uZmlnID0gJC5leHRlbmQoe30sICQodGFyZ2V0KS5kYXRhKCksICQodGhpcykuZGF0YSgpKTtcclxuICAgICAgdmFyIHNsaWRlSW5kZXggPSB0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS1zbGlkZS10bycpO1xyXG5cclxuICAgICAgaWYgKHNsaWRlSW5kZXgpIHtcclxuICAgICAgICBjb25maWcuaW50ZXJ2YWwgPSBmYWxzZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgQ2Fyb3VzZWwuX2pRdWVyeUludGVyZmFjZS5jYWxsKCQodGFyZ2V0KSwgY29uZmlnKTtcclxuXHJcbiAgICAgIGlmIChzbGlkZUluZGV4KSB7XHJcbiAgICAgICAgJCh0YXJnZXQpLmRhdGEoREFUQV9LRVkpLnRvKHNsaWRlSW5kZXgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfTtcclxuXHJcbiAgICBfY3JlYXRlQ2xhc3MoQ2Fyb3VzZWwsIG51bGwsIFt7XHJcbiAgICAgIGtleTogJ1ZFUlNJT04nLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gVkVSU0lPTjtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBrZXk6ICdEZWZhdWx0JyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIERlZmF1bHQ7XHJcbiAgICAgIH1cclxuICAgIH1dKTtcclxuXHJcbiAgICByZXR1cm4gQ2Fyb3VzZWw7XHJcbiAgfSgpO1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBEYXRhIEFwaSBpbXBsZW1lbnRhdGlvblxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkKGRvY3VtZW50KS5vbihFdmVudC5DTElDS19EQVRBX0FQSSwgU2VsZWN0b3IuREFUQV9TTElERSwgQ2Fyb3VzZWwuX2RhdGFBcGlDbGlja0hhbmRsZXIpO1xyXG5cclxuICAkKHdpbmRvdykub24oRXZlbnQuTE9BRF9EQVRBX0FQSSwgZnVuY3Rpb24gKCkge1xyXG4gICAgJChTZWxlY3Rvci5EQVRBX1JJREUpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICB2YXIgJGNhcm91c2VsID0gJCh0aGlzKTtcclxuICAgICAgQ2Fyb3VzZWwuX2pRdWVyeUludGVyZmFjZS5jYWxsKCRjYXJvdXNlbCwgJGNhcm91c2VsLmRhdGEoKSk7XHJcbiAgICB9KTtcclxuICB9KTtcclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICogalF1ZXJ5XHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gICQuZm5bTkFNRV0gPSBDYXJvdXNlbC5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gICQuZm5bTkFNRV0uQ29uc3RydWN0b3IgPSBDYXJvdXNlbDtcclxuICAkLmZuW05BTUVdLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAkLmZuW05BTUVdID0gSlFVRVJZX05PX0NPTkZMSUNUO1xyXG4gICAgcmV0dXJuIENhcm91c2VsLl9qUXVlcnlJbnRlcmZhY2U7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIENhcm91c2VsO1xyXG59KGpRdWVyeSk7XHJcblxyXG4vKipcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogQm9vdHN0cmFwICh2NC4wLjAtYWxwaGEuNik6IGNvbGxhcHNlLmpzXHJcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqL1xyXG5cclxudmFyIENvbGxhcHNlID0gZnVuY3Rpb24gKCQpIHtcclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICogQ29uc3RhbnRzXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gIHZhciBOQU1FID0gJ2NvbGxhcHNlJztcclxuICB2YXIgVkVSU0lPTiA9ICc0LjAuMC1hbHBoYS42JztcclxuICB2YXIgREFUQV9LRVkgPSAnYnMuY29sbGFwc2UnO1xyXG4gIHZhciBFVkVOVF9LRVkgPSAnLicgKyBEQVRBX0tFWTtcclxuICB2YXIgREFUQV9BUElfS0VZID0gJy5kYXRhLWFwaSc7XHJcbiAgdmFyIEpRVUVSWV9OT19DT05GTElDVCA9ICQuZm5bTkFNRV07XHJcbiAgdmFyIFRSQU5TSVRJT05fRFVSQVRJT04gPSA2MDA7XHJcblxyXG4gIHZhciBEZWZhdWx0ID0ge1xyXG4gICAgdG9nZ2xlOiB0cnVlLFxyXG4gICAgcGFyZW50OiAnJ1xyXG4gIH07XHJcblxyXG4gIHZhciBEZWZhdWx0VHlwZSA9IHtcclxuICAgIHRvZ2dsZTogJ2Jvb2xlYW4nLFxyXG4gICAgcGFyZW50OiAnc3RyaW5nJ1xyXG4gIH07XHJcblxyXG4gIHZhciBFdmVudCA9IHtcclxuICAgIFNIT1c6ICdzaG93JyArIEVWRU5UX0tFWSxcclxuICAgIFNIT1dOOiAnc2hvd24nICsgRVZFTlRfS0VZLFxyXG4gICAgSElERTogJ2hpZGUnICsgRVZFTlRfS0VZLFxyXG4gICAgSElEREVOOiAnaGlkZGVuJyArIEVWRU5UX0tFWSxcclxuICAgIENMSUNLX0RBVEFfQVBJOiAnY2xpY2snICsgRVZFTlRfS0VZICsgREFUQV9BUElfS0VZXHJcbiAgfTtcclxuXHJcbiAgdmFyIENsYXNzTmFtZSA9IHtcclxuICAgIFNIT1c6ICdzaG93JyxcclxuICAgIENPTExBUFNFOiAnY29sbGFwc2UnLFxyXG4gICAgQ09MTEFQU0lORzogJ2NvbGxhcHNpbmcnLFxyXG4gICAgQ09MTEFQU0VEOiAnY29sbGFwc2VkJ1xyXG4gIH07XHJcblxyXG4gIHZhciBEaW1lbnNpb24gPSB7XHJcbiAgICBXSURUSDogJ3dpZHRoJyxcclxuICAgIEhFSUdIVDogJ2hlaWdodCdcclxuICB9O1xyXG5cclxuICB2YXIgU2VsZWN0b3IgPSB7XHJcbiAgICBBQ1RJVkVTOiAnLmNhcmQgPiAuc2hvdywgLmNhcmQgPiAuY29sbGFwc2luZycsXHJcbiAgICBEQVRBX1RPR0dMRTogJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdJ1xyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIENsYXNzIERlZmluaXRpb25cclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIENvbGxhcHNlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQ29sbGFwc2UoZWxlbWVudCwgY29uZmlnKSB7XHJcbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb2xsYXBzZSk7XHJcblxyXG4gICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTtcclxuICAgICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgIHRoaXMuX2NvbmZpZyA9IHRoaXMuX2dldENvbmZpZyhjb25maWcpO1xyXG4gICAgICB0aGlzLl90cmlnZ2VyQXJyYXkgPSAkLm1ha2VBcnJheSgkKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtocmVmPVwiIycgKyBlbGVtZW50LmlkICsgJ1wiXSwnICsgKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXRhcmdldD1cIiMnICsgZWxlbWVudC5pZCArICdcIl0nKSkpO1xyXG5cclxuICAgICAgdGhpcy5fcGFyZW50ID0gdGhpcy5fY29uZmlnLnBhcmVudCA/IHRoaXMuX2dldFBhcmVudCgpIDogbnVsbDtcclxuXHJcbiAgICAgIGlmICghdGhpcy5fY29uZmlnLnBhcmVudCkge1xyXG4gICAgICAgIHRoaXMuX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyh0aGlzLl9lbGVtZW50LCB0aGlzLl90cmlnZ2VyQXJyYXkpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAodGhpcy5fY29uZmlnLnRvZ2dsZSkge1xyXG4gICAgICAgIHRoaXMudG9nZ2xlKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBnZXR0ZXJzXHJcblxyXG4gICAgLy8gcHVibGljXHJcblxyXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLnRvZ2dsZSA9IGZ1bmN0aW9uIHRvZ2dsZSgpIHtcclxuICAgICAgaWYgKCQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpKSB7XHJcbiAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5zaG93KCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiBzaG93KCkge1xyXG4gICAgICB2YXIgX3RoaXM2ID0gdGhpcztcclxuXHJcbiAgICAgIGlmICh0aGlzLl9pc1RyYW5zaXRpb25pbmcpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbGxhcHNlIGlzIHRyYW5zaXRpb25pbmcnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgYWN0aXZlcyA9IHZvaWQgMDtcclxuICAgICAgdmFyIGFjdGl2ZXNEYXRhID0gdm9pZCAwO1xyXG5cclxuICAgICAgaWYgKHRoaXMuX3BhcmVudCkge1xyXG4gICAgICAgIGFjdGl2ZXMgPSAkLm1ha2VBcnJheSgkKHRoaXMuX3BhcmVudCkuZmluZChTZWxlY3Rvci5BQ1RJVkVTKSk7XHJcbiAgICAgICAgaWYgKCFhY3RpdmVzLmxlbmd0aCkge1xyXG4gICAgICAgICAgYWN0aXZlcyA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoYWN0aXZlcykge1xyXG4gICAgICAgIGFjdGl2ZXNEYXRhID0gJChhY3RpdmVzKS5kYXRhKERBVEFfS0VZKTtcclxuICAgICAgICBpZiAoYWN0aXZlc0RhdGEgJiYgYWN0aXZlc0RhdGEuX2lzVHJhbnNpdGlvbmluZykge1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KEV2ZW50LlNIT1cpO1xyXG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIoc3RhcnRFdmVudCk7XHJcbiAgICAgIGlmIChzdGFydEV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoYWN0aXZlcykge1xyXG4gICAgICAgIENvbGxhcHNlLl9qUXVlcnlJbnRlcmZhY2UuY2FsbCgkKGFjdGl2ZXMpLCAnaGlkZScpO1xyXG4gICAgICAgIGlmICghYWN0aXZlc0RhdGEpIHtcclxuICAgICAgICAgICQoYWN0aXZlcykuZGF0YShEQVRBX0tFWSwgbnVsbCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgZGltZW5zaW9uID0gdGhpcy5fZ2V0RGltZW5zaW9uKCk7XHJcblxyXG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5DT0xMQVBTRSkuYWRkQ2xhc3MoQ2xhc3NOYW1lLkNPTExBUFNJTkcpO1xyXG5cclxuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtkaW1lbnNpb25dID0gMDtcclxuICAgICAgdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKTtcclxuXHJcbiAgICAgIGlmICh0aGlzLl90cmlnZ2VyQXJyYXkubGVuZ3RoKSB7XHJcbiAgICAgICAgJCh0aGlzLl90cmlnZ2VyQXJyYXkpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5DT0xMQVBTRUQpLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5zZXRUcmFuc2l0aW9uaW5nKHRydWUpO1xyXG5cclxuICAgICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gY29tcGxldGUoKSB7XHJcbiAgICAgICAgJChfdGhpczYuX2VsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5DT0xMQVBTSU5HKS5hZGRDbGFzcyhDbGFzc05hbWUuQ09MTEFQU0UpLmFkZENsYXNzKENsYXNzTmFtZS5TSE9XKTtcclxuXHJcbiAgICAgICAgX3RoaXM2Ll9lbGVtZW50LnN0eWxlW2RpbWVuc2lvbl0gPSAnJztcclxuXHJcbiAgICAgICAgX3RoaXM2LnNldFRyYW5zaXRpb25pbmcoZmFsc2UpO1xyXG5cclxuICAgICAgICAkKF90aGlzNi5fZWxlbWVudCkudHJpZ2dlcihFdmVudC5TSE9XTik7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBpZiAoIVV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkpIHtcclxuICAgICAgICBjb21wbGV0ZSgpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIGNhcGl0YWxpemVkRGltZW5zaW9uID0gZGltZW5zaW9uWzBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoMSk7XHJcbiAgICAgIHZhciBzY3JvbGxTaXplID0gJ3Njcm9sbCcgKyBjYXBpdGFsaXplZERpbWVuc2lvbjtcclxuXHJcbiAgICAgICQodGhpcy5fZWxlbWVudCkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGNvbXBsZXRlKS5lbXVsYXRlVHJhbnNpdGlvbkVuZChUUkFOU0lUSU9OX0RVUkFUSU9OKTtcclxuXHJcbiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGVbZGltZW5zaW9uXSA9IHRoaXMuX2VsZW1lbnRbc2Nyb2xsU2l6ZV0gKyAncHgnO1xyXG4gICAgfTtcclxuXHJcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uIGhpZGUoKSB7XHJcbiAgICAgIHZhciBfdGhpczcgPSB0aGlzO1xyXG5cclxuICAgICAgaWYgKHRoaXMuX2lzVHJhbnNpdGlvbmluZykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ29sbGFwc2UgaXMgdHJhbnNpdGlvbmluZycpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoISQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgc3RhcnRFdmVudCA9ICQuRXZlbnQoRXZlbnQuSElERSk7XHJcbiAgICAgICQodGhpcy5fZWxlbWVudCkudHJpZ2dlcihzdGFydEV2ZW50KTtcclxuICAgICAgaWYgKHN0YXJ0RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLl9nZXREaW1lbnNpb24oKTtcclxuICAgICAgdmFyIG9mZnNldERpbWVuc2lvbiA9IGRpbWVuc2lvbiA9PT0gRGltZW5zaW9uLldJRFRIID8gJ29mZnNldFdpZHRoJyA6ICdvZmZzZXRIZWlnaHQnO1xyXG5cclxuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtkaW1lbnNpb25dID0gdGhpcy5fZWxlbWVudFtvZmZzZXREaW1lbnNpb25dICsgJ3B4JztcclxuXHJcbiAgICAgIFV0aWwucmVmbG93KHRoaXMuX2VsZW1lbnQpO1xyXG5cclxuICAgICAgJCh0aGlzLl9lbGVtZW50KS5hZGRDbGFzcyhDbGFzc05hbWUuQ09MTEFQU0lORykucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkNPTExBUFNFKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuU0hPVyk7XHJcblxyXG4gICAgICB0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIGZhbHNlKTtcclxuXHJcbiAgICAgIGlmICh0aGlzLl90cmlnZ2VyQXJyYXkubGVuZ3RoKSB7XHJcbiAgICAgICAgJCh0aGlzLl90cmlnZ2VyQXJyYXkpLmFkZENsYXNzKENsYXNzTmFtZS5DT0xMQVBTRUQpLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBmYWxzZSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuc2V0VHJhbnNpdGlvbmluZyh0cnVlKTtcclxuXHJcbiAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xyXG4gICAgICAgIF90aGlzNy5zZXRUcmFuc2l0aW9uaW5nKGZhbHNlKTtcclxuICAgICAgICAkKF90aGlzNy5fZWxlbWVudCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkNPTExBUFNJTkcpLmFkZENsYXNzKENsYXNzTmFtZS5DT0xMQVBTRSkudHJpZ2dlcihFdmVudC5ISURERU4pO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtkaW1lbnNpb25dID0gJyc7XHJcblxyXG4gICAgICBpZiAoIVV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkpIHtcclxuICAgICAgICBjb21wbGV0ZSgpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgY29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRSQU5TSVRJT05fRFVSQVRJT04pO1xyXG4gICAgfTtcclxuXHJcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuc2V0VHJhbnNpdGlvbmluZyA9IGZ1bmN0aW9uIHNldFRyYW5zaXRpb25pbmcoaXNUcmFuc2l0aW9uaW5nKSB7XHJcbiAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IGlzVHJhbnNpdGlvbmluZztcclxuICAgIH07XHJcblxyXG4gICAgQ29sbGFwc2UucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiBkaXNwb3NlKCkge1xyXG4gICAgICAkLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCwgREFUQV9LRVkpO1xyXG5cclxuICAgICAgdGhpcy5fY29uZmlnID0gbnVsbDtcclxuICAgICAgdGhpcy5fcGFyZW50ID0gbnVsbDtcclxuICAgICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgICAgIHRoaXMuX3RyaWdnZXJBcnJheSA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IG51bGw7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHByaXZhdGVcclxuXHJcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuX2dldENvbmZpZyA9IGZ1bmN0aW9uIF9nZXRDb25maWcoY29uZmlnKSB7XHJcbiAgICAgIGNvbmZpZyA9ICQuZXh0ZW5kKHt9LCBEZWZhdWx0LCBjb25maWcpO1xyXG4gICAgICBjb25maWcudG9nZ2xlID0gQm9vbGVhbihjb25maWcudG9nZ2xlKTsgLy8gY29lcmNlIHN0cmluZyB2YWx1ZXNcclxuICAgICAgVXRpbC50eXBlQ2hlY2tDb25maWcoTkFNRSwgY29uZmlnLCBEZWZhdWx0VHlwZSk7XHJcbiAgICAgIHJldHVybiBjb25maWc7XHJcbiAgICB9O1xyXG5cclxuICAgIENvbGxhcHNlLnByb3RvdHlwZS5fZ2V0RGltZW5zaW9uID0gZnVuY3Rpb24gX2dldERpbWVuc2lvbigpIHtcclxuICAgICAgdmFyIGhhc1dpZHRoID0gJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhEaW1lbnNpb24uV0lEVEgpO1xyXG4gICAgICByZXR1cm4gaGFzV2lkdGggPyBEaW1lbnNpb24uV0lEVEggOiBEaW1lbnNpb24uSEVJR0hUO1xyXG4gICAgfTtcclxuXHJcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuX2dldFBhcmVudCA9IGZ1bmN0aW9uIF9nZXRQYXJlbnQoKSB7XHJcbiAgICAgIHZhciBfdGhpczggPSB0aGlzO1xyXG5cclxuICAgICAgdmFyIHBhcmVudCA9ICQodGhpcy5fY29uZmlnLnBhcmVudClbMF07XHJcbiAgICAgIHZhciBzZWxlY3RvciA9ICdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXBhcmVudD1cIicgKyB0aGlzLl9jb25maWcucGFyZW50ICsgJ1wiXSc7XHJcblxyXG4gICAgICAkKHBhcmVudCkuZmluZChzZWxlY3RvcikuZWFjaChmdW5jdGlvbiAoaSwgZWxlbWVudCkge1xyXG4gICAgICAgIF90aGlzOC5fYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKENvbGxhcHNlLl9nZXRUYXJnZXRGcm9tRWxlbWVudChlbGVtZW50KSwgW2VsZW1lbnRdKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICByZXR1cm4gcGFyZW50O1xyXG4gICAgfTtcclxuXHJcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyA9IGZ1bmN0aW9uIF9hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MoZWxlbWVudCwgdHJpZ2dlckFycmF5KSB7XHJcbiAgICAgIGlmIChlbGVtZW50KSB7XHJcbiAgICAgICAgdmFyIGlzT3BlbiA9ICQoZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpO1xyXG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgaXNPcGVuKTtcclxuXHJcbiAgICAgICAgaWYgKHRyaWdnZXJBcnJheS5sZW5ndGgpIHtcclxuICAgICAgICAgICQodHJpZ2dlckFycmF5KS50b2dnbGVDbGFzcyhDbGFzc05hbWUuQ09MTEFQU0VELCAhaXNPcGVuKS5hdHRyKCdhcmlhLWV4cGFuZGVkJywgaXNPcGVuKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gc3RhdGljXHJcblxyXG4gICAgQ29sbGFwc2UuX2dldFRhcmdldEZyb21FbGVtZW50ID0gZnVuY3Rpb24gX2dldFRhcmdldEZyb21FbGVtZW50KGVsZW1lbnQpIHtcclxuICAgICAgdmFyIHNlbGVjdG9yID0gVXRpbC5nZXRTZWxlY3RvckZyb21FbGVtZW50KGVsZW1lbnQpO1xyXG4gICAgICByZXR1cm4gc2VsZWN0b3IgPyAkKHNlbGVjdG9yKVswXSA6IG51bGw7XHJcbiAgICB9O1xyXG5cclxuICAgIENvbGxhcHNlLl9qUXVlcnlJbnRlcmZhY2UgPSBmdW5jdGlvbiBfalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZykge1xyXG4gICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciBkYXRhID0gJHRoaXMuZGF0YShEQVRBX0tFWSk7XHJcbiAgICAgICAgdmFyIF9jb25maWcgPSAkLmV4dGVuZCh7fSwgRGVmYXVsdCwgJHRoaXMuZGF0YSgpLCAodHlwZW9mIGNvbmZpZyA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoY29uZmlnKSkgPT09ICdvYmplY3QnICYmIGNvbmZpZyk7XHJcblxyXG4gICAgICAgIGlmICghZGF0YSAmJiBfY29uZmlnLnRvZ2dsZSAmJiAvc2hvd3xoaWRlLy50ZXN0KGNvbmZpZykpIHtcclxuICAgICAgICAgIF9jb25maWcudG9nZ2xlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICAgIGRhdGEgPSBuZXcgQ29sbGFwc2UodGhpcywgX2NvbmZpZyk7XHJcbiAgICAgICAgICAkdGhpcy5kYXRhKERBVEFfS0VZLCBkYXRhKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgaWYgKGRhdGFbY29uZmlnXSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gbWV0aG9kIG5hbWVkIFwiJyArIGNvbmZpZyArICdcIicpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZGF0YVtjb25maWddKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgX2NyZWF0ZUNsYXNzKENvbGxhcHNlLCBudWxsLCBbe1xyXG4gICAgICBrZXk6ICdWRVJTSU9OJyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIFZFUlNJT047XHJcbiAgICAgIH1cclxuICAgIH0sIHtcclxuICAgICAga2V5OiAnRGVmYXVsdCcsXHJcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICAgIHJldHVybiBEZWZhdWx0O1xyXG4gICAgICB9XHJcbiAgICB9XSk7XHJcblxyXG4gICAgcmV0dXJuIENvbGxhcHNlO1xyXG4gIH0oKTtcclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICogRGF0YSBBcGkgaW1wbGVtZW50YXRpb25cclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgJChkb2N1bWVudCkub24oRXZlbnQuQ0xJQ0tfREFUQV9BUEksIFNlbGVjdG9yLkRBVEFfVE9HR0xFLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgdmFyIHRhcmdldCA9IENvbGxhcHNlLl9nZXRUYXJnZXRGcm9tRWxlbWVudCh0aGlzKTtcclxuICAgIHZhciBkYXRhID0gJCh0YXJnZXQpLmRhdGEoREFUQV9LRVkpO1xyXG4gICAgdmFyIGNvbmZpZyA9IGRhdGEgPyAndG9nZ2xlJyA6ICQodGhpcykuZGF0YSgpO1xyXG5cclxuICAgIENvbGxhcHNlLl9qUXVlcnlJbnRlcmZhY2UuY2FsbCgkKHRhcmdldCksIGNvbmZpZyk7XHJcbiAgfSk7XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIGpRdWVyeVxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkLmZuW05BTUVdID0gQ29sbGFwc2UuX2pRdWVyeUludGVyZmFjZTtcclxuICAkLmZuW05BTUVdLkNvbnN0cnVjdG9yID0gQ29sbGFwc2U7XHJcbiAgJC5mbltOQU1FXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJC5mbltOQU1FXSA9IEpRVUVSWV9OT19DT05GTElDVDtcclxuICAgIHJldHVybiBDb2xsYXBzZS5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBDb2xsYXBzZTtcclxufShqUXVlcnkpO1xyXG5cclxuLyoqXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEJvb3RzdHJhcCAodjQuMC4wLWFscGhhLjYpOiBkcm9wZG93bi5qc1xyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKi9cclxuXHJcbnZhciBEcm9wZG93biA9IGZ1bmN0aW9uICgkKSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIENvbnN0YW50c1xyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICB2YXIgTkFNRSA9ICdkcm9wZG93bic7XHJcbiAgdmFyIFZFUlNJT04gPSAnNC4wLjAtYWxwaGEuNic7XHJcbiAgdmFyIERBVEFfS0VZID0gJ2JzLmRyb3Bkb3duJztcclxuICB2YXIgRVZFTlRfS0VZID0gJy4nICsgREFUQV9LRVk7XHJcbiAgdmFyIERBVEFfQVBJX0tFWSA9ICcuZGF0YS1hcGknO1xyXG4gIHZhciBKUVVFUllfTk9fQ09ORkxJQ1QgPSAkLmZuW05BTUVdO1xyXG4gIHZhciBFU0NBUEVfS0VZQ09ERSA9IDI3OyAvLyBLZXlib2FyZEV2ZW50LndoaWNoIHZhbHVlIGZvciBFc2NhcGUgKEVzYykga2V5XHJcbiAgdmFyIEFSUk9XX1VQX0tFWUNPREUgPSAzODsgLy8gS2V5Ym9hcmRFdmVudC53aGljaCB2YWx1ZSBmb3IgdXAgYXJyb3cga2V5XHJcbiAgdmFyIEFSUk9XX0RPV05fS0VZQ09ERSA9IDQwOyAvLyBLZXlib2FyZEV2ZW50LndoaWNoIHZhbHVlIGZvciBkb3duIGFycm93IGtleVxyXG4gIHZhciBSSUdIVF9NT1VTRV9CVVRUT05fV0hJQ0ggPSAzOyAvLyBNb3VzZUV2ZW50LndoaWNoIHZhbHVlIGZvciB0aGUgcmlnaHQgYnV0dG9uIChhc3N1bWluZyBhIHJpZ2h0LWhhbmRlZCBtb3VzZSlcclxuXHJcbiAgdmFyIEV2ZW50ID0ge1xyXG4gICAgSElERTogJ2hpZGUnICsgRVZFTlRfS0VZLFxyXG4gICAgSElEREVOOiAnaGlkZGVuJyArIEVWRU5UX0tFWSxcclxuICAgIFNIT1c6ICdzaG93JyArIEVWRU5UX0tFWSxcclxuICAgIFNIT1dOOiAnc2hvd24nICsgRVZFTlRfS0VZLFxyXG4gICAgQ0xJQ0s6ICdjbGljaycgKyBFVkVOVF9LRVksXHJcbiAgICBDTElDS19EQVRBX0FQSTogJ2NsaWNrJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWSxcclxuICAgIEZPQ1VTSU5fREFUQV9BUEk6ICdmb2N1c2luJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWSxcclxuICAgIEtFWURPV05fREFUQV9BUEk6ICdrZXlkb3duJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWVxyXG4gIH07XHJcblxyXG4gIHZhciBDbGFzc05hbWUgPSB7XHJcbiAgICBCQUNLRFJPUDogJ2Ryb3Bkb3duLWJhY2tkcm9wJyxcclxuICAgIERJU0FCTEVEOiAnZGlzYWJsZWQnLFxyXG4gICAgU0hPVzogJ3Nob3cnXHJcbiAgfTtcclxuXHJcbiAgdmFyIFNlbGVjdG9yID0ge1xyXG4gICAgQkFDS0RST1A6ICcuZHJvcGRvd24tYmFja2Ryb3AnLFxyXG4gICAgREFUQV9UT0dHTEU6ICdbZGF0YS10b2dnbGU9XCJkcm9wZG93blwiXScsXHJcbiAgICBGT1JNX0NISUxEOiAnLmRyb3Bkb3duIGZvcm0nLFxyXG4gICAgUk9MRV9NRU5VOiAnW3JvbGU9XCJtZW51XCJdJyxcclxuICAgIFJPTEVfTElTVEJPWDogJ1tyb2xlPVwibGlzdGJveFwiXScsXHJcbiAgICBOQVZCQVJfTkFWOiAnLm5hdmJhci1uYXYnLFxyXG4gICAgVklTSUJMRV9JVEVNUzogJ1tyb2xlPVwibWVudVwiXSBsaTpub3QoLmRpc2FibGVkKSBhLCAnICsgJ1tyb2xlPVwibGlzdGJveFwiXSBsaTpub3QoLmRpc2FibGVkKSBhJ1xyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIENsYXNzIERlZmluaXRpb25cclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIERyb3Bkb3duID0gZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gRHJvcGRvd24oZWxlbWVudCkge1xyXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRHJvcGRvd24pO1xyXG5cclxuICAgICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XHJcblxyXG4gICAgICB0aGlzLl9hZGRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGdldHRlcnNcclxuXHJcbiAgICAvLyBwdWJsaWNcclxuXHJcbiAgICBEcm9wZG93bi5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gdG9nZ2xlKCkge1xyXG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCAkKHRoaXMpLmhhc0NsYXNzKENsYXNzTmFtZS5ESVNBQkxFRCkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBwYXJlbnQgPSBEcm9wZG93bi5fZ2V0UGFyZW50RnJvbUVsZW1lbnQodGhpcyk7XHJcbiAgICAgIHZhciBpc0FjdGl2ZSA9ICQocGFyZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuU0hPVyk7XHJcblxyXG4gICAgICBEcm9wZG93bi5fY2xlYXJNZW51cygpO1xyXG5cclxuICAgICAgaWYgKGlzQWN0aXZlKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmICEkKHBhcmVudCkuY2xvc2VzdChTZWxlY3Rvci5OQVZCQVJfTkFWKS5sZW5ndGgpIHtcclxuXHJcbiAgICAgICAgLy8gaWYgbW9iaWxlIHdlIHVzZSBhIGJhY2tkcm9wIGJlY2F1c2UgY2xpY2sgZXZlbnRzIGRvbid0IGRlbGVnYXRlXHJcbiAgICAgICAgdmFyIGRyb3Bkb3duID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgZHJvcGRvd24uY2xhc3NOYW1lID0gQ2xhc3NOYW1lLkJBQ0tEUk9QO1xyXG4gICAgICAgICQoZHJvcGRvd24pLmluc2VydEJlZm9yZSh0aGlzKTtcclxuICAgICAgICAkKGRyb3Bkb3duKS5vbignY2xpY2snLCBEcm9wZG93bi5fY2xlYXJNZW51cyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciByZWxhdGVkVGFyZ2V0ID0ge1xyXG4gICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHRoaXNcclxuICAgICAgfTtcclxuICAgICAgdmFyIHNob3dFdmVudCA9ICQuRXZlbnQoRXZlbnQuU0hPVywgcmVsYXRlZFRhcmdldCk7XHJcblxyXG4gICAgICAkKHBhcmVudCkudHJpZ2dlcihzaG93RXZlbnQpO1xyXG5cclxuICAgICAgaWYgKHNob3dFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5mb2N1cygpO1xyXG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIHRydWUpO1xyXG5cclxuICAgICAgJChwYXJlbnQpLnRvZ2dsZUNsYXNzKENsYXNzTmFtZS5TSE9XKTtcclxuICAgICAgJChwYXJlbnQpLnRyaWdnZXIoJC5FdmVudChFdmVudC5TSE9XTiwgcmVsYXRlZFRhcmdldCkpO1xyXG5cclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfTtcclxuXHJcbiAgICBEcm9wZG93bi5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XHJcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSk7XHJcbiAgICAgICQodGhpcy5fZWxlbWVudCkub2ZmKEVWRU5UX0tFWSk7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBwcml2YXRlXHJcblxyXG4gICAgRHJvcGRvd24ucHJvdG90eXBlLl9hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uIF9hZGRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbihFdmVudC5DTElDSywgdGhpcy50b2dnbGUpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBzdGF0aWNcclxuXHJcbiAgICBEcm9wZG93bi5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGRhdGEgPSAkKHRoaXMpLmRhdGEoREFUQV9LRVkpO1xyXG5cclxuICAgICAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICAgIGRhdGEgPSBuZXcgRHJvcGRvd24odGhpcyk7XHJcbiAgICAgICAgICAkKHRoaXMpLmRhdGEoREFUQV9LRVksIGRhdGEpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICBpZiAoZGF0YVtjb25maWddID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBtZXRob2QgbmFtZWQgXCInICsgY29uZmlnICsgJ1wiJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBkYXRhW2NvbmZpZ10uY2FsbCh0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBEcm9wZG93bi5fY2xlYXJNZW51cyA9IGZ1bmN0aW9uIF9jbGVhck1lbnVzKGV2ZW50KSB7XHJcbiAgICAgIGlmIChldmVudCAmJiBldmVudC53aGljaCA9PT0gUklHSFRfTU9VU0VfQlVUVE9OX1dISUNIKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgYmFja2Ryb3AgPSAkKFNlbGVjdG9yLkJBQ0tEUk9QKVswXTtcclxuICAgICAgaWYgKGJhY2tkcm9wKSB7XHJcbiAgICAgICAgYmFja2Ryb3AucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChiYWNrZHJvcCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciB0b2dnbGVzID0gJC5tYWtlQXJyYXkoJChTZWxlY3Rvci5EQVRBX1RPR0dMRSkpO1xyXG5cclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2dnbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIHBhcmVudCA9IERyb3Bkb3duLl9nZXRQYXJlbnRGcm9tRWxlbWVudCh0b2dnbGVzW2ldKTtcclxuICAgICAgICB2YXIgcmVsYXRlZFRhcmdldCA9IHtcclxuICAgICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHRvZ2dsZXNbaV1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBpZiAoISQocGFyZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuU0hPVykpIHtcclxuICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGV2ZW50ICYmIChldmVudC50eXBlID09PSAnY2xpY2snICYmIC9pbnB1dHx0ZXh0YXJlYS9pLnRlc3QoZXZlbnQudGFyZ2V0LnRhZ05hbWUpIHx8IGV2ZW50LnR5cGUgPT09ICdmb2N1c2luJykgJiYgJC5jb250YWlucyhwYXJlbnQsIGV2ZW50LnRhcmdldCkpIHtcclxuICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGhpZGVFdmVudCA9ICQuRXZlbnQoRXZlbnQuSElERSwgcmVsYXRlZFRhcmdldCk7XHJcbiAgICAgICAgJChwYXJlbnQpLnRyaWdnZXIoaGlkZUV2ZW50KTtcclxuICAgICAgICBpZiAoaGlkZUV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XHJcbiAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRvZ2dsZXNbaV0uc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJyk7XHJcblxyXG4gICAgICAgICQocGFyZW50KS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuU0hPVykudHJpZ2dlcigkLkV2ZW50KEV2ZW50LkhJRERFTiwgcmVsYXRlZFRhcmdldCkpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIERyb3Bkb3duLl9nZXRQYXJlbnRGcm9tRWxlbWVudCA9IGZ1bmN0aW9uIF9nZXRQYXJlbnRGcm9tRWxlbWVudChlbGVtZW50KSB7XHJcbiAgICAgIHZhciBwYXJlbnQgPSB2b2lkIDA7XHJcbiAgICAgIHZhciBzZWxlY3RvciA9IFV0aWwuZ2V0U2VsZWN0b3JGcm9tRWxlbWVudChlbGVtZW50KTtcclxuXHJcbiAgICAgIGlmIChzZWxlY3Rvcikge1xyXG4gICAgICAgIHBhcmVudCA9ICQoc2VsZWN0b3IpWzBdO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gcGFyZW50IHx8IGVsZW1lbnQucGFyZW50Tm9kZTtcclxuICAgIH07XHJcblxyXG4gICAgRHJvcGRvd24uX2RhdGFBcGlLZXlkb3duSGFuZGxlciA9IGZ1bmN0aW9uIF9kYXRhQXBpS2V5ZG93bkhhbmRsZXIoZXZlbnQpIHtcclxuICAgICAgaWYgKCEvKDM4fDQwfDI3fDMyKS8udGVzdChldmVudC53aGljaCkgfHwgL2lucHV0fHRleHRhcmVhL2kudGVzdChldmVudC50YXJnZXQudGFnTmFtZSkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgICAgaWYgKHRoaXMuZGlzYWJsZWQgfHwgJCh0aGlzKS5oYXNDbGFzcyhDbGFzc05hbWUuRElTQUJMRUQpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgcGFyZW50ID0gRHJvcGRvd24uX2dldFBhcmVudEZyb21FbGVtZW50KHRoaXMpO1xyXG4gICAgICB2YXIgaXNBY3RpdmUgPSAkKHBhcmVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpO1xyXG5cclxuICAgICAgaWYgKCFpc0FjdGl2ZSAmJiBldmVudC53aGljaCAhPT0gRVNDQVBFX0tFWUNPREUgfHwgaXNBY3RpdmUgJiYgZXZlbnQud2hpY2ggPT09IEVTQ0FQRV9LRVlDT0RFKSB7XHJcblxyXG4gICAgICAgIGlmIChldmVudC53aGljaCA9PT0gRVNDQVBFX0tFWUNPREUpIHtcclxuICAgICAgICAgIHZhciB0b2dnbGUgPSAkKHBhcmVudCkuZmluZChTZWxlY3Rvci5EQVRBX1RPR0dMRSlbMF07XHJcbiAgICAgICAgICAkKHRvZ2dsZSkudHJpZ2dlcignZm9jdXMnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICQodGhpcykudHJpZ2dlcignY2xpY2snKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBpdGVtcyA9ICQocGFyZW50KS5maW5kKFNlbGVjdG9yLlZJU0lCTEVfSVRFTVMpLmdldCgpO1xyXG5cclxuICAgICAgaWYgKCFpdGVtcy5sZW5ndGgpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBpbmRleCA9IGl0ZW1zLmluZGV4T2YoZXZlbnQudGFyZ2V0KTtcclxuXHJcbiAgICAgIGlmIChldmVudC53aGljaCA9PT0gQVJST1dfVVBfS0VZQ09ERSAmJiBpbmRleCA+IDApIHtcclxuICAgICAgICAvLyB1cFxyXG4gICAgICAgIGluZGV4LS07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChldmVudC53aGljaCA9PT0gQVJST1dfRE9XTl9LRVlDT0RFICYmIGluZGV4IDwgaXRlbXMubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgIC8vIGRvd25cclxuICAgICAgICBpbmRleCsrO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoaW5kZXggPCAwKSB7XHJcbiAgICAgICAgaW5kZXggPSAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpdGVtc1tpbmRleF0uZm9jdXMoKTtcclxuICAgIH07XHJcblxyXG4gICAgX2NyZWF0ZUNsYXNzKERyb3Bkb3duLCBudWxsLCBbe1xyXG4gICAgICBrZXk6ICdWRVJTSU9OJyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIFZFUlNJT047XHJcbiAgICAgIH1cclxuICAgIH1dKTtcclxuXHJcbiAgICByZXR1cm4gRHJvcGRvd247XHJcbiAgfSgpO1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBEYXRhIEFwaSBpbXBsZW1lbnRhdGlvblxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkKGRvY3VtZW50KS5vbihFdmVudC5LRVlET1dOX0RBVEFfQVBJLCBTZWxlY3Rvci5EQVRBX1RPR0dMRSwgRHJvcGRvd24uX2RhdGFBcGlLZXlkb3duSGFuZGxlcikub24oRXZlbnQuS0VZRE9XTl9EQVRBX0FQSSwgU2VsZWN0b3IuUk9MRV9NRU5VLCBEcm9wZG93bi5fZGF0YUFwaUtleWRvd25IYW5kbGVyKS5vbihFdmVudC5LRVlET1dOX0RBVEFfQVBJLCBTZWxlY3Rvci5ST0xFX0xJU1RCT1gsIERyb3Bkb3duLl9kYXRhQXBpS2V5ZG93bkhhbmRsZXIpLm9uKEV2ZW50LkNMSUNLX0RBVEFfQVBJICsgJyAnICsgRXZlbnQuRk9DVVNJTl9EQVRBX0FQSSwgRHJvcGRvd24uX2NsZWFyTWVudXMpLm9uKEV2ZW50LkNMSUNLX0RBVEFfQVBJLCBTZWxlY3Rvci5EQVRBX1RPR0dMRSwgRHJvcGRvd24ucHJvdG90eXBlLnRvZ2dsZSkub24oRXZlbnQuQ0xJQ0tfREFUQV9BUEksIFNlbGVjdG9yLkZPUk1fQ0hJTEQsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gIH0pO1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBqUXVlcnlcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgJC5mbltOQU1FXSA9IERyb3Bkb3duLl9qUXVlcnlJbnRlcmZhY2U7XHJcbiAgJC5mbltOQU1FXS5Db25zdHJ1Y3RvciA9IERyb3Bkb3duO1xyXG4gICQuZm5bTkFNRV0ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICQuZm5bTkFNRV0gPSBKUVVFUllfTk9fQ09ORkxJQ1Q7XHJcbiAgICByZXR1cm4gRHJvcGRvd24uX2pRdWVyeUludGVyZmFjZTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gRHJvcGRvd247XHJcbn0oalF1ZXJ5KTtcclxuXHJcbi8qKlxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBCb290c3RyYXAgKHY0LjAuMC1hbHBoYS42KTogbW9kYWwuanNcclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICovXHJcblxyXG52YXIgTW9kYWwgPSBmdW5jdGlvbiAoJCkge1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDb25zdGFudHNcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIE5BTUUgPSAnbW9kYWwnO1xyXG4gIHZhciBWRVJTSU9OID0gJzQuMC4wLWFscGhhLjYnO1xyXG4gIHZhciBEQVRBX0tFWSA9ICdicy5tb2RhbCc7XHJcbiAgdmFyIEVWRU5UX0tFWSA9ICcuJyArIERBVEFfS0VZO1xyXG4gIHZhciBEQVRBX0FQSV9LRVkgPSAnLmRhdGEtYXBpJztcclxuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcclxuICB2YXIgVFJBTlNJVElPTl9EVVJBVElPTiA9IDMwMDtcclxuICB2YXIgQkFDS0RST1BfVFJBTlNJVElPTl9EVVJBVElPTiA9IDE1MDtcclxuICB2YXIgRVNDQVBFX0tFWUNPREUgPSAyNzsgLy8gS2V5Ym9hcmRFdmVudC53aGljaCB2YWx1ZSBmb3IgRXNjYXBlIChFc2MpIGtleVxyXG5cclxuICB2YXIgRGVmYXVsdCA9IHtcclxuICAgIGJhY2tkcm9wOiB0cnVlLFxyXG4gICAga2V5Ym9hcmQ6IHRydWUsXHJcbiAgICBmb2N1czogdHJ1ZSxcclxuICAgIHNob3c6IHRydWVcclxuICB9O1xyXG5cclxuICB2YXIgRGVmYXVsdFR5cGUgPSB7XHJcbiAgICBiYWNrZHJvcDogJyhib29sZWFufHN0cmluZyknLFxyXG4gICAga2V5Ym9hcmQ6ICdib29sZWFuJyxcclxuICAgIGZvY3VzOiAnYm9vbGVhbicsXHJcbiAgICBzaG93OiAnYm9vbGVhbidcclxuICB9O1xyXG5cclxuICB2YXIgRXZlbnQgPSB7XHJcbiAgICBISURFOiAnaGlkZScgKyBFVkVOVF9LRVksXHJcbiAgICBISURERU46ICdoaWRkZW4nICsgRVZFTlRfS0VZLFxyXG4gICAgU0hPVzogJ3Nob3cnICsgRVZFTlRfS0VZLFxyXG4gICAgU0hPV046ICdzaG93bicgKyBFVkVOVF9LRVksXHJcbiAgICBGT0NVU0lOOiAnZm9jdXNpbicgKyBFVkVOVF9LRVksXHJcbiAgICBSRVNJWkU6ICdyZXNpemUnICsgRVZFTlRfS0VZLFxyXG4gICAgQ0xJQ0tfRElTTUlTUzogJ2NsaWNrLmRpc21pc3MnICsgRVZFTlRfS0VZLFxyXG4gICAgS0VZRE9XTl9ESVNNSVNTOiAna2V5ZG93bi5kaXNtaXNzJyArIEVWRU5UX0tFWSxcclxuICAgIE1PVVNFVVBfRElTTUlTUzogJ21vdXNldXAuZGlzbWlzcycgKyBFVkVOVF9LRVksXHJcbiAgICBNT1VTRURPV05fRElTTUlTUzogJ21vdXNlZG93bi5kaXNtaXNzJyArIEVWRU5UX0tFWSxcclxuICAgIENMSUNLX0RBVEFfQVBJOiAnY2xpY2snICsgRVZFTlRfS0VZICsgREFUQV9BUElfS0VZXHJcbiAgfTtcclxuXHJcbiAgdmFyIENsYXNzTmFtZSA9IHtcclxuICAgIFNDUk9MTEJBUl9NRUFTVVJFUjogJ21vZGFsLXNjcm9sbGJhci1tZWFzdXJlJyxcclxuICAgIEJBQ0tEUk9QOiAnbW9kYWwtYmFja2Ryb3AnLFxyXG4gICAgT1BFTjogJ21vZGFsLW9wZW4nLFxyXG4gICAgRkFERTogJ2ZhZGUnLFxyXG4gICAgU0hPVzogJ3Nob3cnXHJcbiAgfTtcclxuXHJcbiAgdmFyIFNlbGVjdG9yID0ge1xyXG4gICAgRElBTE9HOiAnLm1vZGFsLWRpYWxvZycsXHJcbiAgICBEQVRBX1RPR0dMRTogJ1tkYXRhLXRvZ2dsZT1cIm1vZGFsXCJdJyxcclxuICAgIERBVEFfRElTTUlTUzogJ1tkYXRhLWRpc21pc3M9XCJtb2RhbFwiXScsXHJcbiAgICBGSVhFRF9DT05URU5UOiAnLmZpeGVkLXRvcCwgLmZpeGVkLWJvdHRvbSwgLmlzLWZpeGVkLCAuc3RpY2t5LXRvcCdcclxuICB9O1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDbGFzcyBEZWZpbml0aW9uXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gIHZhciBNb2RhbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIE1vZGFsKGVsZW1lbnQsIGNvbmZpZykge1xyXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTW9kYWwpO1xyXG5cclxuICAgICAgdGhpcy5fY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgICB0aGlzLl9kaWFsb2cgPSAkKGVsZW1lbnQpLmZpbmQoU2VsZWN0b3IuRElBTE9HKVswXTtcclxuICAgICAgdGhpcy5fYmFja2Ryb3AgPSBudWxsO1xyXG4gICAgICB0aGlzLl9pc1Nob3duID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuX2lzQm9keU92ZXJmbG93aW5nID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuX2lnbm9yZUJhY2tkcm9wQ2xpY2sgPSBmYWxzZTtcclxuICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuX29yaWdpbmFsQm9keVBhZGRpbmcgPSAwO1xyXG4gICAgICB0aGlzLl9zY3JvbGxiYXJXaWR0aCA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0dGVyc1xyXG5cclxuICAgIC8vIHB1YmxpY1xyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiB0b2dnbGUocmVsYXRlZFRhcmdldCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5faXNTaG93biA/IHRoaXMuaGlkZSgpIDogdGhpcy5zaG93KHJlbGF0ZWRUYXJnZXQpO1xyXG4gICAgfTtcclxuXHJcbiAgICBNb2RhbC5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uIHNob3cocmVsYXRlZFRhcmdldCkge1xyXG4gICAgICB2YXIgX3RoaXM5ID0gdGhpcztcclxuXHJcbiAgICAgIGlmICh0aGlzLl9pc1RyYW5zaXRpb25pbmcpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01vZGFsIGlzIHRyYW5zaXRpb25pbmcnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKFV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkgJiYgJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuRkFERSkpIHtcclxuICAgICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICAgIHZhciBzaG93RXZlbnQgPSAkLkV2ZW50KEV2ZW50LlNIT1csIHtcclxuICAgICAgICByZWxhdGVkVGFyZ2V0OiByZWxhdGVkVGFyZ2V0XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgJCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHNob3dFdmVudCk7XHJcblxyXG4gICAgICBpZiAodGhpcy5faXNTaG93biB8fCBzaG93RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX2lzU2hvd24gPSB0cnVlO1xyXG5cclxuICAgICAgdGhpcy5fY2hlY2tTY3JvbGxiYXIoKTtcclxuICAgICAgdGhpcy5fc2V0U2Nyb2xsYmFyKCk7XHJcblxyXG4gICAgICAkKGRvY3VtZW50LmJvZHkpLmFkZENsYXNzKENsYXNzTmFtZS5PUEVOKTtcclxuXHJcbiAgICAgIHRoaXMuX3NldEVzY2FwZUV2ZW50KCk7XHJcbiAgICAgIHRoaXMuX3NldFJlc2l6ZUV2ZW50KCk7XHJcblxyXG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLm9uKEV2ZW50LkNMSUNLX0RJU01JU1MsIFNlbGVjdG9yLkRBVEFfRElTTUlTUywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzOS5oaWRlKGV2ZW50KTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICAkKHRoaXMuX2RpYWxvZykub24oRXZlbnQuTU9VU0VET1dOX0RJU01JU1MsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKF90aGlzOS5fZWxlbWVudCkub25lKEV2ZW50Lk1PVVNFVVBfRElTTUlTUywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICBpZiAoJChldmVudC50YXJnZXQpLmlzKF90aGlzOS5fZWxlbWVudCkpIHtcclxuICAgICAgICAgICAgX3RoaXM5Ll9pZ25vcmVCYWNrZHJvcENsaWNrID0gdHJ1ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLl9zaG93QmFja2Ryb3AoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBfdGhpczkuX3Nob3dFbGVtZW50KHJlbGF0ZWRUYXJnZXQpO1xyXG4gICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgTW9kYWwucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiBoaWRlKGV2ZW50KSB7XHJcbiAgICAgIHZhciBfdGhpczEwID0gdGhpcztcclxuXHJcbiAgICAgIGlmIChldmVudCkge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0aGlzLl9pc1RyYW5zaXRpb25pbmcpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01vZGFsIGlzIHRyYW5zaXRpb25pbmcnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHRyYW5zaXRpb24gPSBVdGlsLnN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpICYmICQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLkZBREUpO1xyXG4gICAgICBpZiAodHJhbnNpdGlvbikge1xyXG4gICAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IHRydWU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBoaWRlRXZlbnQgPSAkLkV2ZW50KEV2ZW50LkhJREUpO1xyXG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIoaGlkZUV2ZW50KTtcclxuXHJcbiAgICAgIGlmICghdGhpcy5faXNTaG93biB8fCBoaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX2lzU2hvd24gPSBmYWxzZTtcclxuXHJcbiAgICAgIHRoaXMuX3NldEVzY2FwZUV2ZW50KCk7XHJcbiAgICAgIHRoaXMuX3NldFJlc2l6ZUV2ZW50KCk7XHJcblxyXG4gICAgICAkKGRvY3VtZW50KS5vZmYoRXZlbnQuRk9DVVNJTik7XHJcblxyXG4gICAgICAkKHRoaXMuX2VsZW1lbnQpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5TSE9XKTtcclxuXHJcbiAgICAgICQodGhpcy5fZWxlbWVudCkub2ZmKEV2ZW50LkNMSUNLX0RJU01JU1MpO1xyXG4gICAgICAkKHRoaXMuX2RpYWxvZykub2ZmKEV2ZW50Lk1PVVNFRE9XTl9ESVNNSVNTKTtcclxuXHJcbiAgICAgIGlmICh0cmFuc2l0aW9uKSB7XHJcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICByZXR1cm4gX3RoaXMxMC5faGlkZU1vZGFsKGV2ZW50KTtcclxuICAgICAgICB9KS5lbXVsYXRlVHJhbnNpdGlvbkVuZChUUkFOU0lUSU9OX0RVUkFUSU9OKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLl9oaWRlTW9kYWwoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBNb2RhbC5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XHJcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSk7XHJcblxyXG4gICAgICAkKHdpbmRvdywgZG9jdW1lbnQsIHRoaXMuX2VsZW1lbnQsIHRoaXMuX2JhY2tkcm9wKS5vZmYoRVZFTlRfS0VZKTtcclxuXHJcbiAgICAgIHRoaXMuX2NvbmZpZyA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gICAgICB0aGlzLl9kaWFsb2cgPSBudWxsO1xyXG4gICAgICB0aGlzLl9iYWNrZHJvcCA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2lzU2hvd24gPSBudWxsO1xyXG4gICAgICB0aGlzLl9pc0JvZHlPdmVyZmxvd2luZyA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2lnbm9yZUJhY2tkcm9wQ2xpY2sgPSBudWxsO1xyXG4gICAgICB0aGlzLl9vcmlnaW5hbEJvZHlQYWRkaW5nID0gbnVsbDtcclxuICAgICAgdGhpcy5fc2Nyb2xsYmFyV2lkdGggPSBudWxsO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBwcml2YXRlXHJcblxyXG4gICAgTW9kYWwucHJvdG90eXBlLl9nZXRDb25maWcgPSBmdW5jdGlvbiBfZ2V0Q29uZmlnKGNvbmZpZykge1xyXG4gICAgICBjb25maWcgPSAkLmV4dGVuZCh7fSwgRGVmYXVsdCwgY29uZmlnKTtcclxuICAgICAgVXRpbC50eXBlQ2hlY2tDb25maWcoTkFNRSwgY29uZmlnLCBEZWZhdWx0VHlwZSk7XHJcbiAgICAgIHJldHVybiBjb25maWc7XHJcbiAgICB9O1xyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS5fc2hvd0VsZW1lbnQgPSBmdW5jdGlvbiBfc2hvd0VsZW1lbnQocmVsYXRlZFRhcmdldCkge1xyXG4gICAgICB2YXIgX3RoaXMxMSA9IHRoaXM7XHJcblxyXG4gICAgICB2YXIgdHJhbnNpdGlvbiA9IFV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkgJiYgJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuRkFERSk7XHJcblxyXG4gICAgICBpZiAoIXRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSB8fCB0aGlzLl9lbGVtZW50LnBhcmVudE5vZGUubm9kZVR5cGUgIT09IE5vZGUuRUxFTUVOVF9OT0RFKSB7XHJcbiAgICAgICAgLy8gZG9uJ3QgbW92ZSBtb2RhbHMgZG9tIHBvc2l0aW9uXHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJyk7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQuc2Nyb2xsVG9wID0gMDtcclxuXHJcbiAgICAgIGlmICh0cmFuc2l0aW9uKSB7XHJcbiAgICAgICAgVXRpbC5yZWZsb3codGhpcy5fZWxlbWVudCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICQodGhpcy5fZWxlbWVudCkuYWRkQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpO1xyXG5cclxuICAgICAgaWYgKHRoaXMuX2NvbmZpZy5mb2N1cykge1xyXG4gICAgICAgIHRoaXMuX2VuZm9yY2VGb2N1cygpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgc2hvd25FdmVudCA9ICQuRXZlbnQoRXZlbnQuU0hPV04sIHtcclxuICAgICAgICByZWxhdGVkVGFyZ2V0OiByZWxhdGVkVGFyZ2V0XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdmFyIHRyYW5zaXRpb25Db21wbGV0ZSA9IGZ1bmN0aW9uIHRyYW5zaXRpb25Db21wbGV0ZSgpIHtcclxuICAgICAgICBpZiAoX3RoaXMxMS5fY29uZmlnLmZvY3VzKSB7XHJcbiAgICAgICAgICBfdGhpczExLl9lbGVtZW50LmZvY3VzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIF90aGlzMTEuX2lzVHJhbnNpdGlvbmluZyA9IGZhbHNlO1xyXG4gICAgICAgICQoX3RoaXMxMS5fZWxlbWVudCkudHJpZ2dlcihzaG93bkV2ZW50KTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGlmICh0cmFuc2l0aW9uKSB7XHJcbiAgICAgICAgJCh0aGlzLl9kaWFsb2cpLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCB0cmFuc2l0aW9uQ29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRSQU5TSVRJT05fRFVSQVRJT04pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRyYW5zaXRpb25Db21wbGV0ZSgpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS5fZW5mb3JjZUZvY3VzID0gZnVuY3Rpb24gX2VuZm9yY2VGb2N1cygpIHtcclxuICAgICAgdmFyIF90aGlzMTIgPSB0aGlzO1xyXG5cclxuICAgICAgJChkb2N1bWVudCkub2ZmKEV2ZW50LkZPQ1VTSU4pIC8vIGd1YXJkIGFnYWluc3QgaW5maW5pdGUgZm9jdXMgbG9vcFxyXG4gICAgICAub24oRXZlbnQuRk9DVVNJTiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKGRvY3VtZW50ICE9PSBldmVudC50YXJnZXQgJiYgX3RoaXMxMi5fZWxlbWVudCAhPT0gZXZlbnQudGFyZ2V0ICYmICEkKF90aGlzMTIuX2VsZW1lbnQpLmhhcyhldmVudC50YXJnZXQpLmxlbmd0aCkge1xyXG4gICAgICAgICAgX3RoaXMxMi5fZWxlbWVudC5mb2N1cygpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS5fc2V0RXNjYXBlRXZlbnQgPSBmdW5jdGlvbiBfc2V0RXNjYXBlRXZlbnQoKSB7XHJcbiAgICAgIHZhciBfdGhpczEzID0gdGhpcztcclxuXHJcbiAgICAgIGlmICh0aGlzLl9pc1Nob3duICYmIHRoaXMuX2NvbmZpZy5rZXlib2FyZCkge1xyXG4gICAgICAgICQodGhpcy5fZWxlbWVudCkub24oRXZlbnQuS0VZRE9XTl9ESVNNSVNTLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgIGlmIChldmVudC53aGljaCA9PT0gRVNDQVBFX0tFWUNPREUpIHtcclxuICAgICAgICAgICAgX3RoaXMxMy5oaWRlKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSBpZiAoIXRoaXMuX2lzU2hvd24pIHtcclxuICAgICAgICAkKHRoaXMuX2VsZW1lbnQpLm9mZihFdmVudC5LRVlET1dOX0RJU01JU1MpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS5fc2V0UmVzaXplRXZlbnQgPSBmdW5jdGlvbiBfc2V0UmVzaXplRXZlbnQoKSB7XHJcbiAgICAgIHZhciBfdGhpczE0ID0gdGhpcztcclxuXHJcbiAgICAgIGlmICh0aGlzLl9pc1Nob3duKSB7XHJcbiAgICAgICAgJCh3aW5kb3cpLm9uKEV2ZW50LlJFU0laRSwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICByZXR1cm4gX3RoaXMxNC5faGFuZGxlVXBkYXRlKGV2ZW50KTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkKHdpbmRvdykub2ZmKEV2ZW50LlJFU0laRSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgTW9kYWwucHJvdG90eXBlLl9oaWRlTW9kYWwgPSBmdW5jdGlvbiBfaGlkZU1vZGFsKCkge1xyXG4gICAgICB2YXIgX3RoaXMxNSA9IHRoaXM7XHJcblxyXG4gICAgICB0aGlzLl9lbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICd0cnVlJyk7XHJcbiAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IGZhbHNlO1xyXG4gICAgICB0aGlzLl9zaG93QmFja2Ryb3AoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoZG9jdW1lbnQuYm9keSkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLk9QRU4pO1xyXG4gICAgICAgIF90aGlzMTUuX3Jlc2V0QWRqdXN0bWVudHMoKTtcclxuICAgICAgICBfdGhpczE1Ll9yZXNldFNjcm9sbGJhcigpO1xyXG4gICAgICAgICQoX3RoaXMxNS5fZWxlbWVudCkudHJpZ2dlcihFdmVudC5ISURERU4pO1xyXG4gICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgTW9kYWwucHJvdG90eXBlLl9yZW1vdmVCYWNrZHJvcCA9IGZ1bmN0aW9uIF9yZW1vdmVCYWNrZHJvcCgpIHtcclxuICAgICAgaWYgKHRoaXMuX2JhY2tkcm9wKSB7XHJcbiAgICAgICAgJCh0aGlzLl9iYWNrZHJvcCkucmVtb3ZlKCk7XHJcbiAgICAgICAgdGhpcy5fYmFja2Ryb3AgPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS5fc2hvd0JhY2tkcm9wID0gZnVuY3Rpb24gX3Nob3dCYWNrZHJvcChjYWxsYmFjaykge1xyXG4gICAgICB2YXIgX3RoaXMxNiA9IHRoaXM7XHJcblxyXG4gICAgICB2YXIgYW5pbWF0ZSA9ICQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLkZBREUpID8gQ2xhc3NOYW1lLkZBREUgOiAnJztcclxuXHJcbiAgICAgIGlmICh0aGlzLl9pc1Nob3duICYmIHRoaXMuX2NvbmZpZy5iYWNrZHJvcCkge1xyXG4gICAgICAgIHZhciBkb0FuaW1hdGUgPSBVdGlsLnN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpICYmIGFuaW1hdGU7XHJcblxyXG4gICAgICAgIHRoaXMuX2JhY2tkcm9wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgdGhpcy5fYmFja2Ryb3AuY2xhc3NOYW1lID0gQ2xhc3NOYW1lLkJBQ0tEUk9QO1xyXG5cclxuICAgICAgICBpZiAoYW5pbWF0ZSkge1xyXG4gICAgICAgICAgJCh0aGlzLl9iYWNrZHJvcCkuYWRkQ2xhc3MoYW5pbWF0ZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKHRoaXMuX2JhY2tkcm9wKS5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KTtcclxuXHJcbiAgICAgICAgJCh0aGlzLl9lbGVtZW50KS5vbihFdmVudC5DTElDS19ESVNNSVNTLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgIGlmIChfdGhpczE2Ll9pZ25vcmVCYWNrZHJvcENsaWNrKSB7XHJcbiAgICAgICAgICAgIF90aGlzMTYuX2lnbm9yZUJhY2tkcm9wQ2xpY2sgPSBmYWxzZTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaWYgKGV2ZW50LnRhcmdldCAhPT0gZXZlbnQuY3VycmVudFRhcmdldCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAoX3RoaXMxNi5fY29uZmlnLmJhY2tkcm9wID09PSAnc3RhdGljJykge1xyXG4gICAgICAgICAgICBfdGhpczE2Ll9lbGVtZW50LmZvY3VzKCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBfdGhpczE2LmhpZGUoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKGRvQW5pbWF0ZSkge1xyXG4gICAgICAgICAgVXRpbC5yZWZsb3codGhpcy5fYmFja2Ryb3ApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJCh0aGlzLl9iYWNrZHJvcCkuYWRkQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpO1xyXG5cclxuICAgICAgICBpZiAoIWNhbGxiYWNrKSB7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIWRvQW5pbWF0ZSkge1xyXG4gICAgICAgICAgY2FsbGJhY2soKTtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICQodGhpcy5fYmFja2Ryb3ApLm9uZShVdGlsLlRSQU5TSVRJT05fRU5ELCBjYWxsYmFjaykuZW11bGF0ZVRyYW5zaXRpb25FbmQoQkFDS0RST1BfVFJBTlNJVElPTl9EVVJBVElPTik7XHJcbiAgICAgIH0gZWxzZSBpZiAoIXRoaXMuX2lzU2hvd24gJiYgdGhpcy5fYmFja2Ryb3ApIHtcclxuICAgICAgICAkKHRoaXMuX2JhY2tkcm9wKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuU0hPVyk7XHJcblxyXG4gICAgICAgIHZhciBjYWxsYmFja1JlbW92ZSA9IGZ1bmN0aW9uIGNhbGxiYWNrUmVtb3ZlKCkge1xyXG4gICAgICAgICAgX3RoaXMxNi5fcmVtb3ZlQmFja2Ryb3AoKTtcclxuICAgICAgICAgIGlmIChjYWxsYmFjaykge1xyXG4gICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGlmIChVdGlsLnN1cHBvcnRzVHJhbnNpdGlvbkVuZCgpICYmICQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLkZBREUpKSB7XHJcbiAgICAgICAgICAkKHRoaXMuX2JhY2tkcm9wKS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgY2FsbGJhY2tSZW1vdmUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKEJBQ0tEUk9QX1RSQU5TSVRJT05fRFVSQVRJT04pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjYWxsYmFja1JlbW92ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIGlmIChjYWxsYmFjaykge1xyXG4gICAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgLy8gdGhlIGZvbGxvd2luZyBtZXRob2RzIGFyZSB1c2VkIHRvIGhhbmRsZSBvdmVyZmxvd2luZyBtb2RhbHNcclxuICAgIC8vIHRvZG8gKGZhdCk6IHRoZXNlIHNob3VsZCBwcm9iYWJseSBiZSByZWZhY3RvcmVkIG91dCBvZiBtb2RhbC5qc1xyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS5faGFuZGxlVXBkYXRlID0gZnVuY3Rpb24gX2hhbmRsZVVwZGF0ZSgpIHtcclxuICAgICAgdGhpcy5fYWRqdXN0RGlhbG9nKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS5fYWRqdXN0RGlhbG9nID0gZnVuY3Rpb24gX2FkanVzdERpYWxvZygpIHtcclxuICAgICAgdmFyIGlzTW9kYWxPdmVyZmxvd2luZyA9IHRoaXMuX2VsZW1lbnQuc2Nyb2xsSGVpZ2h0ID4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDtcclxuXHJcbiAgICAgIGlmICghdGhpcy5faXNCb2R5T3ZlcmZsb3dpbmcgJiYgaXNNb2RhbE92ZXJmbG93aW5nKSB7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nTGVmdCA9IHRoaXMuX3Njcm9sbGJhcldpZHRoICsgJ3B4JztcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHRoaXMuX2lzQm9keU92ZXJmbG93aW5nICYmICFpc01vZGFsT3ZlcmZsb3dpbmcpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnN0eWxlLnBhZGRpbmdSaWdodCA9IHRoaXMuX3Njcm9sbGJhcldpZHRoICsgJ3B4JztcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBNb2RhbC5wcm90b3R5cGUuX3Jlc2V0QWRqdXN0bWVudHMgPSBmdW5jdGlvbiBfcmVzZXRBZGp1c3RtZW50cygpIHtcclxuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nTGVmdCA9ICcnO1xyXG4gICAgICB0aGlzLl9lbGVtZW50LnN0eWxlLnBhZGRpbmdSaWdodCA9ICcnO1xyXG4gICAgfTtcclxuXHJcbiAgICBNb2RhbC5wcm90b3R5cGUuX2NoZWNrU2Nyb2xsYmFyID0gZnVuY3Rpb24gX2NoZWNrU2Nyb2xsYmFyKCkge1xyXG4gICAgICB0aGlzLl9pc0JvZHlPdmVyZmxvd2luZyA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggPCB3aW5kb3cuaW5uZXJXaWR0aDtcclxuICAgICAgdGhpcy5fc2Nyb2xsYmFyV2lkdGggPSB0aGlzLl9nZXRTY3JvbGxiYXJXaWR0aCgpO1xyXG4gICAgfTtcclxuXHJcbiAgICBNb2RhbC5wcm90b3R5cGUuX3NldFNjcm9sbGJhciA9IGZ1bmN0aW9uIF9zZXRTY3JvbGxiYXIoKSB7XHJcbiAgICAgIHZhciBib2R5UGFkZGluZyA9IHBhcnNlSW50KCQoU2VsZWN0b3IuRklYRURfQ09OVEVOVCkuY3NzKCdwYWRkaW5nLXJpZ2h0JykgfHwgMCwgMTApO1xyXG5cclxuICAgICAgdGhpcy5fb3JpZ2luYWxCb2R5UGFkZGluZyA9IGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0IHx8ICcnO1xyXG5cclxuICAgICAgaWYgKHRoaXMuX2lzQm9keU92ZXJmbG93aW5nKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBib2R5UGFkZGluZyArIHRoaXMuX3Njcm9sbGJhcldpZHRoICsgJ3B4JztcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBNb2RhbC5wcm90b3R5cGUuX3Jlc2V0U2Nyb2xsYmFyID0gZnVuY3Rpb24gX3Jlc2V0U2Nyb2xsYmFyKCkge1xyXG4gICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IHRoaXMuX29yaWdpbmFsQm9keVBhZGRpbmc7XHJcbiAgICB9O1xyXG5cclxuICAgIE1vZGFsLnByb3RvdHlwZS5fZ2V0U2Nyb2xsYmFyV2lkdGggPSBmdW5jdGlvbiBfZ2V0U2Nyb2xsYmFyV2lkdGgoKSB7XHJcbiAgICAgIC8vIHRoeCBkLndhbHNoXHJcbiAgICAgIHZhciBzY3JvbGxEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgc2Nyb2xsRGl2LmNsYXNzTmFtZSA9IENsYXNzTmFtZS5TQ1JPTExCQVJfTUVBU1VSRVI7XHJcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2Nyb2xsRGl2KTtcclxuICAgICAgdmFyIHNjcm9sbGJhcldpZHRoID0gc2Nyb2xsRGl2Lm9mZnNldFdpZHRoIC0gc2Nyb2xsRGl2LmNsaWVudFdpZHRoO1xyXG4gICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHNjcm9sbERpdik7XHJcbiAgICAgIHJldHVybiBzY3JvbGxiYXJXaWR0aDtcclxuICAgIH07XHJcblxyXG4gICAgLy8gc3RhdGljXHJcblxyXG4gICAgTW9kYWwuX2pRdWVyeUludGVyZmFjZSA9IGZ1bmN0aW9uIF9qUXVlcnlJbnRlcmZhY2UoY29uZmlnLCByZWxhdGVkVGFyZ2V0KSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5kYXRhKERBVEFfS0VZKTtcclxuICAgICAgICB2YXIgX2NvbmZpZyA9ICQuZXh0ZW5kKHt9LCBNb2RhbC5EZWZhdWx0LCAkKHRoaXMpLmRhdGEoKSwgKHR5cGVvZiBjb25maWcgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGNvbmZpZykpID09PSAnb2JqZWN0JyAmJiBjb25maWcpO1xyXG5cclxuICAgICAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICAgIGRhdGEgPSBuZXcgTW9kYWwodGhpcywgX2NvbmZpZyk7XHJcbiAgICAgICAgICAkKHRoaXMpLmRhdGEoREFUQV9LRVksIGRhdGEpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICBpZiAoZGF0YVtjb25maWddID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBtZXRob2QgbmFtZWQgXCInICsgY29uZmlnICsgJ1wiJyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBkYXRhW2NvbmZpZ10ocmVsYXRlZFRhcmdldCk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChfY29uZmlnLnNob3cpIHtcclxuICAgICAgICAgIGRhdGEuc2hvdyhyZWxhdGVkVGFyZ2V0KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBfY3JlYXRlQ2xhc3MoTW9kYWwsIG51bGwsIFt7XHJcbiAgICAgIGtleTogJ1ZFUlNJT04nLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gVkVSU0lPTjtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBrZXk6ICdEZWZhdWx0JyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIERlZmF1bHQ7XHJcbiAgICAgIH1cclxuICAgIH1dKTtcclxuXHJcbiAgICByZXR1cm4gTW9kYWw7XHJcbiAgfSgpO1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBEYXRhIEFwaSBpbXBsZW1lbnRhdGlvblxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkKGRvY3VtZW50KS5vbihFdmVudC5DTElDS19EQVRBX0FQSSwgU2VsZWN0b3IuREFUQV9UT0dHTEUsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgdmFyIF90aGlzMTcgPSB0aGlzO1xyXG5cclxuICAgIHZhciB0YXJnZXQgPSB2b2lkIDA7XHJcbiAgICB2YXIgc2VsZWN0b3IgPSBVdGlsLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQodGhpcyk7XHJcblxyXG4gICAgaWYgKHNlbGVjdG9yKSB7XHJcbiAgICAgIHRhcmdldCA9ICQoc2VsZWN0b3IpWzBdO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBjb25maWcgPSAkKHRhcmdldCkuZGF0YShEQVRBX0tFWSkgPyAndG9nZ2xlJyA6ICQuZXh0ZW5kKHt9LCAkKHRhcmdldCkuZGF0YSgpLCAkKHRoaXMpLmRhdGEoKSk7XHJcblxyXG4gICAgaWYgKHRoaXMudGFnTmFtZSA9PT0gJ0EnIHx8IHRoaXMudGFnTmFtZSA9PT0gJ0FSRUEnKSB7XHJcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyICR0YXJnZXQgPSAkKHRhcmdldCkub25lKEV2ZW50LlNIT1csIGZ1bmN0aW9uIChzaG93RXZlbnQpIHtcclxuICAgICAgaWYgKHNob3dFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xyXG4gICAgICAgIC8vIG9ubHkgcmVnaXN0ZXIgZm9jdXMgcmVzdG9yZXIgaWYgbW9kYWwgd2lsbCBhY3R1YWxseSBnZXQgc2hvd25cclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICR0YXJnZXQub25lKEV2ZW50LkhJRERFTiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkKF90aGlzMTcpLmlzKCc6dmlzaWJsZScpKSB7XHJcbiAgICAgICAgICBfdGhpczE3LmZvY3VzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIE1vZGFsLl9qUXVlcnlJbnRlcmZhY2UuY2FsbCgkKHRhcmdldCksIGNvbmZpZywgdGhpcyk7XHJcbiAgfSk7XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIGpRdWVyeVxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkLmZuW05BTUVdID0gTW9kYWwuX2pRdWVyeUludGVyZmFjZTtcclxuICAkLmZuW05BTUVdLkNvbnN0cnVjdG9yID0gTW9kYWw7XHJcbiAgJC5mbltOQU1FXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJC5mbltOQU1FXSA9IEpRVUVSWV9OT19DT05GTElDVDtcclxuICAgIHJldHVybiBNb2RhbC5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBNb2RhbDtcclxufShqUXVlcnkpO1xyXG5cclxuLyoqXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEJvb3RzdHJhcCAodjQuMC4wLWFscGhhLjYpOiBzY3JvbGxzcHkuanNcclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICovXHJcblxyXG52YXIgU2Nyb2xsU3B5ID0gZnVuY3Rpb24gKCQpIHtcclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICogQ29uc3RhbnRzXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gIHZhciBOQU1FID0gJ3Njcm9sbHNweSc7XHJcbiAgdmFyIFZFUlNJT04gPSAnNC4wLjAtYWxwaGEuNic7XHJcbiAgdmFyIERBVEFfS0VZID0gJ2JzLnNjcm9sbHNweSc7XHJcbiAgdmFyIEVWRU5UX0tFWSA9ICcuJyArIERBVEFfS0VZO1xyXG4gIHZhciBEQVRBX0FQSV9LRVkgPSAnLmRhdGEtYXBpJztcclxuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcclxuXHJcbiAgdmFyIERlZmF1bHQgPSB7XHJcbiAgICBvZmZzZXQ6IDEwLFxyXG4gICAgbWV0aG9kOiAnYXV0bycsXHJcbiAgICB0YXJnZXQ6ICcnXHJcbiAgfTtcclxuXHJcbiAgdmFyIERlZmF1bHRUeXBlID0ge1xyXG4gICAgb2Zmc2V0OiAnbnVtYmVyJyxcclxuICAgIG1ldGhvZDogJ3N0cmluZycsXHJcbiAgICB0YXJnZXQ6ICcoc3RyaW5nfGVsZW1lbnQpJ1xyXG4gIH07XHJcblxyXG4gIHZhciBFdmVudCA9IHtcclxuICAgIEFDVElWQVRFOiAnYWN0aXZhdGUnICsgRVZFTlRfS0VZLFxyXG4gICAgU0NST0xMOiAnc2Nyb2xsJyArIEVWRU5UX0tFWSxcclxuICAgIExPQURfREFUQV9BUEk6ICdsb2FkJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWVxyXG4gIH07XHJcblxyXG4gIHZhciBDbGFzc05hbWUgPSB7XHJcbiAgICBEUk9QRE9XTl9JVEVNOiAnZHJvcGRvd24taXRlbScsXHJcbiAgICBEUk9QRE9XTl9NRU5VOiAnZHJvcGRvd24tbWVudScsXHJcbiAgICBOQVZfTElOSzogJ25hdi1saW5rJyxcclxuICAgIE5BVjogJ25hdicsXHJcbiAgICBBQ1RJVkU6ICdhY3RpdmUnXHJcbiAgfTtcclxuXHJcbiAgdmFyIFNlbGVjdG9yID0ge1xyXG4gICAgREFUQV9TUFk6ICdbZGF0YS1zcHk9XCJzY3JvbGxcIl0nLFxyXG4gICAgQUNUSVZFOiAnLmFjdGl2ZScsXHJcbiAgICBMSVNUX0lURU06ICcubGlzdC1pdGVtJyxcclxuICAgIExJOiAnbGknLFxyXG4gICAgTElfRFJPUERPV046ICdsaS5kcm9wZG93bicsXHJcbiAgICBOQVZfTElOS1M6ICcubmF2LWxpbmsnLFxyXG4gICAgRFJPUERPV046ICcuZHJvcGRvd24nLFxyXG4gICAgRFJPUERPV05fSVRFTVM6ICcuZHJvcGRvd24taXRlbScsXHJcbiAgICBEUk9QRE9XTl9UT0dHTEU6ICcuZHJvcGRvd24tdG9nZ2xlJ1xyXG4gIH07XHJcblxyXG4gIHZhciBPZmZzZXRNZXRob2QgPSB7XHJcbiAgICBPRkZTRVQ6ICdvZmZzZXQnLFxyXG4gICAgUE9TSVRJT046ICdwb3NpdGlvbidcclxuICB9O1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDbGFzcyBEZWZpbml0aW9uXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gIHZhciBTY3JvbGxTcHkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBTY3JvbGxTcHkoZWxlbWVudCwgY29uZmlnKSB7XHJcbiAgICAgIHZhciBfdGhpczE4ID0gdGhpcztcclxuXHJcbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTY3JvbGxTcHkpO1xyXG5cclxuICAgICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgIHRoaXMuX3Njcm9sbEVsZW1lbnQgPSBlbGVtZW50LnRhZ05hbWUgPT09ICdCT0RZJyA/IHdpbmRvdyA6IGVsZW1lbnQ7XHJcbiAgICAgIHRoaXMuX2NvbmZpZyA9IHRoaXMuX2dldENvbmZpZyhjb25maWcpO1xyXG4gICAgICB0aGlzLl9zZWxlY3RvciA9IHRoaXMuX2NvbmZpZy50YXJnZXQgKyAnICcgKyBTZWxlY3Rvci5OQVZfTElOS1MgKyAnLCcgKyAodGhpcy5fY29uZmlnLnRhcmdldCArICcgJyArIFNlbGVjdG9yLkRST1BET1dOX0lURU1TKTtcclxuICAgICAgdGhpcy5fb2Zmc2V0cyA9IFtdO1xyXG4gICAgICB0aGlzLl90YXJnZXRzID0gW107XHJcbiAgICAgIHRoaXMuX2FjdGl2ZVRhcmdldCA9IG51bGw7XHJcbiAgICAgIHRoaXMuX3Njcm9sbEhlaWdodCA9IDA7XHJcblxyXG4gICAgICAkKHRoaXMuX3Njcm9sbEVsZW1lbnQpLm9uKEV2ZW50LlNDUk9MTCwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzMTguX3Byb2Nlc3MoZXZlbnQpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRoaXMucmVmcmVzaCgpO1xyXG4gICAgICB0aGlzLl9wcm9jZXNzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0dGVyc1xyXG5cclxuICAgIC8vIHB1YmxpY1xyXG5cclxuICAgIFNjcm9sbFNweS5wcm90b3R5cGUucmVmcmVzaCA9IGZ1bmN0aW9uIHJlZnJlc2goKSB7XHJcbiAgICAgIHZhciBfdGhpczE5ID0gdGhpcztcclxuXHJcbiAgICAgIHZhciBhdXRvTWV0aG9kID0gdGhpcy5fc2Nyb2xsRWxlbWVudCAhPT0gdGhpcy5fc2Nyb2xsRWxlbWVudC53aW5kb3cgPyBPZmZzZXRNZXRob2QuUE9TSVRJT04gOiBPZmZzZXRNZXRob2QuT0ZGU0VUO1xyXG5cclxuICAgICAgdmFyIG9mZnNldE1ldGhvZCA9IHRoaXMuX2NvbmZpZy5tZXRob2QgPT09ICdhdXRvJyA/IGF1dG9NZXRob2QgOiB0aGlzLl9jb25maWcubWV0aG9kO1xyXG5cclxuICAgICAgdmFyIG9mZnNldEJhc2UgPSBvZmZzZXRNZXRob2QgPT09IE9mZnNldE1ldGhvZC5QT1NJVElPTiA/IHRoaXMuX2dldFNjcm9sbFRvcCgpIDogMDtcclxuXHJcbiAgICAgIHRoaXMuX29mZnNldHMgPSBbXTtcclxuICAgICAgdGhpcy5fdGFyZ2V0cyA9IFtdO1xyXG5cclxuICAgICAgdGhpcy5fc2Nyb2xsSGVpZ2h0ID0gdGhpcy5fZ2V0U2Nyb2xsSGVpZ2h0KCk7XHJcblxyXG4gICAgICB2YXIgdGFyZ2V0cyA9ICQubWFrZUFycmF5KCQodGhpcy5fc2VsZWN0b3IpKTtcclxuXHJcbiAgICAgIHRhcmdldHMubWFwKGZ1bmN0aW9uIChlbGVtZW50KSB7XHJcbiAgICAgICAgdmFyIHRhcmdldCA9IHZvaWQgMDtcclxuICAgICAgICB2YXIgdGFyZ2V0U2VsZWN0b3IgPSBVdGlsLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQoZWxlbWVudCk7XHJcblxyXG4gICAgICAgIGlmICh0YXJnZXRTZWxlY3Rvcikge1xyXG4gICAgICAgICAgdGFyZ2V0ID0gJCh0YXJnZXRTZWxlY3RvcilbMF07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGFyZ2V0ICYmICh0YXJnZXQub2Zmc2V0V2lkdGggfHwgdGFyZ2V0Lm9mZnNldEhlaWdodCkpIHtcclxuICAgICAgICAgIC8vIHRvZG8gKGZhdCk6IHJlbW92ZSBza2V0Y2ggcmVsaWFuY2Ugb24galF1ZXJ5IHBvc2l0aW9uL29mZnNldFxyXG4gICAgICAgICAgcmV0dXJuIFskKHRhcmdldClbb2Zmc2V0TWV0aG9kXSgpLnRvcCArIG9mZnNldEJhc2UsIHRhcmdldFNlbGVjdG9yXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH0pLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgIHJldHVybiBpdGVtO1xyXG4gICAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICAgICAgcmV0dXJuIGFbMF0gLSBiWzBdO1xyXG4gICAgICB9KS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgX3RoaXMxOS5fb2Zmc2V0cy5wdXNoKGl0ZW1bMF0pO1xyXG4gICAgICAgIF90aGlzMTkuX3RhcmdldHMucHVzaChpdGVtWzFdKTtcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIFNjcm9sbFNweS5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XHJcbiAgICAgICQucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LCBEQVRBX0tFWSk7XHJcbiAgICAgICQodGhpcy5fc2Nyb2xsRWxlbWVudCkub2ZmKEVWRU5UX0tFWSk7XHJcblxyXG4gICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcclxuICAgICAgdGhpcy5fc2Nyb2xsRWxlbWVudCA9IG51bGw7XHJcbiAgICAgIHRoaXMuX2NvbmZpZyA9IG51bGw7XHJcbiAgICAgIHRoaXMuX3NlbGVjdG9yID0gbnVsbDtcclxuICAgICAgdGhpcy5fb2Zmc2V0cyA9IG51bGw7XHJcbiAgICAgIHRoaXMuX3RhcmdldHMgPSBudWxsO1xyXG4gICAgICB0aGlzLl9hY3RpdmVUYXJnZXQgPSBudWxsO1xyXG4gICAgICB0aGlzLl9zY3JvbGxIZWlnaHQgPSBudWxsO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBwcml2YXRlXHJcblxyXG4gICAgU2Nyb2xsU3B5LnByb3RvdHlwZS5fZ2V0Q29uZmlnID0gZnVuY3Rpb24gX2dldENvbmZpZyhjb25maWcpIHtcclxuICAgICAgY29uZmlnID0gJC5leHRlbmQoe30sIERlZmF1bHQsIGNvbmZpZyk7XHJcblxyXG4gICAgICBpZiAodHlwZW9mIGNvbmZpZy50YXJnZXQgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgdmFyIGlkID0gJChjb25maWcudGFyZ2V0KS5hdHRyKCdpZCcpO1xyXG4gICAgICAgIGlmICghaWQpIHtcclxuICAgICAgICAgIGlkID0gVXRpbC5nZXRVSUQoTkFNRSk7XHJcbiAgICAgICAgICAkKGNvbmZpZy50YXJnZXQpLmF0dHIoJ2lkJywgaWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25maWcudGFyZ2V0ID0gJyMnICsgaWQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIFV0aWwudHlwZUNoZWNrQ29uZmlnKE5BTUUsIGNvbmZpZywgRGVmYXVsdFR5cGUpO1xyXG5cclxuICAgICAgcmV0dXJuIGNvbmZpZztcclxuICAgIH07XHJcblxyXG4gICAgU2Nyb2xsU3B5LnByb3RvdHlwZS5fZ2V0U2Nyb2xsVG9wID0gZnVuY3Rpb24gX2dldFNjcm9sbFRvcCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3Njcm9sbEVsZW1lbnQgPT09IHdpbmRvdyA/IHRoaXMuX3Njcm9sbEVsZW1lbnQucGFnZVlPZmZzZXQgOiB0aGlzLl9zY3JvbGxFbGVtZW50LnNjcm9sbFRvcDtcclxuICAgIH07XHJcblxyXG4gICAgU2Nyb2xsU3B5LnByb3RvdHlwZS5fZ2V0U2Nyb2xsSGVpZ2h0ID0gZnVuY3Rpb24gX2dldFNjcm9sbEhlaWdodCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3Njcm9sbEVsZW1lbnQuc2Nyb2xsSGVpZ2h0IHx8IE1hdGgubWF4KGRvY3VtZW50LmJvZHkuc2Nyb2xsSGVpZ2h0LCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0KTtcclxuICAgIH07XHJcblxyXG4gICAgU2Nyb2xsU3B5LnByb3RvdHlwZS5fZ2V0T2Zmc2V0SGVpZ2h0ID0gZnVuY3Rpb24gX2dldE9mZnNldEhlaWdodCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3Njcm9sbEVsZW1lbnQgPT09IHdpbmRvdyA/IHdpbmRvdy5pbm5lckhlaWdodCA6IHRoaXMuX3Njcm9sbEVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xyXG4gICAgfTtcclxuXHJcbiAgICBTY3JvbGxTcHkucHJvdG90eXBlLl9wcm9jZXNzID0gZnVuY3Rpb24gX3Byb2Nlc3MoKSB7XHJcbiAgICAgIHZhciBzY3JvbGxUb3AgPSB0aGlzLl9nZXRTY3JvbGxUb3AoKSArIHRoaXMuX2NvbmZpZy5vZmZzZXQ7XHJcbiAgICAgIHZhciBzY3JvbGxIZWlnaHQgPSB0aGlzLl9nZXRTY3JvbGxIZWlnaHQoKTtcclxuICAgICAgdmFyIG1heFNjcm9sbCA9IHRoaXMuX2NvbmZpZy5vZmZzZXQgKyBzY3JvbGxIZWlnaHQgLSB0aGlzLl9nZXRPZmZzZXRIZWlnaHQoKTtcclxuXHJcbiAgICAgIGlmICh0aGlzLl9zY3JvbGxIZWlnaHQgIT09IHNjcm9sbEhlaWdodCkge1xyXG4gICAgICAgIHRoaXMucmVmcmVzaCgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoc2Nyb2xsVG9wID49IG1heFNjcm9sbCkge1xyXG4gICAgICAgIHZhciB0YXJnZXQgPSB0aGlzLl90YXJnZXRzW3RoaXMuX3RhcmdldHMubGVuZ3RoIC0gMV07XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9hY3RpdmVUYXJnZXQgIT09IHRhcmdldCkge1xyXG4gICAgICAgICAgdGhpcy5fYWN0aXZhdGUodGFyZ2V0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAodGhpcy5fYWN0aXZlVGFyZ2V0ICYmIHNjcm9sbFRvcCA8IHRoaXMuX29mZnNldHNbMF0gJiYgdGhpcy5fb2Zmc2V0c1swXSA+IDApIHtcclxuICAgICAgICB0aGlzLl9hY3RpdmVUYXJnZXQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2NsZWFyKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBmb3IgKHZhciBpID0gdGhpcy5fb2Zmc2V0cy5sZW5ndGg7IGktLTspIHtcclxuICAgICAgICB2YXIgaXNBY3RpdmVUYXJnZXQgPSB0aGlzLl9hY3RpdmVUYXJnZXQgIT09IHRoaXMuX3RhcmdldHNbaV0gJiYgc2Nyb2xsVG9wID49IHRoaXMuX29mZnNldHNbaV0gJiYgKHRoaXMuX29mZnNldHNbaSArIDFdID09PSB1bmRlZmluZWQgfHwgc2Nyb2xsVG9wIDwgdGhpcy5fb2Zmc2V0c1tpICsgMV0pO1xyXG5cclxuICAgICAgICBpZiAoaXNBY3RpdmVUYXJnZXQpIHtcclxuICAgICAgICAgIHRoaXMuX2FjdGl2YXRlKHRoaXMuX3RhcmdldHNbaV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBTY3JvbGxTcHkucHJvdG90eXBlLl9hY3RpdmF0ZSA9IGZ1bmN0aW9uIF9hY3RpdmF0ZSh0YXJnZXQpIHtcclxuICAgICAgdGhpcy5fYWN0aXZlVGFyZ2V0ID0gdGFyZ2V0O1xyXG5cclxuICAgICAgdGhpcy5fY2xlYXIoKTtcclxuXHJcbiAgICAgIHZhciBxdWVyaWVzID0gdGhpcy5fc2VsZWN0b3Iuc3BsaXQoJywnKTtcclxuICAgICAgcXVlcmllcyA9IHF1ZXJpZXMubWFwKGZ1bmN0aW9uIChzZWxlY3Rvcikge1xyXG4gICAgICAgIHJldHVybiBzZWxlY3RvciArICdbZGF0YS10YXJnZXQ9XCInICsgdGFyZ2V0ICsgJ1wiXSwnICsgKHNlbGVjdG9yICsgJ1tocmVmPVwiJyArIHRhcmdldCArICdcIl0nKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB2YXIgJGxpbmsgPSAkKHF1ZXJpZXMuam9pbignLCcpKTtcclxuXHJcbiAgICAgIGlmICgkbGluay5oYXNDbGFzcyhDbGFzc05hbWUuRFJPUERPV05fSVRFTSkpIHtcclxuICAgICAgICAkbGluay5jbG9zZXN0KFNlbGVjdG9yLkRST1BET1dOKS5maW5kKFNlbGVjdG9yLkRST1BET1dOX1RPR0dMRSkuYWRkQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSk7XHJcbiAgICAgICAgJGxpbmsuYWRkQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gdG9kbyAoZmF0KSB0aGlzIGlzIGtpbmRhIHN1cy4uLlxyXG4gICAgICAgIC8vIHJlY3Vyc2l2ZWx5IGFkZCBhY3RpdmVzIHRvIHRlc3RlZCBuYXYtbGlua3NcclxuICAgICAgICAkbGluay5wYXJlbnRzKFNlbGVjdG9yLkxJKS5maW5kKCc+ICcgKyBTZWxlY3Rvci5OQVZfTElOS1MpLmFkZENsYXNzKENsYXNzTmFtZS5BQ1RJVkUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAkKHRoaXMuX3Njcm9sbEVsZW1lbnQpLnRyaWdnZXIoRXZlbnQuQUNUSVZBVEUsIHtcclxuICAgICAgICByZWxhdGVkVGFyZ2V0OiB0YXJnZXRcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIFNjcm9sbFNweS5wcm90b3R5cGUuX2NsZWFyID0gZnVuY3Rpb24gX2NsZWFyKCkge1xyXG4gICAgICAkKHRoaXMuX3NlbGVjdG9yKS5maWx0ZXIoU2VsZWN0b3IuQUNUSVZFKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuQUNUSVZFKTtcclxuICAgIH07XHJcblxyXG4gICAgLy8gc3RhdGljXHJcblxyXG4gICAgU2Nyb2xsU3B5Ll9qUXVlcnlJbnRlcmZhY2UgPSBmdW5jdGlvbiBfalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZykge1xyXG4gICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuZGF0YShEQVRBX0tFWSk7XHJcbiAgICAgICAgdmFyIF9jb25maWcgPSAodHlwZW9mIGNvbmZpZyA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoY29uZmlnKSkgPT09ICdvYmplY3QnICYmIGNvbmZpZztcclxuXHJcbiAgICAgICAgaWYgKCFkYXRhKSB7XHJcbiAgICAgICAgICBkYXRhID0gbmV3IFNjcm9sbFNweSh0aGlzLCBfY29uZmlnKTtcclxuICAgICAgICAgICQodGhpcykuZGF0YShEQVRBX0tFWSwgZGF0YSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgIGlmIChkYXRhW2NvbmZpZ10gPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIG1ldGhvZCBuYW1lZCBcIicgKyBjb25maWcgKyAnXCInKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGRhdGFbY29uZmlnXSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIF9jcmVhdGVDbGFzcyhTY3JvbGxTcHksIG51bGwsIFt7XHJcbiAgICAgIGtleTogJ1ZFUlNJT04nLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gVkVSU0lPTjtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBrZXk6ICdEZWZhdWx0JyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIERlZmF1bHQ7XHJcbiAgICAgIH1cclxuICAgIH1dKTtcclxuXHJcbiAgICByZXR1cm4gU2Nyb2xsU3B5O1xyXG4gIH0oKTtcclxuXHJcbiAgLyoqXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICogRGF0YSBBcGkgaW1wbGVtZW50YXRpb25cclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgJCh3aW5kb3cpLm9uKEV2ZW50LkxPQURfREFUQV9BUEksIGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzY3JvbGxTcHlzID0gJC5tYWtlQXJyYXkoJChTZWxlY3Rvci5EQVRBX1NQWSkpO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSBzY3JvbGxTcHlzLmxlbmd0aDsgaS0tOykge1xyXG4gICAgICB2YXIgJHNweSA9ICQoc2Nyb2xsU3B5c1tpXSk7XHJcbiAgICAgIFNjcm9sbFNweS5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoJHNweSwgJHNweS5kYXRhKCkpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBqUXVlcnlcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgJC5mbltOQU1FXSA9IFNjcm9sbFNweS5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gICQuZm5bTkFNRV0uQ29uc3RydWN0b3IgPSBTY3JvbGxTcHk7XHJcbiAgJC5mbltOQU1FXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJC5mbltOQU1FXSA9IEpRVUVSWV9OT19DT05GTElDVDtcclxuICAgIHJldHVybiBTY3JvbGxTcHkuX2pRdWVyeUludGVyZmFjZTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gU2Nyb2xsU3B5O1xyXG59KGpRdWVyeSk7XHJcblxyXG4vKipcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogQm9vdHN0cmFwICh2NC4wLjAtYWxwaGEuNik6IHRhYi5qc1xyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKi9cclxuXHJcbnZhciBUYWIgPSBmdW5jdGlvbiAoJCkge1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDb25zdGFudHNcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIE5BTUUgPSAndGFiJztcclxuICB2YXIgVkVSU0lPTiA9ICc0LjAuMC1hbHBoYS42JztcclxuICB2YXIgREFUQV9LRVkgPSAnYnMudGFiJztcclxuICB2YXIgRVZFTlRfS0VZID0gJy4nICsgREFUQV9LRVk7XHJcbiAgdmFyIERBVEFfQVBJX0tFWSA9ICcuZGF0YS1hcGknO1xyXG4gIHZhciBKUVVFUllfTk9fQ09ORkxJQ1QgPSAkLmZuW05BTUVdO1xyXG4gIHZhciBUUkFOU0lUSU9OX0RVUkFUSU9OID0gMTUwO1xyXG5cclxuICB2YXIgRXZlbnQgPSB7XHJcbiAgICBISURFOiAnaGlkZScgKyBFVkVOVF9LRVksXHJcbiAgICBISURERU46ICdoaWRkZW4nICsgRVZFTlRfS0VZLFxyXG4gICAgU0hPVzogJ3Nob3cnICsgRVZFTlRfS0VZLFxyXG4gICAgU0hPV046ICdzaG93bicgKyBFVkVOVF9LRVksXHJcbiAgICBDTElDS19EQVRBX0FQSTogJ2NsaWNrJyArIEVWRU5UX0tFWSArIERBVEFfQVBJX0tFWVxyXG4gIH07XHJcblxyXG4gIHZhciBDbGFzc05hbWUgPSB7XHJcbiAgICBEUk9QRE9XTl9NRU5VOiAnZHJvcGRvd24tbWVudScsXHJcbiAgICBBQ1RJVkU6ICdhY3RpdmUnLFxyXG4gICAgRElTQUJMRUQ6ICdkaXNhYmxlZCcsXHJcbiAgICBGQURFOiAnZmFkZScsXHJcbiAgICBTSE9XOiAnc2hvdydcclxuICB9O1xyXG5cclxuICB2YXIgU2VsZWN0b3IgPSB7XHJcbiAgICBBOiAnYScsXHJcbiAgICBMSTogJ2xpJyxcclxuICAgIERST1BET1dOOiAnLmRyb3Bkb3duJyxcclxuICAgIExJU1Q6ICd1bDpub3QoLmRyb3Bkb3duLW1lbnUpLCBvbDpub3QoLmRyb3Bkb3duLW1lbnUpLCBuYXY6bm90KC5kcm9wZG93bi1tZW51KScsXHJcbiAgICBGQURFX0NISUxEOiAnPiAubmF2LWl0ZW0gLmZhZGUsID4gLmZhZGUnLFxyXG4gICAgQUNUSVZFOiAnLmFjdGl2ZScsXHJcbiAgICBBQ1RJVkVfQ0hJTEQ6ICc+IC5uYXYtaXRlbSA+IC5hY3RpdmUsID4gLmFjdGl2ZScsXHJcbiAgICBEQVRBX1RPR0dMRTogJ1tkYXRhLXRvZ2dsZT1cInRhYlwiXSwgW2RhdGEtdG9nZ2xlPVwicGlsbFwiXScsXHJcbiAgICBEUk9QRE9XTl9UT0dHTEU6ICcuZHJvcGRvd24tdG9nZ2xlJyxcclxuICAgIERST1BET1dOX0FDVElWRV9DSElMRDogJz4gLmRyb3Bkb3duLW1lbnUgLmFjdGl2ZSdcclxuICB9O1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDbGFzcyBEZWZpbml0aW9uXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gIHZhciBUYWIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBUYWIoZWxlbWVudCkge1xyXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGFiKTtcclxuXHJcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGdldHRlcnNcclxuXHJcbiAgICAvLyBwdWJsaWNcclxuXHJcbiAgICBUYWIucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiBzaG93KCkge1xyXG4gICAgICB2YXIgX3RoaXMyMCA9IHRoaXM7XHJcblxyXG4gICAgICBpZiAodGhpcy5fZWxlbWVudC5wYXJlbnROb2RlICYmIHRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUgJiYgJCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhDbGFzc05hbWUuQUNUSVZFKSB8fCAkKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKENsYXNzTmFtZS5ESVNBQkxFRCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciB0YXJnZXQgPSB2b2lkIDA7XHJcbiAgICAgIHZhciBwcmV2aW91cyA9IHZvaWQgMDtcclxuICAgICAgdmFyIGxpc3RFbGVtZW50ID0gJCh0aGlzLl9lbGVtZW50KS5jbG9zZXN0KFNlbGVjdG9yLkxJU1QpWzBdO1xyXG4gICAgICB2YXIgc2VsZWN0b3IgPSBVdGlsLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQodGhpcy5fZWxlbWVudCk7XHJcblxyXG4gICAgICBpZiAobGlzdEVsZW1lbnQpIHtcclxuICAgICAgICBwcmV2aW91cyA9ICQubWFrZUFycmF5KCQobGlzdEVsZW1lbnQpLmZpbmQoU2VsZWN0b3IuQUNUSVZFKSk7XHJcbiAgICAgICAgcHJldmlvdXMgPSBwcmV2aW91c1twcmV2aW91cy5sZW5ndGggLSAxXTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIGhpZGVFdmVudCA9ICQuRXZlbnQoRXZlbnQuSElERSwge1xyXG4gICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHRoaXMuX2VsZW1lbnRcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB2YXIgc2hvd0V2ZW50ID0gJC5FdmVudChFdmVudC5TSE9XLCB7XHJcbiAgICAgICAgcmVsYXRlZFRhcmdldDogcHJldmlvdXNcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAocHJldmlvdXMpIHtcclxuICAgICAgICAkKHByZXZpb3VzKS50cmlnZ2VyKGhpZGVFdmVudCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICQodGhpcy5fZWxlbWVudCkudHJpZ2dlcihzaG93RXZlbnQpO1xyXG5cclxuICAgICAgaWYgKHNob3dFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSB8fCBoaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChzZWxlY3Rvcikge1xyXG4gICAgICAgIHRhcmdldCA9ICQoc2VsZWN0b3IpWzBdO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLl9hY3RpdmF0ZSh0aGlzLl9lbGVtZW50LCBsaXN0RWxlbWVudCk7XHJcblxyXG4gICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiBjb21wbGV0ZSgpIHtcclxuICAgICAgICB2YXIgaGlkZGVuRXZlbnQgPSAkLkV2ZW50KEV2ZW50LkhJRERFTiwge1xyXG4gICAgICAgICAgcmVsYXRlZFRhcmdldDogX3RoaXMyMC5fZWxlbWVudFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB2YXIgc2hvd25FdmVudCA9ICQuRXZlbnQoRXZlbnQuU0hPV04sIHtcclxuICAgICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHByZXZpb3VzXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQocHJldmlvdXMpLnRyaWdnZXIoaGlkZGVuRXZlbnQpO1xyXG4gICAgICAgICQoX3RoaXMyMC5fZWxlbWVudCkudHJpZ2dlcihzaG93bkV2ZW50KTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGlmICh0YXJnZXQpIHtcclxuICAgICAgICB0aGlzLl9hY3RpdmF0ZSh0YXJnZXQsIHRhcmdldC5wYXJlbnROb2RlLCBjb21wbGV0ZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29tcGxldGUoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBUYWIucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiBkaXNwb3NlKCkge1xyXG4gICAgICAkLnJlbW92ZUNsYXNzKHRoaXMuX2VsZW1lbnQsIERBVEFfS0VZKTtcclxuICAgICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHByaXZhdGVcclxuXHJcbiAgICBUYWIucHJvdG90eXBlLl9hY3RpdmF0ZSA9IGZ1bmN0aW9uIF9hY3RpdmF0ZShlbGVtZW50LCBjb250YWluZXIsIGNhbGxiYWNrKSB7XHJcbiAgICAgIHZhciBfdGhpczIxID0gdGhpcztcclxuXHJcbiAgICAgIHZhciBhY3RpdmUgPSAkKGNvbnRhaW5lcikuZmluZChTZWxlY3Rvci5BQ1RJVkVfQ0hJTEQpWzBdO1xyXG4gICAgICB2YXIgaXNUcmFuc2l0aW9uaW5nID0gY2FsbGJhY2sgJiYgVXRpbC5zdXBwb3J0c1RyYW5zaXRpb25FbmQoKSAmJiAoYWN0aXZlICYmICQoYWN0aXZlKS5oYXNDbGFzcyhDbGFzc05hbWUuRkFERSkgfHwgQm9vbGVhbigkKGNvbnRhaW5lcikuZmluZChTZWxlY3Rvci5GQURFX0NISUxEKVswXSkpO1xyXG5cclxuICAgICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gY29tcGxldGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzMjEuX3RyYW5zaXRpb25Db21wbGV0ZShlbGVtZW50LCBhY3RpdmUsIGlzVHJhbnNpdGlvbmluZywgY2FsbGJhY2spO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgaWYgKGFjdGl2ZSAmJiBpc1RyYW5zaXRpb25pbmcpIHtcclxuICAgICAgICAkKGFjdGl2ZSkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGNvbXBsZXRlKS5lbXVsYXRlVHJhbnNpdGlvbkVuZChUUkFOU0lUSU9OX0RVUkFUSU9OKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb21wbGV0ZSgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoYWN0aXZlKSB7XHJcbiAgICAgICAgJChhY3RpdmUpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5TSE9XKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBUYWIucHJvdG90eXBlLl90cmFuc2l0aW9uQ29tcGxldGUgPSBmdW5jdGlvbiBfdHJhbnNpdGlvbkNvbXBsZXRlKGVsZW1lbnQsIGFjdGl2ZSwgaXNUcmFuc2l0aW9uaW5nLCBjYWxsYmFjaykge1xyXG4gICAgICBpZiAoYWN0aXZlKSB7XHJcbiAgICAgICAgJChhY3RpdmUpLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5BQ1RJVkUpO1xyXG5cclxuICAgICAgICB2YXIgZHJvcGRvd25DaGlsZCA9ICQoYWN0aXZlLnBhcmVudE5vZGUpLmZpbmQoU2VsZWN0b3IuRFJPUERPV05fQUNUSVZFX0NISUxEKVswXTtcclxuXHJcbiAgICAgICAgaWYgKGRyb3Bkb3duQ2hpbGQpIHtcclxuICAgICAgICAgICQoZHJvcGRvd25DaGlsZCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkFDVElWRSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhY3RpdmUuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgZmFsc2UpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAkKGVsZW1lbnQpLmFkZENsYXNzKENsYXNzTmFtZS5BQ1RJVkUpO1xyXG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIHRydWUpO1xyXG5cclxuICAgICAgaWYgKGlzVHJhbnNpdGlvbmluZykge1xyXG4gICAgICAgIFV0aWwucmVmbG93KGVsZW1lbnQpO1xyXG4gICAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3MoQ2xhc3NOYW1lLlNIT1cpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICQoZWxlbWVudCkucmVtb3ZlQ2xhc3MoQ2xhc3NOYW1lLkZBREUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoZWxlbWVudC5wYXJlbnROb2RlICYmICQoZWxlbWVudC5wYXJlbnROb2RlKS5oYXNDbGFzcyhDbGFzc05hbWUuRFJPUERPV05fTUVOVSkpIHtcclxuXHJcbiAgICAgICAgdmFyIGRyb3Bkb3duRWxlbWVudCA9ICQoZWxlbWVudCkuY2xvc2VzdChTZWxlY3Rvci5EUk9QRE9XTilbMF07XHJcbiAgICAgICAgaWYgKGRyb3Bkb3duRWxlbWVudCkge1xyXG4gICAgICAgICAgJChkcm9wZG93bkVsZW1lbnQpLmZpbmQoU2VsZWN0b3IuRFJPUERPV05fVE9HR0xFKS5hZGRDbGFzcyhDbGFzc05hbWUuQUNUSVZFKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChjYWxsYmFjaykge1xyXG4gICAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gc3RhdGljXHJcblxyXG4gICAgVGFiLl9qUXVlcnlJbnRlcmZhY2UgPSBmdW5jdGlvbiBfalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZykge1xyXG4gICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciBkYXRhID0gJHRoaXMuZGF0YShEQVRBX0tFWSk7XHJcblxyXG4gICAgICAgIGlmICghZGF0YSkge1xyXG4gICAgICAgICAgZGF0YSA9IG5ldyBUYWIodGhpcyk7XHJcbiAgICAgICAgICAkdGhpcy5kYXRhKERBVEFfS0VZLCBkYXRhKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgaWYgKGRhdGFbY29uZmlnXSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gbWV0aG9kIG5hbWVkIFwiJyArIGNvbmZpZyArICdcIicpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZGF0YVtjb25maWddKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgX2NyZWF0ZUNsYXNzKFRhYiwgbnVsbCwgW3tcclxuICAgICAga2V5OiAnVkVSU0lPTicsXHJcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICAgIHJldHVybiBWRVJTSU9OO1xyXG4gICAgICB9XHJcbiAgICB9XSk7XHJcblxyXG4gICAgcmV0dXJuIFRhYjtcclxuICB9KCk7XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIERhdGEgQXBpIGltcGxlbWVudGF0aW9uXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gICQoZG9jdW1lbnQpLm9uKEV2ZW50LkNMSUNLX0RBVEFfQVBJLCBTZWxlY3Rvci5EQVRBX1RPR0dMRSwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgVGFiLl9qUXVlcnlJbnRlcmZhY2UuY2FsbCgkKHRoaXMpLCAnc2hvdycpO1xyXG4gIH0pO1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBqUXVlcnlcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgJC5mbltOQU1FXSA9IFRhYi5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gICQuZm5bTkFNRV0uQ29uc3RydWN0b3IgPSBUYWI7XHJcbiAgJC5mbltOQU1FXS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgJC5mbltOQU1FXSA9IEpRVUVSWV9OT19DT05GTElDVDtcclxuICAgIHJldHVybiBUYWIuX2pRdWVyeUludGVyZmFjZTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gVGFiO1xyXG59KGpRdWVyeSk7XHJcblxyXG4vKiBnbG9iYWwgVGV0aGVyICovXHJcblxyXG4vKipcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogQm9vdHN0cmFwICh2NC4wLjAtYWxwaGEuNik6IHRvb2x0aXAuanNcclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICovXHJcblxyXG52YXIgVG9vbHRpcCA9IGZ1bmN0aW9uICgkKSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIENoZWNrIGZvciBUZXRoZXIgZGVwZW5kZW5jeVxyXG4gICAqIFRldGhlciAtIGh0dHA6Ly90ZXRoZXIuaW8vXHJcbiAgICovXHJcbiAgaWYgKHR5cGVvZiBUZXRoZXIgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Jvb3RzdHJhcCB0b29sdGlwcyByZXF1aXJlIFRldGhlciAoaHR0cDovL3RldGhlci5pby8pJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDb25zdGFudHNcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIE5BTUUgPSAndG9vbHRpcCc7XHJcbiAgdmFyIFZFUlNJT04gPSAnNC4wLjAtYWxwaGEuNic7XHJcbiAgdmFyIERBVEFfS0VZID0gJ2JzLnRvb2x0aXAnO1xyXG4gIHZhciBFVkVOVF9LRVkgPSAnLicgKyBEQVRBX0tFWTtcclxuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcclxuICB2YXIgVFJBTlNJVElPTl9EVVJBVElPTiA9IDE1MDtcclxuICB2YXIgQ0xBU1NfUFJFRklYID0gJ2JzLXRldGhlcic7XHJcblxyXG4gIHZhciBEZWZhdWx0ID0ge1xyXG4gICAgYW5pbWF0aW9uOiB0cnVlLFxyXG4gICAgdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPVwidG9vbHRpcFwiIHJvbGU9XCJ0b29sdGlwXCI+JyArICc8ZGl2IGNsYXNzPVwidG9vbHRpcC1pbm5lclwiPjwvZGl2PjwvZGl2PicsXHJcbiAgICB0cmlnZ2VyOiAnaG92ZXIgZm9jdXMnLFxyXG4gICAgdGl0bGU6ICcnLFxyXG4gICAgZGVsYXk6IDAsXHJcbiAgICBodG1sOiBmYWxzZSxcclxuICAgIHNlbGVjdG9yOiBmYWxzZSxcclxuICAgIHBsYWNlbWVudDogJ3RvcCcsXHJcbiAgICBvZmZzZXQ6ICcwIDAnLFxyXG4gICAgY29uc3RyYWludHM6IFtdLFxyXG4gICAgY29udGFpbmVyOiBmYWxzZVxyXG4gIH07XHJcblxyXG4gIHZhciBEZWZhdWx0VHlwZSA9IHtcclxuICAgIGFuaW1hdGlvbjogJ2Jvb2xlYW4nLFxyXG4gICAgdGVtcGxhdGU6ICdzdHJpbmcnLFxyXG4gICAgdGl0bGU6ICcoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb24pJyxcclxuICAgIHRyaWdnZXI6ICdzdHJpbmcnLFxyXG4gICAgZGVsYXk6ICcobnVtYmVyfG9iamVjdCknLFxyXG4gICAgaHRtbDogJ2Jvb2xlYW4nLFxyXG4gICAgc2VsZWN0b3I6ICcoc3RyaW5nfGJvb2xlYW4pJyxcclxuICAgIHBsYWNlbWVudDogJyhzdHJpbmd8ZnVuY3Rpb24pJyxcclxuICAgIG9mZnNldDogJ3N0cmluZycsXHJcbiAgICBjb25zdHJhaW50czogJ2FycmF5JyxcclxuICAgIGNvbnRhaW5lcjogJyhzdHJpbmd8ZWxlbWVudHxib29sZWFuKSdcclxuICB9O1xyXG5cclxuICB2YXIgQXR0YWNobWVudE1hcCA9IHtcclxuICAgIFRPUDogJ2JvdHRvbSBjZW50ZXInLFxyXG4gICAgUklHSFQ6ICdtaWRkbGUgbGVmdCcsXHJcbiAgICBCT1RUT006ICd0b3AgY2VudGVyJyxcclxuICAgIExFRlQ6ICdtaWRkbGUgcmlnaHQnXHJcbiAgfTtcclxuXHJcbiAgdmFyIEhvdmVyU3RhdGUgPSB7XHJcbiAgICBTSE9XOiAnc2hvdycsXHJcbiAgICBPVVQ6ICdvdXQnXHJcbiAgfTtcclxuXHJcbiAgdmFyIEV2ZW50ID0ge1xyXG4gICAgSElERTogJ2hpZGUnICsgRVZFTlRfS0VZLFxyXG4gICAgSElEREVOOiAnaGlkZGVuJyArIEVWRU5UX0tFWSxcclxuICAgIFNIT1c6ICdzaG93JyArIEVWRU5UX0tFWSxcclxuICAgIFNIT1dOOiAnc2hvd24nICsgRVZFTlRfS0VZLFxyXG4gICAgSU5TRVJURUQ6ICdpbnNlcnRlZCcgKyBFVkVOVF9LRVksXHJcbiAgICBDTElDSzogJ2NsaWNrJyArIEVWRU5UX0tFWSxcclxuICAgIEZPQ1VTSU46ICdmb2N1c2luJyArIEVWRU5UX0tFWSxcclxuICAgIEZPQ1VTT1VUOiAnZm9jdXNvdXQnICsgRVZFTlRfS0VZLFxyXG4gICAgTU9VU0VFTlRFUjogJ21vdXNlZW50ZXInICsgRVZFTlRfS0VZLFxyXG4gICAgTU9VU0VMRUFWRTogJ21vdXNlbGVhdmUnICsgRVZFTlRfS0VZXHJcbiAgfTtcclxuXHJcbiAgdmFyIENsYXNzTmFtZSA9IHtcclxuICAgIEZBREU6ICdmYWRlJyxcclxuICAgIFNIT1c6ICdzaG93J1xyXG4gIH07XHJcblxyXG4gIHZhciBTZWxlY3RvciA9IHtcclxuICAgIFRPT0xUSVA6ICcudG9vbHRpcCcsXHJcbiAgICBUT09MVElQX0lOTkVSOiAnLnRvb2x0aXAtaW5uZXInXHJcbiAgfTtcclxuXHJcbiAgdmFyIFRldGhlckNsYXNzID0ge1xyXG4gICAgZWxlbWVudDogZmFsc2UsXHJcbiAgICBlbmFibGVkOiBmYWxzZVxyXG4gIH07XHJcblxyXG4gIHZhciBUcmlnZ2VyID0ge1xyXG4gICAgSE9WRVI6ICdob3ZlcicsXHJcbiAgICBGT0NVUzogJ2ZvY3VzJyxcclxuICAgIENMSUNLOiAnY2xpY2snLFxyXG4gICAgTUFOVUFMOiAnbWFudWFsJ1xyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIENsYXNzIERlZmluaXRpb25cclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIFRvb2x0aXAgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBUb29sdGlwKGVsZW1lbnQsIGNvbmZpZykge1xyXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVG9vbHRpcCk7XHJcblxyXG4gICAgICAvLyBwcml2YXRlXHJcbiAgICAgIHRoaXMuX2lzRW5hYmxlZCA9IHRydWU7XHJcbiAgICAgIHRoaXMuX3RpbWVvdXQgPSAwO1xyXG4gICAgICB0aGlzLl9ob3ZlclN0YXRlID0gJyc7XHJcbiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXIgPSB7fTtcclxuICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuX3RldGhlciA9IG51bGw7XHJcblxyXG4gICAgICAvLyBwcm90ZWN0ZWRcclxuICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuICAgICAgdGhpcy5jb25maWcgPSB0aGlzLl9nZXRDb25maWcoY29uZmlnKTtcclxuICAgICAgdGhpcy50aXAgPSBudWxsO1xyXG5cclxuICAgICAgdGhpcy5fc2V0TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0dGVyc1xyXG5cclxuICAgIC8vIHB1YmxpY1xyXG5cclxuICAgIFRvb2x0aXAucHJvdG90eXBlLmVuYWJsZSA9IGZ1bmN0aW9uIGVuYWJsZSgpIHtcclxuICAgICAgdGhpcy5faXNFbmFibGVkID0gdHJ1ZTtcclxuICAgIH07XHJcblxyXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uIGRpc2FibGUoKSB7XHJcbiAgICAgIHRoaXMuX2lzRW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgfTtcclxuXHJcbiAgICBUb29sdGlwLnByb3RvdHlwZS50b2dnbGVFbmFibGVkID0gZnVuY3Rpb24gdG9nZ2xlRW5hYmxlZCgpIHtcclxuICAgICAgdGhpcy5faXNFbmFibGVkID0gIXRoaXMuX2lzRW5hYmxlZDtcclxuICAgIH07XHJcblxyXG4gICAgVG9vbHRpcC5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gdG9nZ2xlKGV2ZW50KSB7XHJcbiAgICAgIGlmIChldmVudCkge1xyXG4gICAgICAgIHZhciBkYXRhS2V5ID0gdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWTtcclxuICAgICAgICB2YXIgY29udGV4dCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YShkYXRhS2V5KTtcclxuXHJcbiAgICAgICAgaWYgKCFjb250ZXh0KSB7XHJcbiAgICAgICAgICBjb250ZXh0ID0gbmV3IHRoaXMuY29uc3RydWN0b3IoZXZlbnQuY3VycmVudFRhcmdldCwgdGhpcy5fZ2V0RGVsZWdhdGVDb25maWcoKSk7XHJcbiAgICAgICAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSwgY29udGV4dCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb250ZXh0Ll9hY3RpdmVUcmlnZ2VyLmNsaWNrID0gIWNvbnRleHQuX2FjdGl2ZVRyaWdnZXIuY2xpY2s7XHJcblxyXG4gICAgICAgIGlmIChjb250ZXh0Ll9pc1dpdGhBY3RpdmVUcmlnZ2VyKCkpIHtcclxuICAgICAgICAgIGNvbnRleHQuX2VudGVyKG51bGwsIGNvbnRleHQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjb250ZXh0Ll9sZWF2ZShudWxsLCBjb250ZXh0KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgIGlmICgkKHRoaXMuZ2V0VGlwRWxlbWVudCgpKS5oYXNDbGFzcyhDbGFzc05hbWUuU0hPVykpIHtcclxuICAgICAgICAgIHRoaXMuX2xlYXZlKG51bGwsIHRoaXMpO1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fZW50ZXIobnVsbCwgdGhpcyk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XHJcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KTtcclxuXHJcbiAgICAgIHRoaXMuY2xlYW51cFRldGhlcigpO1xyXG5cclxuICAgICAgJC5yZW1vdmVEYXRhKHRoaXMuZWxlbWVudCwgdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWSk7XHJcblxyXG4gICAgICAkKHRoaXMuZWxlbWVudCkub2ZmKHRoaXMuY29uc3RydWN0b3IuRVZFTlRfS0VZKTtcclxuICAgICAgJCh0aGlzLmVsZW1lbnQpLmNsb3Nlc3QoJy5tb2RhbCcpLm9mZignaGlkZS5icy5tb2RhbCcpO1xyXG5cclxuICAgICAgaWYgKHRoaXMudGlwKSB7XHJcbiAgICAgICAgJCh0aGlzLnRpcCkucmVtb3ZlKCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX2lzRW5hYmxlZCA9IG51bGw7XHJcbiAgICAgIHRoaXMuX3RpbWVvdXQgPSBudWxsO1xyXG4gICAgICB0aGlzLl9ob3ZlclN0YXRlID0gbnVsbDtcclxuICAgICAgdGhpcy5fYWN0aXZlVHJpZ2dlciA9IG51bGw7XHJcbiAgICAgIHRoaXMuX3RldGhlciA9IG51bGw7XHJcblxyXG4gICAgICB0aGlzLmVsZW1lbnQgPSBudWxsO1xyXG4gICAgICB0aGlzLmNvbmZpZyA9IG51bGw7XHJcbiAgICAgIHRoaXMudGlwID0gbnVsbDtcclxuICAgIH07XHJcblxyXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uIHNob3coKSB7XHJcbiAgICAgIHZhciBfdGhpczIyID0gdGhpcztcclxuXHJcbiAgICAgIGlmICgkKHRoaXMuZWxlbWVudCkuY3NzKCdkaXNwbGF5JykgPT09ICdub25lJykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIHVzZSBzaG93IG9uIHZpc2libGUgZWxlbWVudHMnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHNob3dFdmVudCA9ICQuRXZlbnQodGhpcy5jb25zdHJ1Y3Rvci5FdmVudC5TSE9XKTtcclxuICAgICAgaWYgKHRoaXMuaXNXaXRoQ29udGVudCgpICYmIHRoaXMuX2lzRW5hYmxlZCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9pc1RyYW5zaXRpb25pbmcpIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVG9vbHRpcCBpcyB0cmFuc2l0aW9uaW5nJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICQodGhpcy5lbGVtZW50KS50cmlnZ2VyKHNob3dFdmVudCk7XHJcblxyXG4gICAgICAgIHZhciBpc0luVGhlRG9tID0gJC5jb250YWlucyh0aGlzLmVsZW1lbnQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHRoaXMuZWxlbWVudCk7XHJcblxyXG4gICAgICAgIGlmIChzaG93RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgfHwgIWlzSW5UaGVEb20pIHtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciB0aXAgPSB0aGlzLmdldFRpcEVsZW1lbnQoKTtcclxuICAgICAgICB2YXIgdGlwSWQgPSBVdGlsLmdldFVJRCh0aGlzLmNvbnN0cnVjdG9yLk5BTUUpO1xyXG5cclxuICAgICAgICB0aXAuc2V0QXR0cmlidXRlKCdpZCcsIHRpcElkKTtcclxuICAgICAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5JywgdGlwSWQpO1xyXG5cclxuICAgICAgICB0aGlzLnNldENvbnRlbnQoKTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmFuaW1hdGlvbikge1xyXG4gICAgICAgICAgJCh0aXApLmFkZENsYXNzKENsYXNzTmFtZS5GQURFKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBwbGFjZW1lbnQgPSB0eXBlb2YgdGhpcy5jb25maWcucGxhY2VtZW50ID09PSAnZnVuY3Rpb24nID8gdGhpcy5jb25maWcucGxhY2VtZW50LmNhbGwodGhpcywgdGlwLCB0aGlzLmVsZW1lbnQpIDogdGhpcy5jb25maWcucGxhY2VtZW50O1xyXG5cclxuICAgICAgICB2YXIgYXR0YWNobWVudCA9IHRoaXMuX2dldEF0dGFjaG1lbnQocGxhY2VtZW50KTtcclxuXHJcbiAgICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuY29uZmlnLmNvbnRhaW5lciA9PT0gZmFsc2UgPyBkb2N1bWVudC5ib2R5IDogJCh0aGlzLmNvbmZpZy5jb250YWluZXIpO1xyXG5cclxuICAgICAgICAkKHRpcCkuZGF0YSh0aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZLCB0aGlzKS5hcHBlbmRUbyhjb250YWluZXIpO1xyXG5cclxuICAgICAgICAkKHRoaXMuZWxlbWVudCkudHJpZ2dlcih0aGlzLmNvbnN0cnVjdG9yLkV2ZW50LklOU0VSVEVEKTtcclxuXHJcbiAgICAgICAgdGhpcy5fdGV0aGVyID0gbmV3IFRldGhlcih7XHJcbiAgICAgICAgICBhdHRhY2htZW50OiBhdHRhY2htZW50LFxyXG4gICAgICAgICAgZWxlbWVudDogdGlwLFxyXG4gICAgICAgICAgdGFyZ2V0OiB0aGlzLmVsZW1lbnQsXHJcbiAgICAgICAgICBjbGFzc2VzOiBUZXRoZXJDbGFzcyxcclxuICAgICAgICAgIGNsYXNzUHJlZml4OiBDTEFTU19QUkVGSVgsXHJcbiAgICAgICAgICBvZmZzZXQ6IHRoaXMuY29uZmlnLm9mZnNldCxcclxuICAgICAgICAgIGNvbnN0cmFpbnRzOiB0aGlzLmNvbmZpZy5jb25zdHJhaW50cyxcclxuICAgICAgICAgIGFkZFRhcmdldENsYXNzZXM6IGZhbHNlXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIFV0aWwucmVmbG93KHRpcCk7XHJcbiAgICAgICAgdGhpcy5fdGV0aGVyLnBvc2l0aW9uKCk7XHJcblxyXG4gICAgICAgICQodGlwKS5hZGRDbGFzcyhDbGFzc05hbWUuU0hPVyk7XHJcblxyXG4gICAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xyXG4gICAgICAgICAgdmFyIHByZXZIb3ZlclN0YXRlID0gX3RoaXMyMi5faG92ZXJTdGF0ZTtcclxuICAgICAgICAgIF90aGlzMjIuX2hvdmVyU3RhdGUgPSBudWxsO1xyXG4gICAgICAgICAgX3RoaXMyMi5faXNUcmFuc2l0aW9uaW5nID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgJChfdGhpczIyLmVsZW1lbnQpLnRyaWdnZXIoX3RoaXMyMi5jb25zdHJ1Y3Rvci5FdmVudC5TSE9XTik7XHJcblxyXG4gICAgICAgICAgaWYgKHByZXZIb3ZlclN0YXRlID09PSBIb3ZlclN0YXRlLk9VVCkge1xyXG4gICAgICAgICAgICBfdGhpczIyLl9sZWF2ZShudWxsLCBfdGhpczIyKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBpZiAoVXRpbC5zdXBwb3J0c1RyYW5zaXRpb25FbmQoKSAmJiAkKHRoaXMudGlwKS5oYXNDbGFzcyhDbGFzc05hbWUuRkFERSkpIHtcclxuICAgICAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IHRydWU7XHJcbiAgICAgICAgICAkKHRoaXMudGlwKS5vbmUoVXRpbC5UUkFOU0lUSU9OX0VORCwgY29tcGxldGUpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRvb2x0aXAuX1RSQU5TSVRJT05fRFVSQVRJT04pO1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29tcGxldGUoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBUb29sdGlwLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gaGlkZShjYWxsYmFjaykge1xyXG4gICAgICB2YXIgX3RoaXMyMyA9IHRoaXM7XHJcblxyXG4gICAgICB2YXIgdGlwID0gdGhpcy5nZXRUaXBFbGVtZW50KCk7XHJcbiAgICAgIHZhciBoaWRlRXZlbnQgPSAkLkV2ZW50KHRoaXMuY29uc3RydWN0b3IuRXZlbnQuSElERSk7XHJcbiAgICAgIGlmICh0aGlzLl9pc1RyYW5zaXRpb25pbmcpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Rvb2x0aXAgaXMgdHJhbnNpdGlvbmluZycpO1xyXG4gICAgICB9XHJcbiAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xyXG4gICAgICAgIGlmIChfdGhpczIzLl9ob3ZlclN0YXRlICE9PSBIb3ZlclN0YXRlLlNIT1cgJiYgdGlwLnBhcmVudE5vZGUpIHtcclxuICAgICAgICAgIHRpcC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRpcCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBfdGhpczIzLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5Jyk7XHJcbiAgICAgICAgJChfdGhpczIzLmVsZW1lbnQpLnRyaWdnZXIoX3RoaXMyMy5jb25zdHJ1Y3Rvci5FdmVudC5ISURERU4pO1xyXG4gICAgICAgIF90aGlzMjMuX2lzVHJhbnNpdGlvbmluZyA9IGZhbHNlO1xyXG4gICAgICAgIF90aGlzMjMuY2xlYW51cFRldGhlcigpO1xyXG5cclxuICAgICAgICBpZiAoY2FsbGJhY2spIHtcclxuICAgICAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgJCh0aGlzLmVsZW1lbnQpLnRyaWdnZXIoaGlkZUV2ZW50KTtcclxuXHJcbiAgICAgIGlmIChoaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICQodGlwKS5yZW1vdmVDbGFzcyhDbGFzc05hbWUuU0hPVyk7XHJcblxyXG4gICAgICB0aGlzLl9hY3RpdmVUcmlnZ2VyW1RyaWdnZXIuQ0xJQ0tdID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVHJpZ2dlci5GT0NVU10gPSBmYWxzZTtcclxuICAgICAgdGhpcy5fYWN0aXZlVHJpZ2dlcltUcmlnZ2VyLkhPVkVSXSA9IGZhbHNlO1xyXG5cclxuICAgICAgaWYgKFV0aWwuc3VwcG9ydHNUcmFuc2l0aW9uRW5kKCkgJiYgJCh0aGlzLnRpcCkuaGFzQ2xhc3MoQ2xhc3NOYW1lLkZBREUpKSB7XHJcbiAgICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gdHJ1ZTtcclxuICAgICAgICAkKHRpcCkub25lKFV0aWwuVFJBTlNJVElPTl9FTkQsIGNvbXBsZXRlKS5lbXVsYXRlVHJhbnNpdGlvbkVuZChUUkFOU0lUSU9OX0RVUkFUSU9OKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb21wbGV0ZSgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLl9ob3ZlclN0YXRlID0gJyc7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHByb3RlY3RlZFxyXG5cclxuICAgIFRvb2x0aXAucHJvdG90eXBlLmlzV2l0aENvbnRlbnQgPSBmdW5jdGlvbiBpc1dpdGhDb250ZW50KCkge1xyXG4gICAgICByZXR1cm4gQm9vbGVhbih0aGlzLmdldFRpdGxlKCkpO1xyXG4gICAgfTtcclxuXHJcbiAgICBUb29sdGlwLnByb3RvdHlwZS5nZXRUaXBFbGVtZW50ID0gZnVuY3Rpb24gZ2V0VGlwRWxlbWVudCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMudGlwID0gdGhpcy50aXAgfHwgJCh0aGlzLmNvbmZpZy50ZW1wbGF0ZSlbMF07XHJcbiAgICB9O1xyXG5cclxuICAgIFRvb2x0aXAucHJvdG90eXBlLnNldENvbnRlbnQgPSBmdW5jdGlvbiBzZXRDb250ZW50KCkge1xyXG4gICAgICB2YXIgJHRpcCA9ICQodGhpcy5nZXRUaXBFbGVtZW50KCkpO1xyXG5cclxuICAgICAgdGhpcy5zZXRFbGVtZW50Q29udGVudCgkdGlwLmZpbmQoU2VsZWN0b3IuVE9PTFRJUF9JTk5FUiksIHRoaXMuZ2V0VGl0bGUoKSk7XHJcblxyXG4gICAgICAkdGlwLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5GQURFICsgJyAnICsgQ2xhc3NOYW1lLlNIT1cpO1xyXG5cclxuICAgICAgdGhpcy5jbGVhbnVwVGV0aGVyKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIFRvb2x0aXAucHJvdG90eXBlLnNldEVsZW1lbnRDb250ZW50ID0gZnVuY3Rpb24gc2V0RWxlbWVudENvbnRlbnQoJGVsZW1lbnQsIGNvbnRlbnQpIHtcclxuICAgICAgdmFyIGh0bWwgPSB0aGlzLmNvbmZpZy5odG1sO1xyXG4gICAgICBpZiAoKHR5cGVvZiBjb250ZW50ID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihjb250ZW50KSkgPT09ICdvYmplY3QnICYmIChjb250ZW50Lm5vZGVUeXBlIHx8IGNvbnRlbnQuanF1ZXJ5KSkge1xyXG4gICAgICAgIC8vIGNvbnRlbnQgaXMgYSBET00gbm9kZSBvciBhIGpRdWVyeVxyXG4gICAgICAgIGlmIChodG1sKSB7XHJcbiAgICAgICAgICBpZiAoISQoY29udGVudCkucGFyZW50KCkuaXMoJGVsZW1lbnQpKSB7XHJcbiAgICAgICAgICAgICRlbGVtZW50LmVtcHR5KCkuYXBwZW5kKGNvbnRlbnQpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAkZWxlbWVudC50ZXh0KCQoY29udGVudCkudGV4dCgpKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJGVsZW1lbnRbaHRtbCA/ICdodG1sJyA6ICd0ZXh0J10oY29udGVudCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0VGl0bGUgPSBmdW5jdGlvbiBnZXRUaXRsZSgpIHtcclxuICAgICAgdmFyIHRpdGxlID0gdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1vcmlnaW5hbC10aXRsZScpO1xyXG5cclxuICAgICAgaWYgKCF0aXRsZSkge1xyXG4gICAgICAgIHRpdGxlID0gdHlwZW9mIHRoaXMuY29uZmlnLnRpdGxlID09PSAnZnVuY3Rpb24nID8gdGhpcy5jb25maWcudGl0bGUuY2FsbCh0aGlzLmVsZW1lbnQpIDogdGhpcy5jb25maWcudGl0bGU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiB0aXRsZTtcclxuICAgIH07XHJcblxyXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuY2xlYW51cFRldGhlciA9IGZ1bmN0aW9uIGNsZWFudXBUZXRoZXIoKSB7XHJcbiAgICAgIGlmICh0aGlzLl90ZXRoZXIpIHtcclxuICAgICAgICB0aGlzLl90ZXRoZXIuZGVzdHJveSgpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHByaXZhdGVcclxuXHJcbiAgICBUb29sdGlwLnByb3RvdHlwZS5fZ2V0QXR0YWNobWVudCA9IGZ1bmN0aW9uIF9nZXRBdHRhY2htZW50KHBsYWNlbWVudCkge1xyXG4gICAgICByZXR1cm4gQXR0YWNobWVudE1hcFtwbGFjZW1lbnQudG9VcHBlckNhc2UoKV07XHJcbiAgICB9O1xyXG5cclxuICAgIFRvb2x0aXAucHJvdG90eXBlLl9zZXRMaXN0ZW5lcnMgPSBmdW5jdGlvbiBfc2V0TGlzdGVuZXJzKCkge1xyXG4gICAgICB2YXIgX3RoaXMyNCA9IHRoaXM7XHJcblxyXG4gICAgICB2YXIgdHJpZ2dlcnMgPSB0aGlzLmNvbmZpZy50cmlnZ2VyLnNwbGl0KCcgJyk7XHJcblxyXG4gICAgICB0cmlnZ2Vycy5mb3JFYWNoKGZ1bmN0aW9uICh0cmlnZ2VyKSB7XHJcbiAgICAgICAgaWYgKHRyaWdnZXIgPT09ICdjbGljaycpIHtcclxuICAgICAgICAgICQoX3RoaXMyNC5lbGVtZW50KS5vbihfdGhpczI0LmNvbnN0cnVjdG9yLkV2ZW50LkNMSUNLLCBfdGhpczI0LmNvbmZpZy5zZWxlY3RvciwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBfdGhpczI0LnRvZ2dsZShldmVudCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRyaWdnZXIgIT09IFRyaWdnZXIuTUFOVUFMKSB7XHJcbiAgICAgICAgICB2YXIgZXZlbnRJbiA9IHRyaWdnZXIgPT09IFRyaWdnZXIuSE9WRVIgPyBfdGhpczI0LmNvbnN0cnVjdG9yLkV2ZW50Lk1PVVNFRU5URVIgOiBfdGhpczI0LmNvbnN0cnVjdG9yLkV2ZW50LkZPQ1VTSU47XHJcbiAgICAgICAgICB2YXIgZXZlbnRPdXQgPSB0cmlnZ2VyID09PSBUcmlnZ2VyLkhPVkVSID8gX3RoaXMyNC5jb25zdHJ1Y3Rvci5FdmVudC5NT1VTRUxFQVZFIDogX3RoaXMyNC5jb25zdHJ1Y3Rvci5FdmVudC5GT0NVU09VVDtcclxuXHJcbiAgICAgICAgICAkKF90aGlzMjQuZWxlbWVudCkub24oZXZlbnRJbiwgX3RoaXMyNC5jb25maWcuc2VsZWN0b3IsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gX3RoaXMyNC5fZW50ZXIoZXZlbnQpO1xyXG4gICAgICAgICAgfSkub24oZXZlbnRPdXQsIF90aGlzMjQuY29uZmlnLnNlbGVjdG9yLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIF90aGlzMjQuX2xlYXZlKGV2ZW50KTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJChfdGhpczI0LmVsZW1lbnQpLmNsb3Nlc3QoJy5tb2RhbCcpLm9uKCdoaWRlLmJzLm1vZGFsJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgcmV0dXJuIF90aGlzMjQuaGlkZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmICh0aGlzLmNvbmZpZy5zZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuY29uZmlnID0gJC5leHRlbmQoe30sIHRoaXMuY29uZmlnLCB7XHJcbiAgICAgICAgICB0cmlnZ2VyOiAnbWFudWFsJyxcclxuICAgICAgICAgIHNlbGVjdG9yOiAnJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuX2ZpeFRpdGxlKCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuX2ZpeFRpdGxlID0gZnVuY3Rpb24gX2ZpeFRpdGxlKCkge1xyXG4gICAgICB2YXIgdGl0bGVUeXBlID0gX3R5cGVvZih0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLW9yaWdpbmFsLXRpdGxlJykpO1xyXG4gICAgICBpZiAodGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgndGl0bGUnKSB8fCB0aXRsZVR5cGUgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1vcmlnaW5hbC10aXRsZScsIHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJykgfHwgJycpO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgJycpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIFRvb2x0aXAucHJvdG90eXBlLl9lbnRlciA9IGZ1bmN0aW9uIF9lbnRlcihldmVudCwgY29udGV4dCkge1xyXG4gICAgICB2YXIgZGF0YUtleSA9IHRoaXMuY29uc3RydWN0b3IuREFUQV9LRVk7XHJcblxyXG4gICAgICBjb250ZXh0ID0gY29udGV4dCB8fCAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSk7XHJcblxyXG4gICAgICBpZiAoIWNvbnRleHQpIHtcclxuICAgICAgICBjb250ZXh0ID0gbmV3IHRoaXMuY29uc3RydWN0b3IoZXZlbnQuY3VycmVudFRhcmdldCwgdGhpcy5fZ2V0RGVsZWdhdGVDb25maWcoKSk7XHJcbiAgICAgICAgJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKGRhdGFLZXksIGNvbnRleHQpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoZXZlbnQpIHtcclxuICAgICAgICBjb250ZXh0Ll9hY3RpdmVUcmlnZ2VyW2V2ZW50LnR5cGUgPT09ICdmb2N1c2luJyA/IFRyaWdnZXIuRk9DVVMgOiBUcmlnZ2VyLkhPVkVSXSA9IHRydWU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICgkKGNvbnRleHQuZ2V0VGlwRWxlbWVudCgpKS5oYXNDbGFzcyhDbGFzc05hbWUuU0hPVykgfHwgY29udGV4dC5faG92ZXJTdGF0ZSA9PT0gSG92ZXJTdGF0ZS5TSE9XKSB7XHJcbiAgICAgICAgY29udGV4dC5faG92ZXJTdGF0ZSA9IEhvdmVyU3RhdGUuU0hPVztcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNsZWFyVGltZW91dChjb250ZXh0Ll90aW1lb3V0KTtcclxuXHJcbiAgICAgIGNvbnRleHQuX2hvdmVyU3RhdGUgPSBIb3ZlclN0YXRlLlNIT1c7XHJcblxyXG4gICAgICBpZiAoIWNvbnRleHQuY29uZmlnLmRlbGF5IHx8ICFjb250ZXh0LmNvbmZpZy5kZWxheS5zaG93KSB7XHJcbiAgICAgICAgY29udGV4dC5zaG93KCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb250ZXh0Ll90aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGNvbnRleHQuX2hvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuU0hPVykge1xyXG4gICAgICAgICAgY29udGV4dC5zaG93KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCBjb250ZXh0LmNvbmZpZy5kZWxheS5zaG93KTtcclxuICAgIH07XHJcblxyXG4gICAgVG9vbHRpcC5wcm90b3R5cGUuX2xlYXZlID0gZnVuY3Rpb24gX2xlYXZlKGV2ZW50LCBjb250ZXh0KSB7XHJcbiAgICAgIHZhciBkYXRhS2V5ID0gdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWTtcclxuXHJcbiAgICAgIGNvbnRleHQgPSBjb250ZXh0IHx8ICQoZXZlbnQuY3VycmVudFRhcmdldCkuZGF0YShkYXRhS2V5KTtcclxuXHJcbiAgICAgIGlmICghY29udGV4dCkge1xyXG4gICAgICAgIGNvbnRleHQgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihldmVudC5jdXJyZW50VGFyZ2V0LCB0aGlzLl9nZXREZWxlZ2F0ZUNvbmZpZygpKTtcclxuICAgICAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmRhdGEoZGF0YUtleSwgY29udGV4dCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChldmVudCkge1xyXG4gICAgICAgIGNvbnRleHQuX2FjdGl2ZVRyaWdnZXJbZXZlbnQudHlwZSA9PT0gJ2ZvY3Vzb3V0JyA/IFRyaWdnZXIuRk9DVVMgOiBUcmlnZ2VyLkhPVkVSXSA9IGZhbHNlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoY29udGV4dC5faXNXaXRoQWN0aXZlVHJpZ2dlcigpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjbGVhclRpbWVvdXQoY29udGV4dC5fdGltZW91dCk7XHJcblxyXG4gICAgICBjb250ZXh0Ll9ob3ZlclN0YXRlID0gSG92ZXJTdGF0ZS5PVVQ7XHJcblxyXG4gICAgICBpZiAoIWNvbnRleHQuY29uZmlnLmRlbGF5IHx8ICFjb250ZXh0LmNvbmZpZy5kZWxheS5oaWRlKSB7XHJcbiAgICAgICAgY29udGV4dC5oaWRlKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb250ZXh0Ll90aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGNvbnRleHQuX2hvdmVyU3RhdGUgPT09IEhvdmVyU3RhdGUuT1VUKSB7XHJcbiAgICAgICAgICBjb250ZXh0LmhpZGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sIGNvbnRleHQuY29uZmlnLmRlbGF5LmhpZGUpO1xyXG4gICAgfTtcclxuXHJcbiAgICBUb29sdGlwLnByb3RvdHlwZS5faXNXaXRoQWN0aXZlVHJpZ2dlciA9IGZ1bmN0aW9uIF9pc1dpdGhBY3RpdmVUcmlnZ2VyKCkge1xyXG4gICAgICBmb3IgKHZhciB0cmlnZ2VyIGluIHRoaXMuX2FjdGl2ZVRyaWdnZXIpIHtcclxuICAgICAgICBpZiAodGhpcy5fYWN0aXZlVHJpZ2dlclt0cmlnZ2VyXSkge1xyXG4gICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9O1xyXG5cclxuICAgIFRvb2x0aXAucHJvdG90eXBlLl9nZXRDb25maWcgPSBmdW5jdGlvbiBfZ2V0Q29uZmlnKGNvbmZpZykge1xyXG4gICAgICBjb25maWcgPSAkLmV4dGVuZCh7fSwgdGhpcy5jb25zdHJ1Y3Rvci5EZWZhdWx0LCAkKHRoaXMuZWxlbWVudCkuZGF0YSgpLCBjb25maWcpO1xyXG5cclxuICAgICAgaWYgKGNvbmZpZy5kZWxheSAmJiB0eXBlb2YgY29uZmlnLmRlbGF5ID09PSAnbnVtYmVyJykge1xyXG4gICAgICAgIGNvbmZpZy5kZWxheSA9IHtcclxuICAgICAgICAgIHNob3c6IGNvbmZpZy5kZWxheSxcclxuICAgICAgICAgIGhpZGU6IGNvbmZpZy5kZWxheVxyXG4gICAgICAgIH07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIFV0aWwudHlwZUNoZWNrQ29uZmlnKE5BTUUsIGNvbmZpZywgdGhpcy5jb25zdHJ1Y3Rvci5EZWZhdWx0VHlwZSk7XHJcblxyXG4gICAgICByZXR1cm4gY29uZmlnO1xyXG4gICAgfTtcclxuXHJcbiAgICBUb29sdGlwLnByb3RvdHlwZS5fZ2V0RGVsZWdhdGVDb25maWcgPSBmdW5jdGlvbiBfZ2V0RGVsZWdhdGVDb25maWcoKSB7XHJcbiAgICAgIHZhciBjb25maWcgPSB7fTtcclxuXHJcbiAgICAgIGlmICh0aGlzLmNvbmZpZykge1xyXG4gICAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLmNvbmZpZykge1xyXG4gICAgICAgICAgaWYgKHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdFtrZXldICE9PSB0aGlzLmNvbmZpZ1trZXldKSB7XHJcbiAgICAgICAgICAgIGNvbmZpZ1trZXldID0gdGhpcy5jb25maWdba2V5XTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBjb25maWc7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHN0YXRpY1xyXG5cclxuICAgIFRvb2x0aXAuX2pRdWVyeUludGVyZmFjZSA9IGZ1bmN0aW9uIF9qUXVlcnlJbnRlcmZhY2UoY29uZmlnKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5kYXRhKERBVEFfS0VZKTtcclxuICAgICAgICB2YXIgX2NvbmZpZyA9ICh0eXBlb2YgY29uZmlnID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihjb25maWcpKSA9PT0gJ29iamVjdCcgJiYgY29uZmlnO1xyXG5cclxuICAgICAgICBpZiAoIWRhdGEgJiYgL2Rpc3Bvc2V8aGlkZS8udGVzdChjb25maWcpKSB7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICAgIGRhdGEgPSBuZXcgVG9vbHRpcCh0aGlzLCBfY29uZmlnKTtcclxuICAgICAgICAgICQodGhpcykuZGF0YShEQVRBX0tFWSwgZGF0YSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgIGlmIChkYXRhW2NvbmZpZ10gPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIG1ldGhvZCBuYW1lZCBcIicgKyBjb25maWcgKyAnXCInKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGRhdGFbY29uZmlnXSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIF9jcmVhdGVDbGFzcyhUb29sdGlwLCBudWxsLCBbe1xyXG4gICAgICBrZXk6ICdWRVJTSU9OJyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIFZFUlNJT047XHJcbiAgICAgIH1cclxuICAgIH0sIHtcclxuICAgICAga2V5OiAnRGVmYXVsdCcsXHJcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICAgIHJldHVybiBEZWZhdWx0O1xyXG4gICAgICB9XHJcbiAgICB9LCB7XHJcbiAgICAgIGtleTogJ05BTUUnLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gTkFNRTtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBrZXk6ICdEQVRBX0tFWScsXHJcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICAgIHJldHVybiBEQVRBX0tFWTtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBrZXk6ICdFdmVudCcsXHJcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICAgIHJldHVybiBFdmVudDtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBrZXk6ICdFVkVOVF9LRVknLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gRVZFTlRfS0VZO1xyXG4gICAgICB9XHJcbiAgICB9LCB7XHJcbiAgICAgIGtleTogJ0RlZmF1bHRUeXBlJyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIERlZmF1bHRUeXBlO1xyXG4gICAgICB9XHJcbiAgICB9XSk7XHJcblxyXG4gICAgcmV0dXJuIFRvb2x0aXA7XHJcbiAgfSgpO1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBqUXVlcnlcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgJC5mbltOQU1FXSA9IFRvb2x0aXAuX2pRdWVyeUludGVyZmFjZTtcclxuICAkLmZuW05BTUVdLkNvbnN0cnVjdG9yID0gVG9vbHRpcDtcclxuICAkLmZuW05BTUVdLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAkLmZuW05BTUVdID0gSlFVRVJZX05PX0NPTkZMSUNUO1xyXG4gICAgcmV0dXJuIFRvb2x0aXAuX2pRdWVyeUludGVyZmFjZTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gVG9vbHRpcDtcclxufShqUXVlcnkpO1xyXG5cclxuLyoqXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEJvb3RzdHJhcCAodjQuMC4wLWFscGhhLjYpOiBwb3BvdmVyLmpzXHJcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqL1xyXG5cclxudmFyIFBvcG92ZXIgPSBmdW5jdGlvbiAoJCkge1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDb25zdGFudHNcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKi9cclxuXHJcbiAgdmFyIE5BTUUgPSAncG9wb3Zlcic7XHJcbiAgdmFyIFZFUlNJT04gPSAnNC4wLjAtYWxwaGEuNic7XHJcbiAgdmFyIERBVEFfS0VZID0gJ2JzLnBvcG92ZXInO1xyXG4gIHZhciBFVkVOVF9LRVkgPSAnLicgKyBEQVRBX0tFWTtcclxuICB2YXIgSlFVRVJZX05PX0NPTkZMSUNUID0gJC5mbltOQU1FXTtcclxuXHJcbiAgdmFyIERlZmF1bHQgPSAkLmV4dGVuZCh7fSwgVG9vbHRpcC5EZWZhdWx0LCB7XHJcbiAgICBwbGFjZW1lbnQ6ICdyaWdodCcsXHJcbiAgICB0cmlnZ2VyOiAnY2xpY2snLFxyXG4gICAgY29udGVudDogJycsXHJcbiAgICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJwb3BvdmVyXCIgcm9sZT1cInRvb2x0aXBcIj4nICsgJzxoMyBjbGFzcz1cInBvcG92ZXItdGl0bGVcIj48L2gzPicgKyAnPGRpdiBjbGFzcz1cInBvcG92ZXItY29udGVudFwiPjwvZGl2PjwvZGl2PidcclxuICB9KTtcclxuXHJcbiAgdmFyIERlZmF1bHRUeXBlID0gJC5leHRlbmQoe30sIFRvb2x0aXAuRGVmYXVsdFR5cGUsIHtcclxuICAgIGNvbnRlbnQ6ICcoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb24pJ1xyXG4gIH0pO1xyXG5cclxuICB2YXIgQ2xhc3NOYW1lID0ge1xyXG4gICAgRkFERTogJ2ZhZGUnLFxyXG4gICAgU0hPVzogJ3Nob3cnXHJcbiAgfTtcclxuXHJcbiAgdmFyIFNlbGVjdG9yID0ge1xyXG4gICAgVElUTEU6ICcucG9wb3Zlci10aXRsZScsXHJcbiAgICBDT05URU5UOiAnLnBvcG92ZXItY29udGVudCdcclxuICB9O1xyXG5cclxuICB2YXIgRXZlbnQgPSB7XHJcbiAgICBISURFOiAnaGlkZScgKyBFVkVOVF9LRVksXHJcbiAgICBISURERU46ICdoaWRkZW4nICsgRVZFTlRfS0VZLFxyXG4gICAgU0hPVzogJ3Nob3cnICsgRVZFTlRfS0VZLFxyXG4gICAgU0hPV046ICdzaG93bicgKyBFVkVOVF9LRVksXHJcbiAgICBJTlNFUlRFRDogJ2luc2VydGVkJyArIEVWRU5UX0tFWSxcclxuICAgIENMSUNLOiAnY2xpY2snICsgRVZFTlRfS0VZLFxyXG4gICAgRk9DVVNJTjogJ2ZvY3VzaW4nICsgRVZFTlRfS0VZLFxyXG4gICAgRk9DVVNPVVQ6ICdmb2N1c291dCcgKyBFVkVOVF9LRVksXHJcbiAgICBNT1VTRUVOVEVSOiAnbW91c2VlbnRlcicgKyBFVkVOVF9LRVksXHJcbiAgICBNT1VTRUxFQVZFOiAnbW91c2VsZWF2ZScgKyBFVkVOVF9LRVlcclxuICB9O1xyXG5cclxuICAvKipcclxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBDbGFzcyBEZWZpbml0aW9uXHJcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICovXHJcblxyXG4gIHZhciBQb3BvdmVyID0gZnVuY3Rpb24gKF9Ub29sdGlwKSB7XHJcbiAgICBfaW5oZXJpdHMoUG9wb3ZlciwgX1Rvb2x0aXApO1xyXG5cclxuICAgIGZ1bmN0aW9uIFBvcG92ZXIoKSB7XHJcbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQb3BvdmVyKTtcclxuXHJcbiAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfVG9vbHRpcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBvdmVycmlkZXNcclxuXHJcbiAgICBQb3BvdmVyLnByb3RvdHlwZS5pc1dpdGhDb250ZW50ID0gZnVuY3Rpb24gaXNXaXRoQ29udGVudCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZ2V0VGl0bGUoKSB8fCB0aGlzLl9nZXRDb250ZW50KCk7XHJcbiAgICB9O1xyXG5cclxuICAgIFBvcG92ZXIucHJvdG90eXBlLmdldFRpcEVsZW1lbnQgPSBmdW5jdGlvbiBnZXRUaXBFbGVtZW50KCkge1xyXG4gICAgICByZXR1cm4gdGhpcy50aXAgPSB0aGlzLnRpcCB8fCAkKHRoaXMuY29uZmlnLnRlbXBsYXRlKVswXTtcclxuICAgIH07XHJcblxyXG4gICAgUG9wb3Zlci5wcm90b3R5cGUuc2V0Q29udGVudCA9IGZ1bmN0aW9uIHNldENvbnRlbnQoKSB7XHJcbiAgICAgIHZhciAkdGlwID0gJCh0aGlzLmdldFRpcEVsZW1lbnQoKSk7XHJcblxyXG4gICAgICAvLyB3ZSB1c2UgYXBwZW5kIGZvciBodG1sIG9iamVjdHMgdG8gbWFpbnRhaW4ganMgZXZlbnRzXHJcbiAgICAgIHRoaXMuc2V0RWxlbWVudENvbnRlbnQoJHRpcC5maW5kKFNlbGVjdG9yLlRJVExFKSwgdGhpcy5nZXRUaXRsZSgpKTtcclxuICAgICAgdGhpcy5zZXRFbGVtZW50Q29udGVudCgkdGlwLmZpbmQoU2VsZWN0b3IuQ09OVEVOVCksIHRoaXMuX2dldENvbnRlbnQoKSk7XHJcblxyXG4gICAgICAkdGlwLnJlbW92ZUNsYXNzKENsYXNzTmFtZS5GQURFICsgJyAnICsgQ2xhc3NOYW1lLlNIT1cpO1xyXG5cclxuICAgICAgdGhpcy5jbGVhbnVwVGV0aGVyKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHByaXZhdGVcclxuXHJcbiAgICBQb3BvdmVyLnByb3RvdHlwZS5fZ2V0Q29udGVudCA9IGZ1bmN0aW9uIF9nZXRDb250ZW50KCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1jb250ZW50JykgfHwgKHR5cGVvZiB0aGlzLmNvbmZpZy5jb250ZW50ID09PSAnZnVuY3Rpb24nID8gdGhpcy5jb25maWcuY29udGVudC5jYWxsKHRoaXMuZWxlbWVudCkgOiB0aGlzLmNvbmZpZy5jb250ZW50KTtcclxuICAgIH07XHJcblxyXG4gICAgLy8gc3RhdGljXHJcblxyXG4gICAgUG9wb3Zlci5falF1ZXJ5SW50ZXJmYWNlID0gZnVuY3Rpb24gX2pRdWVyeUludGVyZmFjZShjb25maWcpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGRhdGEgPSAkKHRoaXMpLmRhdGEoREFUQV9LRVkpO1xyXG4gICAgICAgIHZhciBfY29uZmlnID0gKHR5cGVvZiBjb25maWcgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGNvbmZpZykpID09PSAnb2JqZWN0JyA/IGNvbmZpZyA6IG51bGw7XHJcblxyXG4gICAgICAgIGlmICghZGF0YSAmJiAvZGVzdHJveXxoaWRlLy50ZXN0KGNvbmZpZykpIHtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghZGF0YSkge1xyXG4gICAgICAgICAgZGF0YSA9IG5ldyBQb3BvdmVyKHRoaXMsIF9jb25maWcpO1xyXG4gICAgICAgICAgJCh0aGlzKS5kYXRhKERBVEFfS0VZLCBkYXRhKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgaWYgKGRhdGFbY29uZmlnXSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gbWV0aG9kIG5hbWVkIFwiJyArIGNvbmZpZyArICdcIicpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZGF0YVtjb25maWddKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgX2NyZWF0ZUNsYXNzKFBvcG92ZXIsIG51bGwsIFt7XHJcbiAgICAgIGtleTogJ1ZFUlNJT04nLFxyXG5cclxuXHJcbiAgICAgIC8vIGdldHRlcnNcclxuXHJcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICAgIHJldHVybiBWRVJTSU9OO1xyXG4gICAgICB9XHJcbiAgICB9LCB7XHJcbiAgICAgIGtleTogJ0RlZmF1bHQnLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gRGVmYXVsdDtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBrZXk6ICdOQU1FJyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIE5BTUU7XHJcbiAgICAgIH1cclxuICAgIH0sIHtcclxuICAgICAga2V5OiAnREFUQV9LRVknLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gREFUQV9LRVk7XHJcbiAgICAgIH1cclxuICAgIH0sIHtcclxuICAgICAga2V5OiAnRXZlbnQnLFxyXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgICByZXR1cm4gRXZlbnQ7XHJcbiAgICAgIH1cclxuICAgIH0sIHtcclxuICAgICAga2V5OiAnRVZFTlRfS0VZJyxcclxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIEVWRU5UX0tFWTtcclxuICAgICAgfVxyXG4gICAgfSwge1xyXG4gICAgICBrZXk6ICdEZWZhdWx0VHlwZScsXHJcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xyXG4gICAgICAgIHJldHVybiBEZWZhdWx0VHlwZTtcclxuICAgICAgfVxyXG4gICAgfV0pO1xyXG5cclxuICAgIHJldHVybiBQb3BvdmVyO1xyXG4gIH0oVG9vbHRpcCk7XHJcblxyXG4gIC8qKlxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIGpRdWVyeVxyXG4gICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqL1xyXG5cclxuICAkLmZuW05BTUVdID0gUG9wb3Zlci5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gICQuZm5bTkFNRV0uQ29uc3RydWN0b3IgPSBQb3BvdmVyO1xyXG4gICQuZm5bTkFNRV0ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICQuZm5bTkFNRV0gPSBKUVVFUllfTk9fQ09ORkxJQ1Q7XHJcbiAgICByZXR1cm4gUG9wb3Zlci5falF1ZXJ5SW50ZXJmYWNlO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBQb3BvdmVyO1xyXG59KGpRdWVyeSk7XHJcblxyXG59KCk7XHJcbiJdfQ==
